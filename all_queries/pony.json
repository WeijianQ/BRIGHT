[
    "I will use the programming language pony.\nProblem:\nPlease write a program that determines whether a non-negative number is prime or not. Use lowercase to output to boolean.\n\nHere is the code template:\nfun isPrime(num: USize): bool =>\n...",
    "I will use the programming language pony.\nProblem:\nPlease write a program that calculates the number of leap years between 1 and given year (include).\n\nHere is the code template:\nfun countLeapYear(num: USize) : USize =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function that will convert an integer into string format. For example, 0 -> \"0\"; 1000 -> \"1,000\"; 1000000 -> \"1,000,000\".\n\nHere is the code template:\nfun format_string(num: USize): String =>\n...",
    "I will use the programming language pony.\nProblem:\nA string s is nice if, for every letter of the alphabet that s contains, it appears both in uppercase and lowercase. For example, \"abABB\" is nice because 'A' and 'a' appear, and 'B' and 'b' appear. However, \"abA\" is not because 'b' appears, but 'B' does not. Given a string s, write a function that returns the longest substring of s that is nice. If there are multiple, return the substring of the earliest occurrence. If there are none, return an empty string.\n\nHere is the code template:\nfun longestNiceSubstring(s: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string. Write a funtion that returns the merged string.\n\nHere is the code template:\nfun mergeAlternately(word1: String, word2: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an alphanumeric string s, write a function that returns the second largest numerical digit that appears in s, or -1 if it does not exist. An alphanumeric string is a string consisting of lowercase English letters and digits.\n\nHere is the code template:\nfun secondHighest(s: String): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an array of positive integers nums, write a function that returns the maximum possible sum of an ascending subarray in nums. A subarray is defined as a contiguous sequence of numbers in an array. A subarray [numsl, numsl+1, ..., numsr-1, numsr] is ascending if for all i where l <= i < r, numsi  < numsi+1. Note that a subarray of size 1 is ascending.\n\nHere is the code template:\nfun maxAscendingSum(nums: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given a string word that consists of digits and lowercase English letters. You will replace every non-digit character with a space. For example, \"a123bc34d8ef34\" will become \" 123  34 8  34\". Notice that you are left with some integers that are separated by at least one space: \"123\", \"34\", \"8\", and \"34\". Write a function that returns the number of different integers after performing the replacement operations on word. Two integers are considered different if their decimal representations without any leading zeros are different.\n\nHere is the code template:\nfun numDifferentIntegers(word: String): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nA sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each of the words consists of only uppercase and lowercase English letters (no punctuation). You are given a sentence s\u200b\u200b\u200b\u200b\u200b\u200b and an integer k\u200b\u200b\u200b\u200b\u200b\u200b. You want to truncate s\u200b\u200b\u200b\u200b\u200b\u200b such that it contains only the first k\u200b\u200b\u200b\u200b\u200b\u200b words. Return s\u200b\u200b\u200b\u200b\u200b\u200b after truncating it.\n\nHere is the code template:\nfun truncateSentence(s: String, k: I32): String =>\n...",
    "I will use the programming language pony.\nProblem:\nThere is a function signFunc(x) that returns: * 1 if x is positive. * -1 if x is negative. * 0 if x is equal to 0. You are given an integer array nums. Let product be the product of all values in the array nums. Write a function that returns signFunc(product).\n\nHere is the code template:\nfun arraySign(nums: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given an integer array nums (0-indexed). In one operation, you can choose an element of the array and increment it by 1. For example, if nums = [1,2,3], you can choose to increment nums[1] to make nums = [1,3,3]. Write a function that returns the minimum number of operations needed to make nums strictly increasing. An array nums is strictly increasing if nums[i] < nums[i+1] for all 0 <= i < nums.length - 1. An array of length 1 is trivially strictly increasing.\n\nHere is the code template:\nfun minOperations(nums: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nA pangram is a sentence where every letter of the English alphabet appears at least once. Given a string sentence containing only lowercase English letters, write a function that returns true if sentence is a pangram, or false otherwise.\n\nHere is the code template:\nfun checkIfPangram(s: String): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an integer n (in base 10) and a base k, write a function that returns the sum of the digits of n after converting n from base 10 to base k. After converting, each digit should be interpreted as a base 10 number, and the sum should be returned in base 10.\n\nHere is the code template:\nfun sumBase(n: I32, k: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function to determine if a string consisting of alphabets is a palindrome.\n\nHere is the code template:\nfun is_palindrome(str: String): Bool ? =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given a 0-indexed string s that has lowercase English letters in its even indices and digits in its odd indices. There is a function shift(c, x), where c is a character and x is a digit, that returns the xth character after c. For example, shift('a', 5) = 'f' and shift('x', 0) = 'x'. For every odd index i, you want to replace the digit s[i] with shift(s[i-1], s[i]). Write a function that returns s after replacing all digits. It is guaranteed that shift(s[i-1], s[i]) will never exceed 'z'.\n\nHere is the code template:\nfun replaceDigits(s: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given a 2D integer array nums where each nums[i] = [birthi, deathi] indicates the birth and death years of the ith person. The population of some year x is the number of people alive during that year. The ith person is counted in year x's population if x is in the inclusive range [birthi, deathi - 1]. Note that the person is not counted in the year that they die. Write a function that returns the earliest year with the maximum population.\n\nHere is the code template:\nfun maximumPopulation(nums: Array[Array[I32]]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nA sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each word consists of lowercase and uppercase English letters. A sentence can be shuffled by appending the 1-indexed word position to each word then rearranging the words in the sentence. For example, the sentence \"This is a sentence\" can be shuffled as \"sentence4 a3 is2 This1\" or \"is2 sentence4 This1 a3\". Given a shuffled sentence s containing no more than 9 words, write a function to reconstruct and return the original sentence.\n\nHere is the code template:\nfun sortSentence(s: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a list of integers and an integer k, write a function to determine if any two numbers from the list add up to k.\n\nHere is the code template:\nfun two_sum(nums: Array[I32], target: I32): Bool =>\nvar hashmap = Map[I32, I32]()\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function that takes seconds as input and returns the string format Hour:Minute:Second.\n\nHere is the code template:\nfun humanReadable(seconds: U32): String =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function to find the position (using 0-index) of the first occurrence of the target character in the string s. If the target character does not appear in the string s, return the length of the string.\n\nHere is the code template:\nfun firstOccur(s: String, target: U8): U32 =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function that takes 2 numbers, a and b and returns their sum. However, if the two numbers have the same remainder when divided by 3, then return \"BOTH\".\n\nHere is the code template:\nfun getSum(a: U32, b: U32) : String =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function to find the largest and smallest number from an array.\n\nHere is the code template:\nfun minMax(arr: Array[ISize]): (ISize, ISize) =>\n...\n(min, max)",
    "I will use the programming language pony.\nProblem:\nWrite a function that finds the first most frequently occurring element and the occurrence times in an array.\n\nHere is the code template:\nfun mostFrequent(nums: Array[I32]) : (I32, U32) =>\nvar hashmap = Map[I32, U32]()\n...\n(most_frequent_element, times)",
    "I will use the programming language pony.\nProblem:\nWrite a function that takes a positive integer n, and returns the factorial sum from 1 to n. For example s(4) = 1! + 2! + 3! + 4! = 1 + 2 + 6 + 24 = 33.\n\nHere is the code template:\nfun s(n: USize) : USize =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function to get the longest common prefix of a list of strings.\n\nHere is the code template:\nfun longest_common_prefix(strings: Array[String]) : String =>\n...",
    "I will use the programming language pony.\nProblem:\nPlease write a program that outputs an inverted triangle shape formed by \"*\" Input format: A line representing the line number of the triangle Output format: an inverted triangle shape formed by \"*\". For example, if input 4, the result is like below: * * * *  * * *   * *    *\n\nHere is the code template:\nfun printTriangle(num: USize, env: Env) =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function that takes a number. If the number can be divided by both 3 and 5, print \"FizzBuzz\"; if one number can only be divided by only 3, print \"Fizz\"; if one number can only be divided by only 5, print \"Buzz\"; if one number cannot be divided by 3 or 5, print the number itself.\n\nHere is the code template:\nfun fizzBuzz(num: USize, env: Env)  =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function that takes an array of integers, and returns indices (0-index) of the two numbers that add to target. Return (-1, -1) if there is none. Minimize the first index and then the second.\n\nHere is the code template:\nfun two_sum(nums: Array[I32], target: I32): (USize, USize) =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a string, find the leftmost longest substring that contains at most two unique characters.\n\nHere is the code template:\nfun longestSubstring(str: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function that inserts the sub_string into the main_string at the given position (0-index).\n\nHere is the code template:\nfun insert_substring(main_string: String, sub_string: String, position: U32): String =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given an array of integers and a number k. Write a function to determine whether there are two distinct indices i and j such that a[i] = a[j] and the absolute difference between i and j is at most k.\n\nHere is the code template:\nfun isValidPair(nums: Array[ISize], k: USize): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nThere are n people in a line queuing to buy tickets, where the 0th person is at the front of the line and the (n - 1)th person is at the back of the line.\nYou are given a 0-indexed integer array tickets of length n where the number of tickets that the ith person would like to buy is tickets[i].\nEach person takes exactly 1 second to buy a ticket. A person can only buy 1 ticket at a time and has to go back to the end of the line (which happens instantaneously) in order to buy more tickets. If a person does not have any tickets left to buy, the person will leave the line.\nWrite a function that returns the time taken for the person at position k (0-indexed) to finish buying tickets.\n\nHere is the code template:\nfun timeRequiredToBuy(tickets: Array[I32], k: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an array of integers, write a function to find the first element that appears only once.\n\nHere is the code template:\nfun singleOne(nums: Array[ISize]): ISize =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.\n\nHere is the code template:\nfun reverseString(words: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function that takes a string consisting of alphabets as input, and then outputs the string twice in a row, first all uppercase and then all lowercase, separated by a space.\n\nHere is the code template:\nfun outputTwice(words: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function to calculate the sum of two given integers. If the sum is in the range 50 to 79 (include), return 65, if the sum is less than 50, return 50, otherwise return the sum of two integers\n\nHere is the code template:\nfun add_two(num1: I32, num2: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a program that takes a list of numbers and returns a new list with all of the even numbers doubled. The input is a single line seperated by spaces.\n\nHere is the code template:\nfun doubleEven(nums: Array[USize]):Array[USize] =>\n...",
    "I will use the programming language pony.\nProblem:\nI have a string s and I want to split the string into substrings of the length n, except for the last substring which may be shorter. For example, if I have string \"abcd\" and I want to split it into substrings of length 2, I want the result to be \"ab\" and \"cd\".\n\nHere is the code template:\nfun splitString(s: String, n: ISize): Array[String] =>\n...",
    "I will use the programming language pony.\nProblem:\nIf choice is 1, print \"Tango\"; If choice is 2, print \"Foxtrot\"; If choice is 3, print \"Charlie\"; If choice is 4, print \"Bravo\"; If choice is 5, print \"Echo\"; Otherwise, print an empty line.\n\nHere is the code template:\nfun outputDanceType(env: Env, choice: U32) =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven two positive integers A and B, find the number of their common factors. For example, if A = 8 and B = 12. Since the factors of A are 1, 2, 4, 8, the factors of B are 1, 2, 3, 4, 6, 12, their common factors are: 1, 2, 4. The number of their common factors is 3.\n\nHere is the code template:\nfun commonFactors(A: I32, B: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven two integer vectors, output their inner product.\n\nHere is the code template:\nfun innerProduct(nums1: Array[ISize], nums2: Array[ISize]): ISize =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a string of lowercase letters, you need to find the score of this string. Each letter of a word scores points according to it's position in the alphabet: a = 1, b = 2, c = 3 etc. The score of this string is the sum of scores of each letter.\n\nHere is the code template:\nfun stringScore(s: String): USize =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function to calculate the sum of input integers.\n\nHere is the code template:\nfun sumArray(nums: Array[ISize]): ISize =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a string s, find the first non-repeating character in it and return its index (0-index). If it doesn't exist, return -1.\n\nHere is the code template:\nfun first_unique_char(s: String): USize =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a string s and an integer count. Write a function to repeat the given string s exactly count times.\n\nHere is the code template:\nfun repeatString(s: String, count: USize): String =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite codes to print the numbers from 0 to n (include), skipping multiples of 2.\n\nHere is the code template:\nvar n = read_from_file(env)\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function that finds the first longest string in a list of strings\n\nHere is the code template:\nfun longestString(s_list: Array[String]): String =>\n...",
    "I will use the programming language pony.\nProblem:\nPlease write code that calculates the celcius degree when given a Fahrenheit degree following the formula: c=(5*(f-32))/9. Output at most 6 significant Figures with no tailing zeros.\n\nHere is the code template:\nvar c = ...",
    "I will use the programming language pony.\nProblem:\nWhen I want to iterate over a given array, the following codes do not pass the compiler:\n```\nactor Main\n   new create(env: Env) =>\n      var arr: Array[USize] = [1; 2; 3; 4; 5; 6]\n      // iterate over arr and output each elements\n      for i in Range(0, arr.size()) do \n         env.out.print(arr(i).string())\n      end \n```\nPlease fix the bug by re-writing the loop.\n\nHere is the code template:\nactor Main\n   new create(env: Env) =>\n      var arr: Array[USize] = [1; 2; 3; 4; 5; 6]\n      ...",
    "I will use the programming language pony.\nProblem:\nGiven a string s consisting of words and spaces, write a function to find the length of the last word in the string. A word is a maximal substring consisting of non-space characters only. Assume the last character is not a space.\n\nHere is the code template:\nfun last_word_length(s: String): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an integer array nums, write a function that returns true if any value appears at least twice in the array, and returns false if every element is distinct.\n\nHere is the code template:\nfun containsDuplicate(nums: Array[I32]): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an integer n, write a function that returns true if it is a power of two, otherwise, returns false.\n\nHere is the code template:\nfun isPowerOfTwo(n: I32): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an integer array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.\n\nHere is the code template:\nfun moveZeroes(nums: Array[I32]): Array[I32] =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an integer array nums, write a function to return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number.\n\nHere is the code template:\nfun thirdMax(nums: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a string s, write a function to check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.\n\nHere is the code template:\nfun repeatedSubstringPattern(s: String): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a binary array nums, write a function that returns the maximum number of consecutive 1's in the array.\n\nHere is the code template:\nfun findMaxConsecutiveOnes(nums: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an integer num, write a function that returns a string of its base 7 representation.\n\nHere is the code template:\nfun convertToBase7(num: I32): String =>\n...",
    "I will use the programming language pony.\nProblem:\nA perfect number is a positive integer that is equal to the sum of its positive divisors, excluding the number itself. For example, 28 is a perfect number because 28 = 1 + 2 + 4 + 7 + 14, and 1, 2, 4, 7, and 14 are all divisors of 28. Given an integer n, write a function that returns true if n is a perfect number, otherwise returns false.\n\nHere is the code template:\nfun checkPerfectNumber(num: I32): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nPlease write a program that will read in a three-digit number num and print out the odevity of each digit of num, i.e., O for odd digit and E for even digit.\n\nHere is the code template:\nvar num: U32 = read_from_file(env)\nenv.out.print(...)\nenv.out.print(...)\nenv.out.print(...)",
    "I will use the programming language pony.\nProblem:\nGiven a string s, write a function that returns the string after replacing every uppercase letter with the same lowercase letter.\n\nHere is the code template:\nfun toLowerCase(s: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven two strings s and goal, write a function that returns true if and only if s can become goal after some number of shifts on s. A shift on s consists of moving the leftmost character of s to the rightmost position. For example, if s = \"abcde\", then it will be \"bcdea\" after one shift.\n\nHere is the code template:\nfun rotateString(s: String, goal: String): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven two strings s and goal, write a function that returns true if you can swap two letters in s so the result is equal to goal, otherwise, returns false.\n\nHere is the code template:\nfun buddyStrings(s: String, goal: String): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nAn array is monotonic if it is either monotone increasing or monotone decreasing. An array nums is monotone increasing if for all i <= j, nums[i] <= nums[j]. An array nums is monotone decreasing if for all i <= j, nums[i] >= nums[j]. Given an integer array nums, write a function that returns true if the given array is monotonic, or false otherwise.\n\nHere is the code template:\nfun isMonotonic(nums: Array[I32]): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a string s, write a function that reverses the string according to the following rules: * All the characters that are not English letters remain in the same position. * All the English letters (lowercase or uppercase) should be reversed. For example, if the input is \"ab-cd\", the function should return \"dc-ba\" after reversing the string following the rules above.\n\nHere is the code template:\nfun reverseOnlyLetters(s: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nYour friend is typing his name into a keyboard. Sometimes, when typing a character c, the key might get long pressed, and the character will be typed 1 or more times. You examine the typed characters of the keyboard. Write a function that returns true if it is possible that it was your friends name, with some characters (possibly none) being long pressed, otherwise, returns false.\n\nHere is the code template:\nfun isLongPressedName(name: String, typed: String): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nIn an alien language, surprisingly, they also use English lowercase letters, but possibly in a different order. The order of the alphabet is some permutation of lowercase letters. Given a sequence of words written in the alien language, and the order of the alphabet, write a function that returns true if and only if the given words are sorted lexicographically in this alien language, otherwise, returns false. The inputs strings are seperated by lines, with the last line being the order of alphabet.\n\nHere is the code template:\nfun isAlienSorted(words: Array[String], order: String): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an integer array nums and an integer k, modify the array in the following way: * choose an index i and replace nums[i] with -nums[i]. * You should apply this process exactly k times. You may choose the same index i multiple times. Write a function that returns the largest possible sum of the array after modifying it in this way. k is the last line of the input.\n\nHere is the code template:\nfun largestSumAfterKNegations(nums: Array[I32], k: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nA valid parentheses string is either empty \"\", \"(\" + A + \")\", or A + B, where A and B are valid parentheses strings, and + represents string concatenation. For example, \"\", \"()\", \"(())()\", and \"(()(()))\" are all valid parentheses strings. A valid parentheses string s is primitive if it is nonempty, and there does not exist a way to split it into s = A + B, with A and B nonempty valid parentheses strings. Given a valid parentheses string s, consider its primitive decomposition: s = P1 + P2 + ... + Pk, where Pi are primitive valid parentheses strings. Write a function that returns s after removing the outermost parentheses of every primitive string in the primitive decomposition of s.\n\nHere is the code template:\nfun removeOuterParentheses(s: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nAlice and Bob take turns playing a game, with Alice starting first. Initially, there is a number n on the chalkboard. On each player's turn, that player makes a move consisting of: * Choosing any x with 0 < x < n and n % x == 0. * Replacing the number n on the chalkboard with n - x. * Also, if a player cannot make a move, they lose the game. Write a function that returns true if and only if Alice wins the game, assuming both players play optimally.\n\nHere is the code template:\nfun divisorGame(n: I32): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nI treat array as a stack, and I am using push/pop apis of stacks:\n```\nactor Main\n   new create(env: Env) =>\n        var arr: Array[USize] = read_from_file(env)\n        // fetch the last element and print it out\n        for i in Range[USize](0, 5) do\n            arr.push(i)\n        end\n        while arr.size() > 0 do\n            env.out.print(arr.pop().string())\n        end\n```\nPlease fix the bug by re-writing the while loop.\n\nHere is the code template:\nwhile arr.size() > 0 do\n    ...\nend",
    "I will use the programming language pony.\nProblem:\nGiven an array of three points where points[i] = [xi, yi] represents a point on the X-Y plane, write a function that returns true if these points are a boomerang, otherwise, returns false. A boomerang is a set of three points that are all distinct and not in a straight line.\n\nHere is the code template:\nfun isBoomerang(points: Array[Array[I32]]): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given an array of integers stones where stones[i] is the weight of the ith stone. We are playing a game with the stones. On each turn, we choose the heaviest two stones and smash them together. Suppose the heaviest two stones have weights x and y with x <= y. The result of this smash is: If x == y, both stones are destroyed, and If x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x. At the end of the game, there is at most one stone left. Write a function that returns the weight of the last remaining stone. If there are no stones left, return 0.\n\nHere is the code template:\nfun lastStoneWeight(stones: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given a string s consisting of lowercase English letters. A duplicate removal consists of choosing two adjacent and equal letters and removing them. We repeatedly make duplicate removals on s until we no longer can. Write a function that returns the final string after all such duplicate removals have been made. It can be proven that the answer is unique.\n\nHere is the code template:\nfun removeDuplicates(s: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nA school is trying to take an annual photo of all the students. The students are asked to stand in a single file line in non-decreasing order by height. Let this ordering be represented by the integer array expected where expected[i] is the expected height of the ith student in line. You are given an integer array heights representing the current order that the students are standing in. Each heights[i] is the height of the ith student in line (0-indexed). Write a function that returns the number of indices where heights[i] != expected[i]. The array is seperated by lines in the input file.\n\nHere is the code template:\nfun heightChecker(heights: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nFor two strings s and t, we say \"t divides s\" if and only if s = t + ... + t (i.e., t is concatenated with itself one or more times). Given two strings str1 and str2, write a function that returns the largest string x such that x divides both str1 and str2. Return an empty string if there is none.\n\nHere is the code template:\nfun gcdOfStrings(str1: String, str2: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a fixed-length integer array arr, write a function to duplicate each occurrence of zero, and shift the remaining elements to the right. Note that elements beyond the length of the original array are not written.\n\nHere is the code template:\nfun duplicateZeros(arr: Array[I32]): Array[I32] =>\n...",
    "I will use the programming language pony.\nProblem:\nWe distribute some number of candies, to a row of n = num_people people in the following way: * We then give 1 candy to the first person, 2 candies to the second person, and so on until we give n candies to the last person. * Then, we go back to the start of the row, giving n + 1 candies to the first person, n + 2 candies to the second person, and so on until we give 2 * n candies to the last person. * This process repeats (with us giving one more candy each time, and moving to the start of the row after we reach the end) until we run out of candies.  The last person will receive all of our remaining candies (not necessarily one more than the previous gift). Write a function that returns an array (of length num_people and sum candies) that represents the final distribution of candies.\n\nHere is the code template:\nfun distributeCandies(candies: I32, num_people: I32): Array[I32] =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a valid (IPv4) IP address, write a function that returns a defanged version of that IP address. A defanged IP address replaces every period \".\" with \"[.]\".\n\nHere is the code template:\nfun defangIPaddr(address: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either (a == c and b == d), or (a == d and b == c) - that is, one domino can be rotated to be equal to another domino. Write a function that return the number of pairs (i, j) for which 0 <= i < j < dominoes.length, and dominoes[i] is equivalent to dominoes[j].\n\nHere is the code template:\nfun numEquivDominoPairs(dominoes: Array[Array[I32]]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given an array of strings words and a string chars. A string is good if it can be formed by characters from chars (each character can only be used once). Write a function that returns the sum of lengths of all good strings in words. chars is the last line of input.\n\nHere is the code template:\nfun countCharacters(words: Array[String], chars: String): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function that returns the number of vowels in the string. Vowels in this case are 'a', 'e', 'i', 'o', 'u' and their uppercases. Here, 'y' and 'Y' are also vowels, but only when it is at the end of the given word.\n\nHere is the code template:\nfun vowels_count(word: String): U32? =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an array of integers arr, write a function that returns true if the number of occurrences of each value in the array is unique or false otherwise.\n\nHere is the code template:\nfun uniqueOccurrences(arr: Array[I32]): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nBalanced strings are those that have an equal quantity of 'L' and 'R' characters. Given a balanced string s, split it into some number of substrings such that each substring is balanced. Write a function that returns the maximum number of balanced strings you can obtain.\n\nHere is the code template:\nfun balancedStringSplit(s: String): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an integer number n, write a function that returns the difference between the product of its digits and the sum of its digits. For example, if n = 234, product of digits = 2 * 3 * 4 = 24, sum of digits = 2 + 3 + 4 = 9, result = 24 - 9 = 15\n\nHere is the code template:\nfun subtractProductAndSum(n: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time. Write a function to return that integer.\n\nHere is the code template:\nfun findSpecialInteger(arr: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an array nums of integers, write a function that returns how many of them contain an even number of digits.\n\nHere is the code template:\nfun findNumbers(nums: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an array arr, replace every element in that array with the greatest element among the elements to its right, and replace the last element with -1. Write a function that returns the array after replacement.\n\nHere is the code template:\nfun replaceElements(arr: Array[I32]): Array[I32] =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given a string s formed by digits and '#'. We want to map s to English lowercase characters as follows: * Characters ('a' to 'i') are represented by ('1' to '9') respectively. * Characters ('j' to 'z') are represented by ('10#' to '26#') respectively. Write a function that returns the string formed after mapping.\n\nHere is the code template:\nfun freqAlphabets(s: String): String =>\n...",
    "I will use the programming language pony.\nProblem:\nWe are given a list nums of integers representing a list compressed with run-length encoding. Consider each adjacent pair of elements [freq, val] = [nums[2*i], nums[2*i+1]] (with i >= 0).  For each such pair, there are freq elements with value val concatenated in a sublist. Concatenate all the sublists from left to right to generate the decompressed list. Write a function that returns the decompressed list.\n\nHere is the code template:\nfun decompressRLElist(arr: Array[I32]): Array[I32] =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given a positive integer num consisting only of digits 6 and 9. Write a function that returns the maximum number you can get by changing at most one digit (6 becomes 9, and 9 becomes 6).\n\nHere is the code template:\nfun maximum69Number(num: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an array of integers arr, replace each element with its rank. The rank represents how large the element is. The rank has the following rules: * Rank is an integer starting from 1. * The larger the element, the larger the rank. If two elements are equal, their rank must be the same. * Rank should be as small as possible. Write a function that returns the array with each element replaced with its rank.\n\nHere is the code template:\nfun arrayRankTransform(arr: Array[I32]): Array[I32] =>\n...",
    "I will use the programming language pony.\nProblem:\nWrite a function that inputs a positive integer n and find the nth Fibonacci number. The first fibonacci number (n = 1) is 0.\n\nHere is the code template:\nfun fib(num: USize) : USize =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an array arr of integers, check if there exist two indices i and j such that : * i != j * 0 <= i, j < arr.length * arr[i] == 2 * arr[j] Write a function that returns true if there exists, or false otherwise.\n\nHere is the code template:\nfun checkIfExist(nums: Array[I32]): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i]. Write a function that returns the answer in an array.\n\nHere is the code template:\nfun smallerNumbersThanCurrent(arr: Array[I32]): Array[I32] =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given an integer n. Each number from 1 to n is grouped according to the sum of its digits. Write a function that returns the number of groups that have the largest size.\n\nHere is the code template:\nfun countLargestGroup(num: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a string s of zeros and ones, write a function that returns the maximum score after splitting the string into two non-empty substrings (i.e. left substring and right substring). The score after splitting a string is the number of zeros in the left substring plus the number of ones in the right substring.\n\nHere is the code template:\nfun maxScore(s: String): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nThe power of the string is the maximum length of a non-empty substring that contains only one unique character. Given a string s, write a function that returns the power of s.\n\nHere is the code template:\nfun maxPower(s: String): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]\u2026nums[i]). Write a function that returns the running sum of nums.\n\nHere is the code template:\nfun runningSum(arr: Array[I32]): Array[I32] =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given an integer n and an integer start. Define an array nums where nums[i] = start + 2 * i (0-indexed) and n == nums.length. Write a function that returns the bitwise XOR of all elements of nums.\n\nHere is the code template:\nfun xorOperation(n: I32, start: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given an array of unique integers salary where salary[i] is the salary of the ith employee. Write a function that returns the average salary of employees excluding the minimum and maximum salary. Output at most 1 decimal place. Don't output decimal places for integers.\n\nHere is the code template:\nfun average(nums: Array[I32]): F32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven an array of integers nums, write a function that returns the number of good pairs. A pair (i, j) is called good if nums[i] == nums[j] and i < j.\n\nHere is the code template:\nfun numIdenticalPairs(nums: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven two non-negative integers low and high. Write a function that returns the count of odd numbers between low and high (inclusive).\n\nHere is the code template:\nfun countOdds(low: I32, high: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nA triangle is usually classified into three different types: An equilateral triangle, where all three sides are equal; An isosceles triangle, where two sides are equal; A scalene triangle, where no sides are equal Write codes that receive three lengths of a triangle's sides as inputs, and outputs the type as one of Equilateral, Isosceles or Scalene.\n\nHere is the code template:\n(var x, var y, var z) = read_from_file(env)\n...",
    "I will use the programming language pony.\nProblem:\nGiven an integer array arr, write a function that returns true if there are three consecutive odd numbers in the array. Otherwise, returns false.\n\nHere is the code template:\nfun threeConsecutiveOdds(arr: Array[I32]): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven a string s, write a function that returns the length of the longest substring between two equal characters, excluding the two characters. If there is no such substring return -1. A substring is a contiguous sequence of characters within a string.\n\nHere is the code template:\nfun maxLengthBetweenEqualCharacters(s: String): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nGiven two string arrays word1 and word2, write a function that returns true if the two arrays represent the same string, and false otherwise. A string is represented by an array if the array elements concatenated in order forms the string.\n\nHere is the code template:\nfun arrayStringsAreEqual(word1: Array[String], word2: Array[String]): Bool =>\n...",
    "I will use the programming language pony.\nProblem:\nFor a string sequence, a string word is k-repeating if word concatenated k times is a substring of sequence. The word's maximum k-repeating value is the highest value k where word is k-repeating in sequence. If word is not a substring of sequence, word's maximum k-repeating value is 0. Given strings sequence and word, write a function that returns the maximum k-repeating value of word in sequence.\n\nHere is the code template:\nfun maxRepeating(sequence: String, word: String): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed. Write a function that returns the number of consistent strings in the array words. The string allowed is the last line of input.\n\nHere is the code template:\nfun countConsistentStrings(words: Array[String], allowed: String): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nThere is a biker going on a road trip. The road trip consists of n + 1 points at different altitudes. The biker starts his trip on point 0 with altitude equal 0. You are given an integer array gain of length n where gain[i] is the net gain in altitude between points i and i + 1 for all (0 <= i < n). Write a function that returns the highest altitude of a point.\n\nHere is the code template:\nfun largestAltitude(gain: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are working in a ball factory where you have n balls numbered from lowLimit up to highLimit inclusive (i.e., n == highLimit - lowLimit + 1), and an infinite number of boxes numbered from 1 to infinity. Your job at this factory is to put each ball in the box with a number equal to the sum of digits of the ball's number. For example, the ball number 321 will be put in the box number 3 + 2 + 1 = 6 and the ball number 10 will be put in the box number 1 + 0 = 1. Given two integers lowLimit and highLimit, write a function that returns the number of balls in the box with the most balls.\n\nHere is the code template:\nfun countBalls(lowLimit: I32, highLimit: I32): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given an integer array nums. The unique elements of an array are the elements that appear exactly once in the array. Write a function that returns the sum of all the unique elements of nums.\n\nHere is the code template:\nfun sumOfUnique(nums: Array[I32]): I32 =>\n...",
    "I will use the programming language pony.\nProblem:\nYou are given a string s consisting only of the characters '0' and '1'. In one operation, you can change any '0' to '1' or vice versa. The string is called alternating if no two adjacent characters are equal. For example, the string \"010\" is alternating, while the string \"0100\" is not. Write a function that returns the minimum number of operations needed to make s alternating.\n\nHere is the code template:\nfun minOperations(s: String): I32 =>\n..."
]