[
    "Can\u2019t see debug messages using RCLCPP_DEBUG\n\nI can\u2019t see messages using RCLCPP_DEBUG by terminal and rqt, but I can using other levels of verbosity( INFO, ERROR, FATAL\u2026).Selecting debug in rqt to see those messages doesn\u2019t work either.\n\nI\u2019m using rolling, working in C++ in a plugin of a controller and launching tb3_simulation_launch.py from nav2_bringup.\n\nI also saw a post here where they recommended to set the environment variable:\n\nRCLCPP_LOG_MIN_SEVERITY=RCLCPP_LOG_MIN_SEVERITY_DEBUG\n\nbut that didn\u2019t work either. It must be something silly that I\u2019m missing. Has this ever happened to you?\n\nThank you",
    "sensor fusion of lidar and camera detection\n\nI am trying to achieve sensor fusion between two sensors(camera and lidar). I have two separate node(one is publishing detection results using camera, and other is using lidar and they both are operating on a seperate deep learning based object detection methods) which are publishing detection results in the form of vision_msgs detection array.\n\nNow I want to fuse these detection results. How can I go further? I am using ros2 humble with gazebo fortress and I am trying this experiments in the simulated environment only. (no real sensors)",
    "Does gazebo_ros2_control need to be sourced/built/linked after installation via apt?\n\nAnywhere I search I can see that gazebo_ros2_control can be installed in the Humble distribution with Ubuntu 22 with just an apt command. My problem is that ros2 seems to not be finding the plugin.\n\n[gazebo-3] [Err] [Model.cc:1160] Exception occured in the Load function of plugin with name[gazebo_ros2_control] and filename[libgazebo_ros2_control.so]. This plugin will not run.\nFor example in here it is mentioned:\n\nA Gazebo plugin is added with this lines in the URDF:\n\n  <plugin filename=\"plugin_name.so\" name=\"some_name\" >\n    plugin args...\n  </plugin>\nHowever you will need to export the plugins path to advertise Gazebo where to find custom plugins. Take a look at this tutorial, you whould be able to follow it until the end, where you will find how to export and launch the plugin.\n\nI am wondering, maybe I need to source /usr/share/gazebo/ or gazebo-11 for that matter. I tried with some repositories that are instantly triable. Same error. I actually thought of using the universal robots repo, which installs in the workspace the different ros2-control, gazebo-ros2-control.\n\nls ../workspaces/ur_gazebo/src/\ngazebo_ros2_control       moveit_msgs\nlearm_ros2                ros2_control\nlearm_ros2_description    ros2_controllers\nlearm_ros2_moveit_config  Universal_Robots_ROS2_Gazebo_Simulation\nmoveit2                   ur_description\nBut I am getting the same. I got at some point a message to \"override\" paths.\n\nMy main question is: After installing gazebo_ros2_control, does ANYTHING ELSE need to be done? Adding to a CMakesList.txt, or to package.xml, setup.py? I read in here that it might be related to GAZEBO_MODEL_PATH. Something related to rosdep maybe?\n\nCode:\n\nimport os\nfrom launch_ros.actions import Node\nfrom launch import LaunchDescription\nfrom launch.substitutions import Command\nfrom launch.actions import ExecuteProcess\nfrom ament_index_python.packages import get_package_share_directory\n\n\ndef generate_launch_description():\n\n    \n    #robot_model = 'm1013'\n\n    xacro_file = get_package_share_directory('learm_ros2') + '/urdf/learm-gazebo.urdf.xacro'\n\n    \n    # Robot State Publisher \n    robot_state_publisher = Node(package    ='robot_state_publisher',\n                                 executable ='robot_state_publisher',\n                                 name       ='robot_state_publisher',\n                                 output     ='both',\n                                 parameters =[{'robot_description': Command(['xacro', ' ', xacro_file])           \n                                }])\n\n\n    # Spawn the robot in Gazebo\n    spawn_entity_robot = Node(package     ='gazebo_ros', \n                              executable  ='spawn_entity.py', \n                              arguments   = ['-entity', 'learm_ros2', '-topic', 'robot_description'],\n                              output      ='screen')\n\n    # Gazebo   \n    world_file_name = 'table_world.world'\n    world = os.path.join(get_package_share_directory('learm_ros2'), 'worlds', world_file_name)\n    gazebo_node = ExecuteProcess(cmd=['gazebo', '--verbose', world,'-s', 'libgazebo_ros_factory.so'], output='screen')\n\n\n    # These are not working....\n    \n    # load_joint_state_broadcaster = ExecuteProcess(\n    #                                   cmd=['ros2', 'control', 'load_controller', '--set-state', 'start','joint_state_broadcaster'],\n    #                                   output='screen')\n\n    \n    # load_joint_trajectory_controller = ExecuteProcess( \n    #                                   cmd=['ros2', 'control', 'load_controller', '--set-state', 'start', 'joint_trajectory_controller'], \n    #                                   output='screen')\n\n\n    return LaunchDescription([robot_state_publisher, spawn_entity_robot, gazebo_node,   ])\nComplete log:\n\nros2 launch learm_ros2 my_gazebo_controller.launch.py \n[INFO] [launch]: All log files can be found below /home/mk/.ros/log/2024-04-11-09-15-23-807156-mk-5577\n[INFO] [launch]: Default logging verbosity is set to INFO\n[INFO] [robot_state_publisher-1]: process started with pid [5579]\n[INFO] [spawn_entity.py-2]: process started with pid [5581]\n[INFO] [gazebo-3]: process started with pid [5583]\n[robot_state_publisher-1] [INFO] [1712819724.075684381] [robot_state_publisher]: got segment base_link\n[robot_state_publisher-1] [INFO] [1712819724.075815637] [robot_state_publisher]: got segment finger_left_link\n[robot_state_publisher-1] [INFO] [1712819724.075825642] [robot_state_publisher]: got segment finger_right_link\n[robot_state_publisher-1] [INFO] [1712819724.075831179] [robot_state_publisher]: got segment forearm_link\n[robot_state_publisher-1] [INFO] [1712819724.075835984] [robot_state_publisher]: got segment grip_left_link\n[robot_state_publisher-1] [INFO] [1712819724.075840953] [robot_state_publisher]: got segment grip_right_link\n[robot_state_publisher-1] [INFO] [1712819724.075845599] [robot_state_publisher]: got segment hand_link\n[robot_state_publisher-1] [INFO] [1712819724.075850323] [robot_state_publisher]: got segment humerus_link\n[robot_state_publisher-1] [INFO] [1712819724.075855091] [robot_state_publisher]: got segment shoulder_link\n[robot_state_publisher-1] [INFO] [1712819724.075859804] [robot_state_publisher]: got segment tendon_left_link\n[robot_state_publisher-1] [INFO] [1712819724.075864539] [robot_state_publisher]: got segment tendon_right_link\n[robot_state_publisher-1] [INFO] [1712819724.075869254] [robot_state_publisher]: got segment world\n[robot_state_publisher-1] [INFO] [1712819724.075873869] [robot_state_publisher]: got segment wrist_link\n[gazebo-3] Gazebo multi-robot simulator, version 11.10.2\n[gazebo-3] Copyright (C) 2012 Open Source Robotics Foundation.\n[gazebo-3] Released under the Apache 2 License.\n[gazebo-3] http://gazebosim.org\n[gazebo-3] \n[spawn_entity.py-2] [INFO] [1712819724.364785269] [spawn_entity]: Spawn Entity started\n[spawn_entity.py-2] [INFO] [1712819724.365130349] [spawn_entity]: Loading entity published on topic robot_description\n[spawn_entity.py-2] /opt/ros/humble/local/lib/python3.10/dist-packages/rclpy/qos.py:307: UserWarning: DurabilityPolicy.RMW_QOS_POLICY_DURABILITY_TRANSIENT_LOCAL is deprecated. Use DurabilityPolicy.TRANSIENT_LOCAL instead.\n[spawn_entity.py-2]   warnings.warn(\n[spawn_entity.py-2] [INFO] [1712819724.366856777] [spawn_entity]: Waiting for entity xml on robot_description\n[gazebo-3] Gazebo multi-robot simulator, version 11.10.2\n[gazebo-3] Copyright (C) 2012 Open Source Robotics Foundation.\n[gazebo-3] Released under the Apache 2 License.\n[gazebo-3] http://gazebosim.org\n[gazebo-3] \n[spawn_entity.py-2] [INFO] [1712819724.472695945] [spawn_entity]: Waiting for service /spawn_entity, timeout = 30\n[spawn_entity.py-2] [INFO] [1712819724.473441392] [spawn_entity]: Waiting for service /spawn_entity\n[gazebo-3] [INFO] [1712819724.887534290] [gazebo_ros_node]: ROS was initialized without arguments.\n[spawn_entity.py-2] [INFO] [1712819725.229984757] [spawn_entity]: Calling service /spawn_entity\n[spawn_entity.py-2] [INFO] [1712819725.546704340] [spawn_entity]: Spawn status: SpawnEntity: Successfully spawned entity [learm_ros2]\n[INFO] [spawn_entity.py-2]: process has finished cleanly [pid 5581]\n[gazebo-3] [Msg] Waiting for master.\n[gazebo-3] [Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[gazebo-3] [Msg] Publicized address: 192.168.1.49\n[gazebo-3] [Msg] Warning: Ignoring XDG_SESSION_TYPE=wayland on Gnome. Use QT_QPA_PLATFORM=wayland to run on Wayland anyway.\n[gazebo-3] [Wrn] [Event.cc:61] Warning: Deleting a connection right after creation. Make sure to save the ConnectionPtr from a Connect call\n[gazebo-3] [INFO] [1712819726.206974140] [gazebo_ros2_control]: Loading gazebo_ros2_control plugin\n[gazebo-3] [INFO] [1712819726.208899511] [gazebo_ros2_control]: Starting gazebo_ros2_control plugin in namespace: /\n[gazebo-3] [INFO] [1712819726.209095469] [gazebo_ros2_control]: Starting gazebo_ros2_control plugin in ros 2 node: gazebo_ros2_control\n[gazebo-3] [INFO] [1712819726.210755756] [gazebo_ros2_control]: connected to service!! robot_state_publisher\n[gazebo-3] [INFO] [1712819726.211154584] [gazebo_ros2_control]: Received urdf from param server, parsing...\n[gazebo-3] [INFO] [1712819726.211194783] [gazebo_ros2_control]: Loading parameter files /home/mk/ros2_ws/install/learm_ros2_description/share/learm_ros2_description/config/combined_controllers.yaml\n[gazebo-3] [INFO] [1712819726.219434473] [gazebo_ros2_control]: Loading joint: shoulder_pan...(#hiding other joints for log)\n[gazebo-3] [INFO] [1712819726.221340144] [resource_manager]: Initialize hardware 'GazeboSystem' \n[gazebo-3] [INFO] [1712819726.221351965] [resource_manager]: Successful initialization of hardware 'GazeboSystem'\n[gazebo-3] [INFO] [1712819726.221431741] [gazebo_ros2_control]: Loading controller_manager\n[gazebo-3] [Msg] Waiting for master.\n[gazebo-3] [Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[gazebo-3] [Msg] Publicized address: 192.168.1.49\n[gazebo-3] [Msg] Loading world file [/home/mk/ros2_ws/install/learm_ros2/share/learm_ros2/worlds/table_world.world]\n[gazebo-3] [Err] [Model.cc:1160] Exception occured in the Load function of plugin with name[gazebo_ros2_control] and filename[libgazebo_ros2_control.so]. This plugin will not run.\n[gazebo-3] [Err] [Connection.cc:547] Connection[16] Closed during Read\n[gazebo-3] [Err] [TransportIface.cc:385] Unable to read from master\n[ERROR] [gazebo-3]: process has died [pid 5583, exit code 255, cmd 'gazebo --verbose /home/mk/ros2_ws/install/learm_ros2/share/learm_ros2/worlds/table_world.world -s libgazebo_ros_factory.so'].\n[gazebo-3] \n[gazebo-3] \n^C[WARNING] [launch]: user interrupted with ctrl-c (SIGINT)\n[robot_state_publisher-1] [INFO] [1712819751.927358582] [rclcpp]: signal_handler(signum=2)\n[INFO] [robot_state_publisher-1]: process has finished cleanly [pid 5579]\ncontroller.yaml:\n\ncontroller_manager:\n  ros__parameters:\n    update_rate: 30.0\n    use_sim_time: true\n\n    joint_state_controller:\n      type: joint_state_controller/JointStateController\n      publish_rate: 50.0\n    joint_state_broadcaster:\n      type: joint_state_broadcaster/JointStateBroadcaster\n    arm_controller:\n      type: joint_trajectory_controller/JointTrajectoryController\n\narm_controller:\n  ros__parameters:\n    publish_rate: 50.0\n    base_frame_id: base_link\n    command_interfaces:\n      - position\n    state_interfaces:\n      - position\n      - velocity\n    joints:\n      - shoulder_pan\n      - shoulder_lift\n      - elbow\n      - wrist_flex\n      - wrist_roll\n      - grip_left\nAnd finally my urdf.xacro file that has included <xacro:include filename = \"ros2_control.xacro\" /> and my ros2_control.xacro: has\n\n<?xml version=\"1.0\" ?>\n<robot xmlns:xacro=\"http://www.ros.org/wiki/xacro\">\n\n\n<ros2_control name=\"GazeboSystem\" type=\"system\">\n  <hardware>\n    <plugin>gazebo_ros2_control/GazeboSystem</plugin>\n  </hardware>\n<joint name=\"shoulder_pan\">\n<command_interface name=\"position\">\n  <param name=\"min\">-1.57</param>\n  <param name=\"max\">1.57</param>\n</command_interface>\n<command_interface name=\"velocity\">\n  <param name=\"min\">-0.5</param>\n  <param name=\"max\">0.5</param>\n</command_interface>\n<command_interface name=\"effort\">\n  <param name=\"min\">-1000</param>\n  <param name=\"max\">1000</param>\n</command_interface>\n<state_interface name=\"position\"/>\n<state_interface name=\"velocity\"/>\n<state_interface name=\"effort\"/>\nand all the info relevant to the joints, and at the end:\n<plugin filename=\"libgazebo_ros2_control.so\" name=\"gazebo_ros2_control\">\n\n  <parameters>$(find learm_ros2_description)/config/combined_controllers.yaml</parameters>\n\n</plugin>\nEDIT:\n\nI used the same launch.py file as in [cart_example_position.launch.py]4.\n\nRunning ros2 launch gazebo_ros2_control_demos cart_example_position.launch.py and ros2 run gazebo_ros2_control_demos example_position works perfectly fine. copying all the contents, creating a new.run.launch.py file and editing\n\ngazebo_ros2_control_demos_path = os.path.join(\n        get_package_share_directory('learm_ros2'))\n\n    xacro_file = os.path.join(gazebo_ros2_control_demos_path,\n                              'urdf',\n                              'learm-gazebo-xacroTurdf.urdf')\nStill gives me errors.\n\n[gazebo_ros2_control]: Loading controller_manager\n    [ERROR] [gzserver-1]: process has died [pid 23581, exit code -11, cmd 'gzserver -slibgazebo_ros_init.so -slibgazebo_ros_factory.so -slibgazebo_ros_force_system.so'].\n    [ros2-5] Could not contact service /controller_manager/load_controller\n    [ERROR] [ros2-5]: process has died [pid 23669, exit code 1, cmd 'ros2 control load_controller --set-state active joint_state_broadcaster'].\n    [INFO] [ros2-6]: process started with pid [23794]\n    [ros2-6] Could not contact service /controller_manager/load_controller\n    [ERROR] [ros2-6]: process has died [pid 23794, exit code 1, cmd 'ros2 control load_controller --set-state active joint_trajectory_controller'].\n    ^C[WARNING] [launch]: user interrupted with ctrl-c (SIGINT)\n    [robot_state_publisher-3] [INFO] [1712843686.506268158] [rclcpp]: signal_handler(signum=2)\n    [INFO] [robot_state_publisher-3]: process has finished cleanly [pid 23585]\n    [INFO] [gzclient-2]: process has finished cleanly [pid 23583]\nSo I am currently lost. Editing my controllers.yaml to the yaml file they use, gives me different errors, but as if it managed to connect! So my errors are probably in the controller.yaml or urdf.",
    "Running ros1 packages with ros2 data\n\nI'm trying to run different lidar based SLAM methods in order to produce a map of an environment. I've recorded my data in both .db3 and .mcap formats, but a lot of SLAM methods (an example being Interactive SLAM by SMRT-AIST) are only implemented on ROS1 with the .bag format. Is there any way to either change the modern formats to .bag or is there another way to use these older packages with ROS2 datatypes?",
    "ldlidar ros 2, colcon build error, pthread mutex init/lock/unlock not declared\n\nSo i am trying to use the LD19 Lidar from ldrobot with ros2_iron. I am following this tutorial: https://github.com/ldrobotSensorTeam/ldlidar_stl_ros2. When i enter colcon build in the console it runs to 87% and then fails. I am using Rasbian OS on Raspberry Pi 5. The console shows this:\n\nStarting >>> ldlidar_stl_ros2\n--- stderr: ldlidar_stl_ros2                              \n/home/pi/ldlidar_ros2_ws/src/ldlidar_stl_ros2/ldlidar_driver/src/logger/log_module.cpp: In member function 'void LogModule::InitLock()':\n/home/pi/ldlidar_ros2_ws/src/ldlidar_stl_ros2/ldlidar_driver/src/logger/log_module.cpp:172:3: error: 'pthread_mutex_init' was not declared in this scope; did you mean 'pthread_mutex_t'?\n  172 |   pthread_mutex_init(&mutex_lock_,NULL);\n      |   ^~~~~~~~~~~~~~~~~~\n      |   pthread_mutex_t\n/home/pi/ldlidar_ros2_ws/src/ldlidar_stl_ros2/ldlidar_driver/src/logger/log_module.cpp: In member function 'void LogModule::RealseLock()':\n/home/pi/ldlidar_ros2_ws/src/ldlidar_stl_ros2/ldlidar_driver/src/logger/log_module.cpp:180:9: error: 'pthread_mutex_unlock' was not declared in this scope; did you mean 'pthread_mutex_t'?\n  180 |         pthread_mutex_unlock(&mutex_lock_);\n      |         ^~~~~~~~~~~~~~~~~~~~\n      |         pthread_mutex_t\n/home/pi/ldlidar_ros2_ws/src/ldlidar_stl_ros2/ldlidar_driver/src/logger/log_module.cpp: In member function 'void LogModule::Lock()':\n/home/pi/ldlidar_ros2_ws/src/ldlidar_stl_ros2/ldlidar_driver/src/logger/log_module.cpp:188:9: error: 'pthread_mutex_lock' was not declared in this scope; did you mean 'pthread_mutex_t'?\n  188 |         pthread_mutex_lock(&mutex_lock_);\n      |         ^~~~~~~~~~~~~~~~~~\n      |         pthread_mutex_t\n/home/pi/ldlidar_ros2_ws/src/ldlidar_stl_ros2/ldlidar_driver/src/logger/log_module.cpp: In member function 'void LogModule::UnLock()':\n/home/pi/ldlidar_ros2_ws/src/ldlidar_stl_ros2/ldlidar_driver/src/logger/log_module.cpp:196:9: error: 'pthread_mutex_unlock' was not declared in this scope; did you mean 'pthread_mutex_t'?\n  196 |         pthread_mutex_unlock(&mutex_lock_);\n      |         ^~~~~~~~~~~~~~~~~~~~\n      |         pthread_mutex_t\ngmake[2]: *** [CMakeFiles/ldlidar_stl_ros2_node.dir/build.make:132: CMakeFiles/ldlidar_stl_ros2_node.dir/ldlidar_driver/src/logger/log_module.cpp.o] Fehler 1\ngmake[2]: *** Es wird auf noch nicht beendete Prozesse gewartet....\ngmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/ldlidar_stl_ros2_node.dir/all] Fehler 2\ngmake: *** [Makefile:146: all] Fehler 2\n---\nFailed   <<< ldlidar_stl_ros2 [12.7s, exited with code 2]\n\nSummary: 0 packages finished [13.0s]\n  1 package failed: ldlidar_stl_ros2\n  1 package had stderr output: ldlidar_stl_ros2\n```\n",
    "Nav2 Custom Costmap plugin subscription [closed]\n\nClosed 5 days ago.\n\nI am trying to write a costmap plugin for nav2 and i need to get a specific data from a topic but i couldnt create and spin the subscription inside the plugin. (I need coordinate points to create an obstacle at those points)",
    "Trouble launching moveit2 configurations\n\nHi I am using ROS2 humble with moveit2. I created a configuration with setup_assistant of moveit2. However, when I try to launch the demo launch file created by it. It gaves me the error:\n\n[ERROR] [launch]: Caught exception in launch (see debug for traceback): 'capabilities'\n\nI could not find anything related to capabilities. What does it mean? May someone please help me?",
    "Is it possible to modify or extend pre-existing Gazebo Sim plugins?\n\nQuestion\nIs it possible to modify or extend a pre-existing Gazebo Sim (Garden) plugin, such as the gz-sim-multicopter-control-system plugin to publish the quadcopter rotor velocities as Gazebo topics? How can this be done?\n\nSummary\nI am using Gazebo Garden (gz-sim7) to simulate a quadcopter. I have implemented two of Gazebo's pre-existing plugins for the quadcopter model flight. The plugins are gz-sim-multicopter-motor-model-system and gz-sim-multicopter-control-system, and their use in the model.sdf file is shown below. You can also find a more detailed version of the plugin implementation at multicopter_velocity_control.sdf.\n\n<?xml version=\"1.0\"?>\n<sdf version=\"1.8\">\n    <model name=\"quadcopter\">\n        <!-- The links of the quadcopter model -->\n        <!-- The links of the quadcopter model -->\n\n        <!-- Multicopter Motor Model plugin for each rotor -->\n        <!-- Rotor 0 -->\n        <plugin\n            filename=\"gz-sim-multicopter-motor-model-system\"\n            name=\"gz::sim::systems::MulticopterMotorModel\">\n            <robotNamespace>quadcopter</robotNamespace>\n            <jointName>rotor_0_joint</jointName>\n            <linkName>rotor_0</linkName>\n\n            <!-- More Multicopter Motor Model plugin components -->\n\n            <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>\n            <actuator_number>0</actuator_number>\n            <motorSpeedPubTopic>motor_speed/0</motorSpeedPubTopic>\n            <motorType>velocity</motorType>\n        </plugin>\n\n        <!-- Similarly define Rotor 1, Rotor 2 and Rotor 3 -->\n\n        <!-- Multicopter Control plugin -->\n        <plugin\n            filename=\"gz-sim-multicopter-control-system\"\n            name=\"gz::sim::systems::MulticopterVelocityControl\">\n            <robotNamespace>quadcopter</robotNamespace>\n            <comLinkName>base_link</comLinkName>\n            <commandSubTopic>gazebo/command/twist</commandSubTopic>\n            <enableSubTopic>enable</enableSubTopic>\n\n            <!-- More Multicopter Control plugin components -->\n\n            <rotorConfiguration>\n                <rotor>\n                    <jointName>rotor_0_joint</jointName>\n\n                    <!-- More Multicopter Control plugin rotor configuration components -->\n\n                </rotor>\n\n                <!-- Similarly configure Rotor 1, Rotor 2 and Rotor 3 -->\n\n            </rotorConfiguration>\n        </plugin>\n    </model>\n</sdf>\nIs it possible to publish the rotor velocities using Gazebo topics? If not, is it possible to modify or extend the functionalities of the pre-existing plugins to publish the rotor velocities to topics after calculating them?\n\nFurther Info\nI am using Gazebo Garden and ROS 2 Humble for this project. I have used the Gazebo's ros_gz_project_template as a starting framework for my project. There are four main packages in the workspace (my_package_application, my_package_bringup, my_package_description and my_package_gazebo), and the src directory looks something like this.\n\nsrc\n\u251c\u2500\u2500 ros_gz\n\u251c\u2500\u2500 sdformat_urdf\n\u251c\u2500\u2500 my_package_application\n\u251c\u2500\u2500 my_package_bringup\n\u251c\u2500\u2500 my_package_description\n\u2502   \u251c\u2500\u2500 CMakeLists.txt\n\u2502   \u251c\u2500\u2500 hooks\n\u2502   \u251c\u2500\u2500 include\n\u2502   \u2502   \u2514\u2500\u2500 my_package_description\n\u2502   \u2502       \u2514\u2500\u2500 MotorVelocityPublisher.hh\n\u2502   \u251c\u2500\u2500 models\n\u2502   \u2502   \u2514\u2500\u2500quadcopter\n\u2502   \u2502       \u251c\u2500\u2500 model.config\n\u2502   \u2502       \u2514\u2500\u2500 model.sdf\n\u2502   \u251c\u2500\u2500 package.xml\n\u2502   \u2514\u2500\u2500 src\n\u2502       \u2514\u2500\u2500 MotorVelocityPublisher.cc\n\u2514\u2500\u2500 my_package_gazebo\n    \u251c\u2500\u2500 CMakeLists.txt\n    \u251c\u2500\u2500 hooks\n    \u251c\u2500\u2500 include\n    \u251c\u2500\u2500 package.xml\n    \u251c\u2500\u2500 src\n    \u2514\u2500\u2500 worlds\n        \u2514\u2500\u2500 quadcopter.sdf\nMy initial idea was to create a custom plugin called MotorVelocityPublisher which would access the rotor velocity data from the gz-sim-multicopter-control-system but the plugin doesn't make the rotor velocity data easily accessible.\n\nI have also thought about modifying or extending the existing gz-sim-multicopter-control-system plugin to publish the rotor velocity data. More specifically, creating a new RotorVelocitiesComponent.hh component to store the rotor velocity values.\n\n// RotorVelocitiesComponent.hh\n\n#ifndef ROTOR_VELOCITIES_COMPONENT_HH_\n#define ROTOR_VELOCITIES_COMPONENT_HH_\n\n#include <gz/sim/components/Component.hh>\n\nnamespace multicopter_control\n{\n    // Define a new Gazebo component to store rotor velocities\n    GZ_SIM_DEFINE_COMPONENT(RotorVelocities, std::vector<double>)\n}\n\n#endif  // ROTOR_VELOCITIES_COMPONENT_HH_\nExtending the PreUpdate method in the MulticopterVelocityControl.cc library to save the rotor velocity values into the component.\n\n// Add the component header in MulticopterVelocityControl.cc\n#include \"RotorVelocitiesComponent.hh\"\n\n// Existing Multicopter Velocity Control methods\n\nvoid MulticopterVelocityControl::PreUpdate(\n    const UpdateInfo &_info,\n    EntityComponentManager &_ecm)\n{\n    GZ_PROFILE(\"MulticopterVelocityControl::PreUpdate\");\n\n    // Existing code for the Multicopter Velocity Control Pre-Update\n\n    this->velocityController->CalculateRotorVelocities(*frameData, cmdVel,\n                                                       this->rotorVelocities);\n\n    // New code to store the rotor velocities in the component\n    auto rotorVelocitiesComp = _ecm.Component<multicopter_control::RotorVelocities>(this->model.Entity());\n    if (!rotorVelocitiesComp)\n    {\n        _ecm.CreateComponent(this->model.Entity(), multicopter_control::RotorVelocities(this->rotorVelocities));\n    }\n    else\n    {\n        rotorVelocitiesComp->Data() = this->rotorVelocities;\n    }   // New code ends here\n\n    this->PublishRotorVelocities(_ecm, this->rotorVelocities);\n}\nThe problem with this solution is that I don't know how to correctly save the extended gz-sim-multicopter-control-system plugin, build it, link it, etc. I'm not sure if this method will work or not.\n\n",
    "How to executing a callback function with multiple threads in ROS2\n\nI have a camera_node publishing image to processer_node, images are published faster than they are processed.\n\nWhen a new image appears in my image queue but the previous image is still processing, split a thread to bind a callback function to process the new image.\n\nIs there any way to this?",
    "What is the alternative to a <ros2arduino.h>\n\nI am using Arduino Mega.\n\nI wanted to configure it to create a ros2 topic using the ros2arduino header.\n\nHowever, I found out that the header cannot be used because it can only be supported from 32bit or higher\n\nIn this case, what idea can you recommend?\n\nCurrently, the board is connected to I2C communication, and it seems that the main board will also be connected to Arduino through I2C communication. (Currently, I am connecting from Ubuntu installed on my PC for testing purposes.)\n\nThank you so much for reading.",
    "How do I post-process rviz images? [closed]\n\nI've made a gazebo envirnment and successfully visualized the cam image with rviz. However I wanted to do some post process to make it simulate the result of image segmentation and send it back to rviz. Is there any similiar methods or tutorials for this? Maybe a way to import the node to python?",
    "How to add an additional argument in a ROS2 cpp callback\n\nI want to add an additional argument in a callback function for rclcpp, e.g. callback(msg, additional_argument).\n\nI can do it in python. There the solution would be:\n\nimport rclpy\nfrom std_msgs.msg import String\n\ndef callback(data, source):\n    rospy.loginfo(f\"I heard '{data.data}' from {source}\")\n\ndef listener():\n    rclpy.init()\n    node = rclpy.create_node('listener')\n\n    node.create_subscription(String, 'chatter_1', lambda msg: callback(msg, 1), 10)\n    node.create_subscription(String, 'chatter_2', lambda msg: callback(msg, 2), 10)\n\n    rclpy.spin(node)\n    node.destroy_node()\n    rclpy.shutdown()\n\nif __name__ == '__main__':\n    listener()\nI also did it in ROS1 with boost::bind. I tried to do it in ROS2 with std::bind, but it did not work.\n\nDoes someone know the exact syntax?",
    "ros2_control - Hardware Interface - Write() & Moveit2 Joint Trajectory\n\nBy using ROS Humble, Moveit2, and ros2_control, I am trying to accomplish manipulation tasks with the CRX-10iA/L Fanuc robot. Currently, I am implementing ros2_control hardware_interface part. Inside the default write function I am sending motion commands to robot.\n\nI have two motion command options from the provided robot interface. One of them should be sent except the last write command and the other one must be sent lastly. Otherwise, communication can't go further.\n\nI was wondering whether I can access to the total number of write commands that will be sent by hardware_interface? Then I can set a simple if-else logic.\n\nI thought about accessing total number of joint trajectory commands but I realized that when moveit generated a joint trajectory point with 22 positions, write() function was called 5 times in hardware_interface. Less than ideal as expected due to real hardware constraints.\n\nAny suggestion is appreciated. Thank you for your time.",
    "ROS2 - modify py launchfile without rebuilding package\n\nIn ROS1 we could modify XML launchfile and roslaunch them directly without catkin_make rebuilding, in ROS2 it seems if I modify python launchfile, I need to rebuild the package otherwise\n\nros2 launch <package_name> <launchfile_name>\nruns the old launchfile. Do I need to rebuild the package after each modification or am I missing something?",
    "Comparison of trajectories from odometries\n\nIs there a way in ROS2 to compare trajectories from odometry data? I'm using robot_localization to calculate various odometry outputs by incorporating GPS and IMU data. I have a bag file where I recorded odometry topics, and I would like to compare the paths taken in the following configurations:\n\n/odom_local (odometry + IMU)\n/odom_global (odometry + IMU + GPS)\n/odom_ackermann (only my odometry data)\nI can visualize the trajectories in rviz2, but I also want to compare them in terms of distance error, etc.\n\nIf someone has already done this, I hope they can assist me.\n\nThanks in advance.",
    "Gazebo ignition spawn_entity equivalent\n\nWhen designing simulations in Gazebo Classic it was possible to spawn robots in the simulation with the launch file spawn_entity from the gazebo_ros pkg. Is there any equivalent in to that in Gazebo Ignition?",
    "Comparing navigation algorithms\n\nI am new to Nav2 stack and currently there are a bunch of navigation plugins to choose from (https://navigation.ros.org/plugins/index.html). I am interested in how to choose available algorithms from those in \"Planners\" and \"Controllers\" sections. For example, how to know pros & cons of NavFn planner compared with SmacPlanner. How to know pros & cons of DWB controller against TEB controller. Is there any site clarify something like this?\n\nThank you,\n\nPeera",
    "Trouble Installing ROS 2 Humble on Ubuntu 20.04 with arm64/x86_64 Architecture\n\nI've been encountering an issue while attempting to install ROS 2 Humble on my Ubuntu 20.04 system. My machine supports both arm64 and x86_64 architectures. Despite following the official installation instructions closely, I run into the \"unable to locate package ros-humble-desktop\" error every time I try to execute the installation command.\n\nHere are the steps I've followed based on the instructions from the ROS.org page for Humble:\n\n1. Added the ROS 2 repository and keyring as follows:\n\nsudo apt update && sudo apt install curl -y\n\nsudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg\n\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main\" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null\n2. Updated and upgraded my package lists:\n\n   sudo apt update\n   sudo apt upgrade\n3. Attempted to install ROS 2 Humble packages:\n\n   sudo apt install ros-humble-desktop\nHowever, this results in the \"unable to locate package ros-humble-desktop\" error.\n\nInterestingly, I came across a similar issue on ROS Answers where a user encountered package location errors due to their system running on an ARMhf platform. However, after checking my system using dpkg --print-architecture and lscpu, I confirmed that my system is on arm64 and x86_64, which should be compatible with ROS 2 Humble according to REP 2000.\n\nI'm reaching out to see if anyone has faced a similar issue or could offer guidance on resolving this error. Could this problem be related to my prior attempts to uninstall ROS 2 Foxy and clean my system? Or is there something else I'm missing in the setup process for ROS 2 Humble on Ubuntu 20.04?\n\nAny advice or suggestions would be greatly appreciated. Thank you in advance for your help!",
    "How to use ros2_control with actual hardware communicating via etherCAT?\n\nI am learning ros2_control with the real hardware. I need some help writing hardware interface for the current setup. I do not have experience writing on the communication side of the real hardware.\n\nsetup: I have Jetson nano, drives, motors, and sensors communicating via EtherCAT and using ros2 foxy and SOEM_ROS2 package. these were installed and running without ros2 control, simply via publisher and subscriber. The whole system controls the x,y,z axis with prismatic joint. It is not a robot. so no end effector. Now, I want to integrate ros2 control with the whole system. I don't know how to get the values from the hardware for the read and write methods of the hardware interface. I appreciate any help you can provide.",
    "Reading a ros2_control xacro file in a regular node\n\nI have a xacro file that I used for a specific piece of hardware. I figured out how to store custom data structures within the gpio framework within ros2_control\n\nexample:\n\n    <gpio name=\"motion_command_output\">\n        <param name=\"byteIndex\">0</param>\n        <param name=\"bitMask\">0x01</param>\n    </gpio>\nThis would get automatically loading into the associated plugin and the data was available in the hardwareinfo structure/map.\n\nI want to use the same xacro file but in a regular lifecycle node. It seems that I can read and parse the file in the launch file with\n\n    device_config = xacro.process_file(io_config_file_path)\n    device_config_parsed = device_config.toprettyxml(indent='  ')\nBut there isn't really a way to load that into the parameters.\n\nI have tried a bunch of different options and it blows up or nothing happens. Another option would be just to parse the file in the node with tinyxml2.\n\nAny ideas?\n\nThanks",
    "Custom hardware interface type\n\nI would like to write a controller that needs all joint states to update a single joint.\n\nMy idea was to create a class MyStateInterface which inherits from hardware_interface::StateInterface and stores all information for each joint. Then, I would like to export this class inside the hardware interface to pass the joint information to the controller.\n\nTo make it clear, I modify this example:\n\nstd::vector<double> hw_states_;\n\nCallbackReturn MyRobotHardware::on_init(const hardware_interface::HardwareInfo & info) {\n  // set some default values when starting the first time\n  hw_states_.resize(info_.joints.size(), 0.0);\n  return CallbackReturn::SUCCESS;\n}\n\nstd::vector<hardware_interface::StateInterface>\nMyRobotHardware::export_state_interfaces()\n{\n  std::vector<hardware_interface::StateInterface> state_interfaces;\n\n  for (uint i = 0; i < info_.joints.size(); i++)\n  {\n    state_interfaces.emplace_back(hardware_interface::StateInterface(\n      info_.joints[i].name,                  // joint name from controller.yaml\n      hardware_interface::HW_IF_POSITION,    // \"position\"\n      &hw_states_[i]                         // the joint value\n    ));\n  }\n\n  return state_interfaces;\n}\nTo something like this:\n\nstd::vector<MyStateHandle> hw_states_;\n\nCallbackReturn MyRobotHardware::on_init(const hardware_interface::HardwareInfo & info) {\n  // set some default object when starting the first time\n  hw_states_.resize(info_.joints.size(), MyStateHandle());\n  return CallbackReturn::SUCCESS;\n}\n\nstd::vector<hardware_interface::StateInterface>\nMyRobotHardware::export_state_interfaces()\n{\n  std::vector<hardware_interface::StateInterface> state_interfaces;\n\n  for (uint i = 0; i < info_.joints.size(); i++)\n  {\n    state_interfaces.emplace_back(hardware_interface::StateInterface(\n      info_.joints[i].name,      // joint name from controller.yaml\n      \"my_state_handle\",         // a made up name\n      &hw_states_[i]             // information for controlling the joint\n    ));\n  }\n\n  return states_interfaces;\n}\nThis didn't work because there is no matching function for the call hardware_interface::StateInterface(const std::string &name, const std::string &interface_name, MyStateHandle *value_ptr=nullptr) because there is only the function hardware_interface::StateInterface(const std::string &name, const std::string &interface_name, double *value_ptr=nullptr)\n\nI want to know if there is a way to pass a class full of control data from the hardware interface to the controller, or am I on a completely wrong track?",
    "Octomap and Projected Octomap not lining up\n\nI am trying to use a projected Octomap as an occupancy grid to pass onto the ROS navigation stack, but when I create one using the octomap_server package, it creates an occupancy grid which is rotated 90 degrees from the top down view (i.e., It projects from the side when it should be projecting downwards). The Octomap and the projected Octomap are shown below.\n\nIs there any way to change the direction from which Octomap creates the projection?",
    "Controlling power input for different currents and voltages connected to the same power source\n\nI am new to robotics and am struggling with the electronics a bit. I am using two 9 V batteries in series to provide 18 V. I need to power 2 x 12 W DC motors and an Arduino Uno. I need to divide the input power of 18 volts into 3 streams: 2 x (12 V, 1 A) streams for the motors + 1 x (6 V, 0.2 A) for the Arduino.\n\nI thought of using a 1 \u03a9 resistor and a 2 \u03a9 resistor in parallel to get two streams: 12 volts and 6 volts respectively, but I am not sure if that will ensure the right current values will be drawn. I tried looking online but couldn't find a method. How can I go about carrying this out? Any help will be greatly appreciated!",
    "Subscriber in Hardware Interface (ros2_control)\n\nIs there any example for adding subscriber to hardware interface ? Publisher works fine. My code is below, I dont know where its going wrong but unable to get values after publishing using CLI.\n\n.hpp file '''\n\nnamespace diffdrive_ctre { class HardwareCommandPub : public rclcpp::Node { public:\n\nHardwareCommandPub();\nvoid publishData();\nvoid pincmdcheck();\nprivate: rclcpp::Publisher<amr_v4_msgs_srvs::msg::Motor>::SharedPtr pub_; rclcpp::Publisher<std_msgs::msg::Bool>::SharedPtr estop_pub_; rclcpp::Subscription<amr_v4_msgs_srvs::msg::Pin>::SharedPtr pin_sub_; rclcpp::TimerBase::SharedPtr timer_; amr_v4_msgs_srvs::msg::Pin latest_pin_cmd; };\n\nclass DiffDriveCTREHardware : public hardware_interface::SystemInterface {\n\n''' .cpp file\n\nHardwareCommandPub::HardwareCommandPub() : Node(\"Motor_Status\") {\n\npub_ = this->create_publisher<amr_v4_msgs_srvs::msg::Motor>(\"talonFX_right/status\", 10); estop_pub_ = this->create_publisher<std_msgs::msg::Bool>(\"/e_stop\", 10); pin_sub_ = this->create_subscription<amr_v4_msgs_srvs::msg::Pin>(\"/amr/pin_cmd\", 10, [this](const amr_v4_msgs_srvs::msg::Pin::SharedPtr pin_cmd) { latest_pin_cmd = *pin_cmd; });\n\n}\n\nvoid HardwareCommandPub::publishData() { // //motor1 auto message = amr_v4_msgs_srvs::msg::Motor(); message.temperature_right = motor_right.GetDeviceTemp().ToString(); message.bus_voltage_right = motor_right.GetSupplyVoltage().ToString();\nmessage.output_current_right = motor_right.GetStatorCurrent().ToString(); message.error_right = motor_right.GetStickyFault_Hardware().ToString();\n\n// //motor2 message.temperature_left = motor_left.GetDeviceTemp().ToString(); message.bus_voltage_left = motor_left.GetSupplyVoltage().ToString();\nmessage.output_current_left = motor_left.GetStatorCurrent().ToString(); message.error_left = motor_left.GetStickyFault_Hardware().ToString();\n\n// //motor pin   message.temperature_pin = pin_motor.GetDeviceTemp().ToString();   message.bus_voltage_pin =\npin_motor.GetSupplyVoltage().ToString(); message.output_current_pin = pin_motor.GetStatorCurrent().ToString(); message.error_pin = pin_motor.GetStickyFault_Hardware().ToString();\n\n//estop auto message_estop = std_msgs::msg::Bool();\nmessage_estop.data = estop_temp; if (rclcpp::ok()) { estop_pub_->publish(message_estop); pub_->publish(message); pincmdcheck(); } }\n\nvoid HardwareCommandPub::pincmdcheck() { pin_temp = latest_pin_cmd.pin_command; RCLCPP_INFO( rclcpp::get_logger(\"Pin test\"), \"Got pin cmd '%i'and '%i' and '%s'!\",pin_temp,latest_pin_cmd.pin_command); }",
    "Make the robot stop if it finds an obstacle in front\n\nI am using the navigation stack (nav2) without problems, but I would like to understand how I can make the robot stop from its path if it finds a dynamic obstacle in front of it (at a minimum distance of n metres)?\n\nIs there a demo or tutorial to take inspiration from?\n\nmany thanks in advance",
    "What determines a robots euler rotation order?\n\nI know Fanuc robots use the XYZ rotation order, ABB uses ZYX and some robots use the ZYZ rotation order. What actually determines this order? is it the way the frames are setup on the DH table? Or is it just the order they chose to solve the IK, and any order could be used? Can anyone help me understand this? TY.",
    "How to make 4 wheeled robot work with DiffDrive plugin and ROS2 Control?\n\nI have a 4 wheeled robot with mecanum wheels (in real life), I have been able to simulate it and get it to work with the ROS2 DiffDrive plugin (replicating the skid steer plugin from ROS1) but now that I want to implement ROS2 Control with it I cannot get it to work. I have been following the Articubot tutorials but his robot only has 2 wheels. I can't find anything online regarding a 4 wheeled robot that would make use of the DiffDrive plugin on ROS2 while using ROS2 Control. At the moment My aim is to only simulate the robot in gazebo so that I can better understand how ROS2 control works but I am stuck.\n\nGitHub Repo\n\nI hope the question is clear.\n\nSome guidance on how to make ROS2 Control work with this robot with be very much appreciated. Thanks",
    "Underwater Property Simulation with ROS2 e.g Particle Plume\n\nI want to develop and test adaptive path planning algorithms for AUVs or also USVs.\n\nSo far I did this in ROS1 with the UUV Simulator and especially the uuv_plume_simulator.\n\nNow I am looking for ways to do this in ROS2.\n\nI managed to get a simulation of an AUV working with ROS2 Humble and Gazebo Ignition but I couldn't find a solution comparable to the UUV Plume Simulator.\n\nAre there Gazebo (Ignition/Garden/Harmonic) Plugins or Projects that already deal with the simulation of the distribution of water properties like salinity/turbidity/temperature or the simulation of freshwater/hotwater/oil/particle spill or plumes? Ideally these properties would be also influenced by currents.\n\nSo far i only came across the EnvironmentPreload Plugin for Gazebo Harmonic but it seems to only offer the a static distribution of values.\n\nAny recommendations are highly appreciated.",
    "ros_gz_bridge does not publish on ros2 topic\n\nI am running ros_gz_bridge to read some data from Gazebo, in particular I have run:\n\nros2 run ros_gz_bridge parameter_bridge /model/x500_vision_0/odometry@nav_msgs/msg/Odometry[gz.msgs.Odometry\n\n[INFO] [1706113773.667589591] [ros_gz_bridge]: Creating GZ->ROS Bridge: [/model/x500_vision_0/odometry (gz.msgs.Odometry) -> /model/x500_vision_0/odometry (nav_msgs/msg/Odometry)] (Lazy 0)\nThe problem is that when I run\n\nros2 topic echo /model/x500_vision_0/odometry\nI do not see any message published on the topic.\n\nI have already checked that the name of the topic is correct, and when I run\n\ngz topic -et /model/x500_vision_0/odometry\nI can see the messages exchanged within Gazebo.\n\nSo why is the bridge not publishing the messages on the ROS2 network?",
    "Compilation error when subscription callback's input is of certain type\n\nI did an experiment where I tried all combinations of const, &, and SharedPtr as the input to the subscription callback. The message type is nav_msgs::msg::Odometry and the results are at the bottom of the code snippet.\n\n#include \"rclcpp/rclcpp.hpp\"\n#include \"nav_msgs/msg/odometry.hpp\"\n\nclass SubToSharedPtr : public rclcpp::Node\n{\npublic:\n    SubToSharedPtr()\n    : Node(\"sub_to_shared_ptr_node\")\n    {\n        odom_sub_ = this->create_subscription<nav_msgs::msg::Odometry>(\n            \"odom\", rclcpp::SystemDefaultsQoS(),\n            std::bind(&SubToSharedPtr::odomCb, this, std::placeholders::_1)\n        );\n    }\n\nprivate:\n    rclcpp::Subscription<nav_msgs::msg::Odometry>::SharedPtr odom_sub_;\n\n    void odomCb(const nav_msgs::msg::Odometry& msg)\n    {\n\n    }\n};\n\nint main(int argc, char** argv)\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared<SubToSharedPtr>();\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n\n// const SharedPtr& - doesn't work\n// const SharedPtr - works\n// SharedPtr - works\n// SharedPtr& - doesn't work\n// const & - works\n// const - works\n// & - doesn't work\n// nothing - works\nIt seems like there is an important implication to this pattern (maybe something to do with ownership?). For example, all the ones with & doesn't work except for const & maybe because even though you are getting the actual variable (not a copy) you are promising not to change it, which is why it's acceptable.\n\nDoes anyone have an explanation for why this pattern exists?",
    "Where can i find the code about move_group_interface.plan method?\n\n\nI'm studying moveit. A trajectory was created through a method called plan, but I couldn't find the process, so I asked a question. thank you",
    "Are hardware components in ros2_control designed to include a ROS 2 node as a member?\n\nI need to transmit high-level status updates strings about my hardware to another node using a publisher. Recognizing that blocking calls are not welcome within the read/write methods, I intend to employ a Node in conjunction with RealtimePublisher from the realtime_tools package. However, I'm uncertain whether it is possible to instantiate a node within the implementation of the SystemInterface.",
    "Oriented Bounding Box in RVIZ\n\nI want to visualize an OrientedBoundingBox from Open3D on RVIZ, I have seen the :\n\nRvizVisualTools::publishWireframeRectangle\nRVIZ Line Segments\npublishWireframeRectangle has two dimensions width, and height, while I still have length, and for RVIZ Line Segment I have to develop the function myself, I wonder if there is a ready to use function to publish RVIZ Marker for OrientedBoundingBox which is ready to use, can you please tell me if there is any? thanks in advance.",
    "turtlebot4 nav2: how to call action navigateToPose from node in cpp\n\nI am migrating a node that send goals to nav2 (originally move_base) thru an action since I need to know if it has been reached or cancelled by the planner.\n\nIt will work with the Turtlebot4. I've been reading the nav2 documentation and launching the nav2 launch of Turtlebot4 and I guess that I need to call the action /navigate_to_pose of the node bt_navigator. However showing the interface, I see that the result is a std_msgs/Empty.\n\nHow can I easily send goals to Turtlebot4 from a cpp node and know the status of the navigation (i.e. goal reached/cancelled/travelling)?",
    "iRobot Roomba compatible with ROS2 other than the Create?\n\nI plan to buy an iRobot to test ROS2, but the Create 3 not available in my country, import tax and shipping cost may very high, also sometime custom will reject the import. But many other model from iRobot available like 627, I7, J7 ..., So what model compatible with ROS? Or I should by the Create 3.",
    "Ros2 Dictionary srv/msg type\n\nI would like to be able to return a dictionary as a Response in my interface, Is it possible to return a python dictionary or should I write code similar to this:\n\nuint8 action\n\n---\n\nitem1Class dict\n-- other msg types below ---\n\nwhere item1Class is a struct\n\nThis is probably not possible, essentially I want:\n\n    observation = {\n        \"lidar\": lidar_data,\n        \"pose\": {\n            \"positionX\": X,\n            \"positionY\": Y,\n            \"orientation\": yaw,\n        },\n    }\nas a srv message where lidar is float32[] and all pose variable are floats.\n\nWhats the best practice using Ros2 to achieve this. Or is this not what srv/msg was intended for?",
    "How to send and receive CAN messages on Ubuntu 18.04 using ROS Melodic\n\nI am trying to use a PCAN-USB device (from Peak-System) to be able to send and receive CAN messages which I would like to use to control a robot using ROS at some point for work.From the research I have done, I have found out that there are different drivers and python libraries and different APIs to achieve what I am looking for. The problem is there is no guides or clear instructions on how to get started.\n\nI go to a page and then it tells me to look at something else and this keeps happening. I would like to use the PEAK-System API and drivers, installed both already but I don't know how to make it work with python but and I am not sure if what I have downloaded is even the right thing.\n\nEssentially what I am looking for is some guidance on how to check if the drivers and API is installed correctly and how to get a simple python script going, and then I'll have something to build on.\n\nI have tried to give as much detail as possible and not make the question too broad sorry if it's still not specific enough.\n\nThanks.",
    "Nav2 - How to create a custom behavior tree (BT) plugin/node in a separate ros2 package?\n\nI'm trying to create a my own custom bt plugin. In the official tutorial https://navigation.ros.org/plugin_tutorials/docs/writing_new_bt_plugin.html, I can't see an instruction or an example on how to create a behavior tree plugin in a separate ros2 package just like in this nav2 repo tutorial https://github.com/ros-planning/navigation2_tutorials/tree/master where the custom plugins (custom costmap, behavior, controller and planner) are created in a separate package.\n\nSo I'm wondering, is it possible to create the bt plugin/node in a separate package? or I need to install nav2 from source and try to create the bt plugin on the /navigation2/nav2_behavior_tree/plugins folder?",
    "How to use Gazebo Ignition NavSat plugin\n\nI'm trying to use the Navsat plugin but I can't get it working. I'm using ros-humble\n\nI've been following the link below, but I am unable to see any navsat topic in gazebo https://answers.gazebosim.org//question/28643/gps-sensor-plugin-in-ignition/\n\nIn my robot urdf, I have the following code\n\n    <link name=\"chassis\">\n            ....\n      <plugin filename=\"ignition-gazebo-navsat-system\" name=\"ignition::gazebo::systems::NavSat\"/>\n      <gazebo>\n        <sensor name=\"navsat_sensor\" type=\"navsat\">\n          <always_on>1</always_on>\n          <update_rate>1</update_rate>\n          <topic>navsat</topic>\n        </sensor>\n     </gazebo>\n    </link>\nOn my world sdf, I also included\n\n    <world name=\"field\">\n        ...\n      <spherical_coordinates>\n        <surface_model>EARTH_WGS84</surface_model>\n        <world_frame_orientation>ENU</world_frame_orientation>\n        <latitude_deg>-22.986687</latitude_deg>\n        <longitude_deg>-43.202501</longitude_deg>\n        <elevation>0</elevation>\n        <heading_deg>0</heading_deg>\n      </spherical_coordinates>\n    </world>",
    "Sensors in ROS2 without driver\n\nI got a new LiDAR from a seller who unfortunately does not provide any ROS2 support. Rather there is only a Point Cloud Visualiser .exe in Windows. I would like to use the LiDAR in my project of developing Autonomous Farming Vehicle but dont know how I can use this in ROS2 without any Package or Driver. Is it possible to use it somehow or develop a ROS2 supported package of the LiDAR??",
    "Transform between odom and base_link not made. ros2_controller Ackermann Steering Controller\n\nI cannot set odom as a fixed frame inside RViz. It doesn't show up at all. My robot is fully functional and visible in both Gazebo. I don't get any warnings, errors or exceptions in the log. I'm using ROS2 Humble and Gazebo Fortress. I follow the code of the tricycle_drive_example from ign_ros2_control_demos (which publishes odom correctly if I run it on my laptop).\n\nAs intended by the controller, the topic /ackermann_steering_cotroller/odometry is published. Whenerver I try to visualize that topic with RViz, I get the following message:\n\n[INFO] [1704543459.237610775] [rviz]: Message Filter dropping message: frame 'odom' at time 214,560 for reason 'discarding message because the queue is full'\nRunning ros2 run tf2_ros tf2_echo odom base_link, gives this:\n\n[INFO] [1704543792.043830485] [tf2_echo]: Waiting for transform odom ->  base_link: Invalid frame ID \"odom\" passed to canTransform argument target_frame - frame does not exist\nAlso, my tf_tree looks like this: enter image description here\n\nThe ros2_control tag inside my urdf:\n\n<ros2_control name=\"IgnitionSystem\" type=\"system\">\n    <hardware>\n        <plugin>ign_ros2_control/IgnitionSystem</plugin>\n    </hardware>\n    <joint name=\"LEFT_HINGE_JOINT\">\n        <command_interface name=\"position\"/>\n        <state_interface name=\"position\"/>\n    </joint>\n    <joint name=\"RIGHT_HINGE_JOINT\">\n        <command_interface name=\"position\"/>\n        <state_interface name=\"position\"/>\n    </joint>\n    <joint name=\"LEFT_REAR_WHEEL_JOINT\">\n        <command_interface name=\"velocity\"/>\n        <state_interface name=\"velocity\"/>\n        <state_interface name=\"position\"/>\n    </joint>\n    <joint name=\"RIGHT_REAR_WHEEL_JOINT\">\n        <command_interface name=\"velocity\"/>\n        <state_interface name=\"velocity\"/>\n        <state_interface name=\"position\"/>\n    </joint>\n</ros2_control>\nThe configuration file for the controllers:\n\ncontroller_manager:\n  ros__parameters:\n    update_rate: 50\n\n    joint_state_broadcaster:\n      type: joint_state_broadcaster/JointStateBroadcaster\n\n    ackermann_steering_controller:\n      type: ackermann_steering_controller/AckermannSteeringController\n\njoint_state_broadcaster:\n  ros__parameters:\n  extra_joints: [\"RIGHT_FRONT_WHEEL_JOINT\", \"LEFT_FRONT_WHEEL_JOINT\"]\n\nackermann_steering_controller:\n  ros__parameters:\n\n    reference_timeout: 2.0\n    front_steering: true\n    open_loop: false\n    velocity_rolling_window_size: 10\n    use_stamped_vel: false\n    rear_wheels_names: [RIGHT_REAR_WHEEL_JOINT, LEFT_REAR_WHEEL_JOINT]\n    front_wheels_names: [RIGHT_HINGE_JOINT, LEFT_HINGE_JOINT]\n    odom_frame_id: odom\n    base_frame_id: base_link\n    enable_odom_tf: true\n    odom_only_twist: false\n\n    wheelbase: 0.324\n    front_wheel_track: 0.387\n    rear_wheel_track: 0.387\n    front_wheels_radius: 0.055\n    rear_wheels_radius: 0.055\nIn addition, here is what's on the log:\n\n[ruby $(which ign) gazebo-2] [INFO] [1704582360.211746217] [controller_manager]: Loading controller 'ackermann_steering_controller'\n[ruby $(which ign) gazebo-2] [INFO] [1704582360.222413325] [controller_manager]: Setting use_sim_time=True for ackermann_steering_controller to match controller manager (see ros2_control#325 for details)\n[spawner-7] [INFO] [1704582360.288968173] [spawner_ackermann_steering_controller]: Loaded ackermann_steering_controller\n[ruby $(which ign) gazebo-2] [INFO] [1704582360.290052009] [controller_manager]: Configuring controller 'ackermann_steering_controller'\n[ruby $(which ign) gazebo-2] [INFO] [1704582360.290166991] [ackermann_steering_controller]: ackermann odom configure successful\n[ruby $(which ign) gazebo-2] [INFO] [1704582360.295780665] [ackermann_steering_controller]: configure successful\n[spawner-7] [INFO] [1704582360.569778822] [spawner_ackermann_steering_controller]: Configured and activated ackermann_steering_controller\n[INFO] [spawner-7]: process has finished cleanly [pid 51038]",
    "behaviortree-cpp not installing using apt\n\nI tried to install behaviortree using sudo apt install ros-noetic-behaviortree-cpp* and got the following error while the system installing it:\n\nPreparing to unpack .../ros-noetic-behaviortree-cpp-v3_3.8.5-1focal.20230814.151\n459_amd64.deb ...\nUnpacking ros-noetic-behaviortree-cpp-v3 (3.8.5-1focal.20230814.151459) ...\ndpkg: error processing archive /var/cache/apt/archives/ros-noetic-behaviortree-c\npp-v3_3.8.5-1focal.20230814.151459_amd64.deb (--unpack):\n trying to overwrite '/opt/ros/noetic/bin/bt3_log_cat', which is also in package\n ros-noetic-behaviortree-cpp 4.4.2-1focal.20231128.201059\ndpkg-deb: error: paste subprocess was killed by signal (Broken pipe)\nErrors were encountered while processing:\n /var/cache/apt/archives/ros-noetic-behaviortree-cpp-v3_3.8.5-1focal.20230814.15\n1459_amd64.deb\nE: Sub-process /usr/bin/dpkg returned an error code (1)\nI tried multiple ways to install it but was unsuccessful.",
    "How to get started using the C++ API for Gazebo Harmonic?\n\nI'm completely new to gazebo and did some of the well explained tutorials to learn how the basic functionality of gazebo is working. So this is my setup:\n\nI'm using Windows 10 and installed gazebo with WSL2 on a Ubuntu distribution. From here I did some of the tutorials and was able to interact with the simulation with the gui and also via messages from the powershell (using wsl). So from the powershell I'm able to start the simulation and also can send and receive commands to move the robot or read out some sensor data.\n\nMy plan is, to use this functionality inside of a C++ or C# application without using the powershell. So I like to use the C++ API given by gazebo.\n\nMy idea is, to write some code in Visual Studio on my Windows machine and execute this code via cross compilation on my wsl2 instance, where my actual gazebo instance is running.\n\nMy key question is, how to integrate the gazebo library into Visual Studio and to be able to interact with my gazebo instance? For the beginning i would just start a scene \"my_world.sdf\" and read out some sensor data.\n\nCurrently I am struggeling with the integration into Visual Studio 2022.\n\nI would be really grateful for any advice given to this topic.",
    "Using standalone gazebo 11, and no gui will spawn\n\nI am trying to use gazebo through c++ (without calling from command line). I have a main.cpp file something like following\n\n#include <gazebo/gazebo.hh>\n#include <gazebo/common/common.hh>\n#include <gazebo/physics/physics.hh>\n\nint main(int _argc, char **_argv)\n{\n  // Initialize gazebo.\n  gazebo::setupServer(_argc, _argv);\n\n  // Load a world\n  gazebo::physics::WorldPtr world = gazebo::loadWorld(\"simple_world.world\");\n\n  gazebo::physics::ModelPtr robot = world->ModelByName(\"robot\");\n\n  while (true)\n  {\n    gazebo::runWorld(world, 1);\n  }\n\n  // Close everything.\n  gazebo::shutdown();\n}\nHowever no gui will spawn by running this but the robot will move around if I set velocity to the robot. I can spawn gazebo gui if I use command line tools gazebo simple_world.world.\n\nDoes anyone know if I missed anything here? I would really appreciate any help here. Thank you",
    "Gazebo Garden: How to publish the transform of elements in a simulation\n\nI need the depth ground truth of a camera view in gazebo and decided to go with an rgbd camera which produces a pointcloud. In order to visualize this I need to somehow publish the transform of the rgbd camera. How can I publish such a transform in gazebo? I can transfer gazebo topics to ros topics with my setup but I don't know how to publish the transforms from the simulation in the first place. Any ideas?\n\nI am working with a gazebo garden setup where I use a gz-ros2 and ros2-ros1 bridge in order to work with ros as well (I know this is not a good setup and the endeavor is to only use ros2 at some point.)",
    "How to use Planner Selector in the Nav2 BT's xml file\n\nI want to use the PlannerSelector action in Nav2 in order to use multiple planners and choose which one to use in the runtime. I modified the default behavior tree xml a little bit in order to do this, and I added a PlannerSelector BT node in my xml file as you can see in the xml file below.\n\nThe main issue is that the robot always uses the default planner. I tried to change the planner by publishing the string message \"GridBased1\" in the topic /planner_selector (ros2 topic pub /planner_selector std_msgs/msg/String \"data: GridBased1\") but the robot was still using the default planner. If I change the default planner before starting the robot and execute the process again then the planner normally changes.\n\nTo sum up, it seems that the different planners work normally when assigning them as default_planner in the PlannerSelector but the system always uses the default planner and it cannot be changed by publishing in the /planner_selector topic.\n\nBelow you can see the parameters related to planner_server:\n\nplanner_server:\n ros__parameters:\n  expected_planner_frequency: 20.0\n  use_sim_time: True\n  planner_plugins: [\"GridBased\", \"GridBased1\"]\n  GridBased: \n    plugin: \"nav2_navfn_planner/NavfnPlanner\"\n    tolerance: 0.5\n    use_astar: false\n    allow_unknown: true \n  GridBased1:\n    plugin: \"nav2_straightline_planner/StraightLine\"\n    interpolation_resolution: 0.1\nBelow you can see the BT's xml file that I use:\n\n<root main_tree_to_execute=\"MainTree\">\n <BehaviorTree ID=\"MainTree\">\n  <RecoveryNode number_of_retries=\"6\" name=\"NavigateRecovery\">\n   <PipelineSequence name=\"NavigateWithReplanning\">\n    <RateController hz=\"1.0\">\n      <PipelineSequence name=\"SelectPlanner\">\n        <PlannerSelector selected_planner=\"{selected_planner}\" default_planner=\"GridBased\" topic_name=\"planner_selector\"/>\n        <RecoveryNode number_of_retries=\"1\" name=\"ComputePathToPose\">\n          <ComputePathToPose goal=\"{goal}\" path=\"{path}\" planner_id=\"{selected_planner}\"/>\n          <ReactiveFallback name=\"ComputePathToPoseRecoveryFallback\">\n            <GoalUpdated/>\n            <ClearEntireCostmap name=\"ClearGlobalCostmap-Context\" service_name=\"global_costmap/clear_entirely_global_costmap\"/>\n          </ReactiveFallback>\n        </RecoveryNode>\n      </PipelineSequence>\n    </RateController>\n    <RecoveryNode number_of_retries=\"1\" name=\"FollowPath\">\n      <FollowPath path=\"{path}\" controller_id=\"FollowPath\"/>\n      <ReactiveFallback name=\"FollowPathRecoveryFallback\">\n        <GoalUpdated/>\n        <ClearEntireCostmap name=\"ClearLocalCostmap-Context\" service_name=\"local_costmap/clear_entirely_local_costmap\"/>\n      </ReactiveFallback>\n    </RecoveryNode>\n  </PipelineSequence>\n  <ReactiveFallback name=\"RecoveryFallback\">\n    <GoalUpdated/>\n    <RoundRobin name=\"RecoveryActions\">\n      <Sequence name=\"ClearingActions\">\n        <ClearEntireCostmap name=\"ClearLocalCostmap-Subtree\" service_name=\"local_costmap/clear_entirely_local_costmap\"/>\n        <ClearEntireCostmap name=\"ClearGlobalCostmap-Subtree\" service_name=\"global_costmap/clear_entirely_global_costmap\"/>\n      </Sequence>\n      <Spin spin_dist=\"1.57\"/>\n      <Wait wait_duration=\"5\"/>\n      <BackUp backup_dist=\"0.15\" backup_speed=\"0.025\"/>\n    </RoundRobin>\n  </ReactiveFallback>\n </RecoveryNode>\nI am using:\n\nturtlebot3 package for the simulation with the default launchers for the gazebo and navigation packages\nROS2 galactic\nUbuntu 20.04\nIf you have any workable BT xml file with a PlannerSelector feel free to share. It's not necessary to correct my specific implementation. I generally try to figure out how the PlannerSelector node is used inside the behavior tree.\n\nThanks\n\n",
    "How to access URDF info inside a transmission interface?\n\nI'm trying to write a custom transmission interface for ros2 control for the robotiq 3f, and I need access to the joint limits defined by the urdf, but the Joint handle does seem to contain that info, and I can't see any way to access the URDF. Any suggestions or good workarounds?",
    "Implementing a prismatic joint within a joint trajectory controller\n\nI'm wondering if someone has some ideas about how to make a prismatic axis work with ros2 controllers.\n\nI am using a UR10e which is mountd on an igus drylin ZLW 7th Axis controlled by Dryve D1. I have an API for it to communicate with the Axis to initialize, run and control it. It has an encoder so after homing I can extrapolate the exact position, velocity and other info.\n\nI send the move command using the function xAxis.profilePositionAbs_Async(pos, setvel, acc, dec);\n\nI have written a hardware interface with the following functions:\n\nstd::vector<hardware_interface::StateInterface>\nRRBotSystemPositionOnlyHardware::export_state_interfaces()\n{\n  std::vector<hardware_interface::StateInterface> state_interfaces;\n\n    state_interfaces.emplace_back(hardware_interface::StateInterface(\n    axisName, hardware_interface::HW_IF_POSITION, &pos));\n\n\n  return state_interfaces;\n}\n\nstd::vector<hardware_interface::CommandInterface>\nRRBotSystemPositionOnlyHardware::export_command_interfaces()\n{\n  std::vector<hardware_interface::CommandInterface> command_interfaces;\n    command_interfaces.emplace_back(hardware_interface::CommandInterface(\n    axisName, hardware_interface::HW_IF_POSITION, &pos));\n\n  return command_interfaces;\n}\n\nhardware_interface::CallbackReturn RRBotSystemPositionOnlyHardware::on_deactivate(\n  const rclcpp_lifecycle::State & /*previous_state*/)\n{\n    xAxis.waitForReady();\n    xAxis.setShutdown();\n\n    // Gracefully close everything down\n    \n    close(xAxis.sock);\n  return hardware_interface::CallbackReturn::SUCCESS;\n}\n\nhardware_interface::return_type RRBotSystemPositionOnlyHardware::read(\n  const rclcpp::Time & /*time*/, const rclcpp::Duration & /*period*/)\n{\n\n  pos=xAxis.getCurrentPosInMM()/1000;\n  std::cout << \"position in meters\" << pos << std::endl;\n\n  return hardware_interface::return_type::OK;\n}\n\nhardware_interface::return_type RRBotSystemPositionOnlyHardware::write(\n  const rclcpp::Time & /*time*/, const rclcpp::Duration & /*period*/)\n{\n\n  xAxis.profilePositionAbs_Async(pos*1000, setvel, acc, dec);\n\n  return hardware_interface::return_type::OK;\n}\nNow the problem is, as the profilePositionAbs_Async function is within the write function it gets called every loop, meaning the movement gets rerun continuously leading to a continuous accel- and deceleration.\n\nAlso I seem to get issues due to the position parameter being used in both the state and command interface.\n\nSo i was wondering, what is the best way to incorporate such an axis in a joint trajectory controller and handle the state/command interference\n\nEDIT: in order to elaborate on @ChristophFroehlich's reply i have added the description of the possible functions to interact with the driver:\n\n        void profilePositionAbs(float position, float velo, float accel, float decel=0); // Function \"Profile Position Mode\"; Move to an absolute position with given velocity, acceleration and deceleration\n        void profilePositionRel(float position, float velo, float accel, float decel=0); // Function \"Profile Position Mode\"; Move to an relative position with given velocity, acceleration and deceleration\n        void profileVelocity(float velo, float accel, float decel=0); // Function \"Profile Position Mode\"; Move with a set target velocity, acceleration and deceleration; Movement starts directly when the target velocity is not 0```",
    "Issues with Sending ROS2 Action from roslib.js to rosbridge_suite: Unable to Import Message Classes\n\nI'm encountering difficulties sending a ROS2 action from roslib.js to rosbridge_suite. The action is supposed to be handled by rosbridge_suite, but I'm encountering issues related to the import of message classes, such as \"Unable to import msg class FollowJointTrajectoryGoal from package control_msgs.\"\n\nMy setup:\n\nUbuntu 22.04.2 LTS (Jammy) running on Windows 11 wsl\nROS2 @ rolling distribution\nroslib.js @ ros2 branch ( commit 6a63a03 )\nrosbridge_suite @ ros2-actions branch ( commit 692f41a )\nROS_PYTHON_VERSION=3\nThis is the example action I'm trying to send from roslib.js to rosbridge:\n\nros2 action send_goal /ur5e/ur_joint_trajectory_controller/follow_joint_trajectory control_msgs/action/FollowJointTrajectory \"{\n  trajectory: {\n    joint_names: [shoulder_pan_joint, shoulder_lift_joint, elbow_joint, wrist_1_joint, wrist_2_joint, wrist_3_joint],\n    points: [\n      { positions: [3.02, -1.63, -1.88, 1.01, 1.51, 1.13], time_from_start: { sec: 5, nanosec: 500 } },\n      { positions: [-1.01, 0.38, -0.63, -0.88, 0.25, -1.63], time_from_start: { sec: 6, nanosec: 500 } },\n      { positions: [-1.01, 0.38, -0.63, -0.88, 0.25, 6.2], time_from_start: { sec: 50, nanosec: 500 } }\n    ]\n  },\n  goal_tolerance: [\n    { name: shoulder_pan_joint, position: 0.01 },\n    { name: shoulder_lift_joint, position: 0.01 },\n    { name: elbow_joint, position: 0.01 },\n    { name: wrist_1_joint, position: 0.01 },\n    { name: wrist_2_joint, position: 0.01 },\n    { name: wrist_3_joint, position: 0.01 }\n  ]\n}\"\nI use the latest roslib.js build from ros2-actions branch and I built and ran rosbridge_websocket (ros2 branch) with the following terminal commands. I could only find ROS1 rosbridge building steps. I modified the steps after some research.\n\nsource /opt/ros/rolling/setup.bash\nmkdir ~/ws\nmkdir ~/ws/src\ncd ~/ws/src\ngit clone https://github.com/RobotWebTools/rosbridge_suite.git -b ros2\ncd ~/ws\nsudo apt install python3-colcon-common-extensions\ncolcon build --symlink-install\ncolcon test\nsource install/setup.bash\nros2 run rosbridge_server rosbridge_websocket\nHere's my javascript code for sending the action using roslib.js:\n\n/* eslint-disable no-undef */\n\nimport \"./roslib.js\"; // https://github.com/RobotWebTools/roslibjs/blob/ros2-actions/build/roslib.js\n\nclass RosController {\n    constructor() {\n        this.ros = new ROSLIB.Ros({\n            url: \"ws://localhost:9090\",\n        });\n\n        this.ros.on('error', (error) => {\n            console.error('Error connecting to ROS:', error);\n        });\n\n        // Create an action client\n        this.actionClient = new ROSLIB.ActionClient({\n            ros: this.ros,\n            serverName: '/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory',\n            actionName: 'control_msgs/action/FollowJointTrajectory'\n        });\n\n        // Create a goal\n        this.goal = new ROSLIB.Goal({\n            actionClient: this.actionClient,\n            goalMessage: {\n                trajectory: {\n                    joint_names: ['shoulder_pan_joint', 'shoulder_lift_joint', 'elbow_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint'],\n                    points: [\n                        { positions: [3.02, -1.63, -1.88, 1.01, 1.51, 1.13], time_from_start: { sec: 5, nanosec: 500 } },\n                        { positions: [-1.01, 0.38, -0.63, -0.88, 0.25, -1.63], time_from_start: { sec: 6, nanosec: 500 } },\n                        { positions: [-1.01, 0.38, -0.63, -0.88, 0.25, 6.2], time_from_start: { sec: 50, nanosec: 500 } }\n                    ]\n                },\n                goal_tolerance: [\n                    { name: 'shoulder_pan_joint', position: 0.01 },\n                    { name: 'shoulder_lift_joint', position: 0.01 },\n                    { name: 'elbow_joint', position: 0.01 },\n                    { name: 'wrist_1_joint', position: 0.01 },\n                    { name: 'wrist_2_joint', position: 0.01 },\n                    { name: 'wrist_3_joint', position: 0.01 }\n                ]\n            }\n        });\n\n        // Check the status of the goal\n        this.goal.on('status', (status) => {\n            console.log('Goal status: ' + status.status);\n            if (status.status === 5) { // 5 is the status code for REJECTED\n                console.error('Goal was rejected');\n            }\n        });\n\n        this.ros.on('error', (error) => {\n            console.error('Error connecting to ROS:', error);\n        });\n\n        this.ros.on('connection', () => {\n            console.log('Connected to websocket server.');\n            // ROS is connected, now you can send the goal\n            this.moveUR5eRobot();\n        });\n\n        this.ros.on('close', function () {\n            console.log('Connection to websocket server closed.');\n        });\n\n        // Optional: Listen for result or feedback\n        this.goal.on('result', (result) => {\n            console.log('Action completed successfully:', result);\n        });\n\n        this.goal.on('feedback', (feedback) => {\n            console.log('Received feedback:', feedback);\n        });\n\n        // Optional: Handle errors\n        this.goal.on('timeout', () => {\n            console.error('Action did not complete before timeout');\n        });\n    }\n\n    getRos() {\n        return this.ros;\n    }\n\n    /*\n    https://docs.ros.org/en/iron/Tutorials/Advanced/Simulators/Webots/Installation-Windows.html#launch-the-webots-ros2-universal-robot-example\n    https://index.ros.org/p/webots_ros2_universal_robot/#humble-overview\n    https://github.com/cyberbotics/webots_ros2/wiki/Example-Universal-Robots\n    */\n    moveUR5eRobot() {\n        console.log(\"moveUR5eRobot\");\n        // Send the goal\n        this.goal.send();\n    }\n    \n}\n\nexport { RosController };\nThe rosbridge_suite prints errors indicating problems with importing message classes. I've tried both the rolling and iron distributions, and the issue persists. Am I missing something in my setup, or could the problem be in rosbridge or roslib.js?\n\ntapani@Desktop:~/ws$ ros2 run rosbridge_server rosbridge_websocket\nregistered capabilities (classes):\n - <class 'rosbridge_library.capabilities.advertise.Advertise'>\n - <class 'rosbridge_library.capabilities.publish.Publish'>\n - <class 'rosbridge_library.capabilities.subscribe.Subscribe'>\n - <class 'rosbridge_library.capabilities.defragmentation.Defragment'>\n - <class 'rosbridge_library.capabilities.advertise_service.AdvertiseService'>\n - <class 'rosbridge_library.capabilities.call_service.CallService'>\n - <class 'rosbridge_library.capabilities.service_response.ServiceResponse'>\n - <class 'rosbridge_library.capabilities.unadvertise_service.UnadvertiseService'>\n - <class 'rosbridge_library.capabilities.advertise_action.AdvertiseAction'>\n - <class 'rosbridge_library.capabilities.action_feedback.ActionFeedback'>\n - <class 'rosbridge_library.capabilities.action_result.ActionResult'>\n - <class 'rosbridge_library.capabilities.send_action_goal.SendActionGoal'>\n - <class 'rosbridge_library.capabilities.unadvertise_action.UnadvertiseAction'>\n[INFO] [1702467864.667909416] [rosbridge_websocket]: Rosbridge WebSocket server started on port 9090\n[INFO] [1702467884.421195988] [rosbridge_websocket]: Calling services in existing thread\n[INFO] [1702467884.421448867] [rosbridge_websocket]: Sending action goals in existing thread\n[INFO] [1702467884.421979997] [rosbridge_websocket]: Client connected. 1 clients total.\n[ERROR] [1702467885.354114994] [rosbridge_websocket]: [Client 27351158-07e8-47e7-9dba-7d897476db2e] [id: advertise:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/goal:1] advertise: Unable to import msg class FollowJointTrajectoryGoal from package control_msgs. Caused by module 'control_msgs.msg' has no attribute 'FollowJointTrajectoryGoal'\n[INFO] [1702467885.359658954] [rosbridge_websocket]: [Client 27351158-07e8-47e7-9dba-7d897476db2e] Subscribed to /ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/status\n[ERROR] [1702467885.359900905] [rosbridge_websocket]: [Client 27351158-07e8-47e7-9dba-7d897476db2e] [id: subscribe:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/feedback:4] subscribe: Unable to import msg class FollowJointTrajectoryFeedback from package control_msgs. Caused by module 'control_msgs.msg' has no attribute 'FollowJointTrajectoryFeedback'\n[ERROR] [1702467885.360110707] [rosbridge_websocket]: [Client 27351158-07e8-47e7-9dba-7d897476db2e] [id: subscribe:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/result:5] subscribe: Unable to import msg class FollowJointTrajectoryResult from package control_msgs. Caused by module 'control_msgs.msg' has no attribute 'FollowJointTrajectoryResult'\n[ERROR] [1702467885.360289265] [rosbridge_websocket]: [Client 27351158-07e8-47e7-9dba-7d897476db2e] [id: publish:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/goal:7] publish: Cannot infer topic type for topic /ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/goal as it is not yet advertised\n[ERROR] [1702467885.360480628] [rosbridge_websocket]: [Client 27351158-07e8-47e7-9dba-7d897476db2e] [id: subscribe:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/result:6] subscribe: Unable to import msg class FollowJointTrajectoryResult from package control_msgs. Caused by module 'control_msgs.msg' has no attribute 'FollowJointTrajectoryResult'\n[INFO] [1702467885.491837270] [rosbridge_websocket]: Calling services in existing thread\n[INFO] [1702467885.492038974] [rosbridge_websocket]: Sending action goals in existing thread\n[INFO] [1702467885.492506295] [rosbridge_websocket]: Client connected. 2 clients total.\n[ERROR] [1702467886.352260753] [rosbridge_websocket]: [Client 01c40dd7-4ffc-4c64-abb8-bd477e5c49a0] [id: advertise:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/goal:1] advertise: Unable to import msg class FollowJointTrajectoryGoal from package control_msgs. Caused by module 'control_msgs.msg' has no attribute 'FollowJointTrajectoryGoal'\n[INFO] [1702467886.397142045] [rosbridge_websocket]: [Client 01c40dd7-4ffc-4c64-abb8-bd477e5c49a0] Subscribed to /ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/status\n[ERROR] [1702467886.397518737] [rosbridge_websocket]: [Client 01c40dd7-4ffc-4c64-abb8-bd477e5c49a0] [id: subscribe:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/feedback:4] subscribe: Unable to import msg class FollowJointTrajectoryFeedback from package control_msgs. Caused by module 'control_msgs.msg' has no attribute 'FollowJointTrajectoryFeedback'\n[ERROR] [1702467886.398005589] [rosbridge_websocket]: [Client 01c40dd7-4ffc-4c64-abb8-bd477e5c49a0] [id: subscribe:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/result:5] subscribe: Unable to import msg class FollowJointTrajectoryResult from package control_msgs. Caused by module 'control_msgs.msg' has no attribute 'FollowJointTrajectoryResult'\n[ERROR] [1702467886.398194954] [rosbridge_websocket]: [Client 01c40dd7-4ffc-4c64-abb8-bd477e5c49a0] [id: publish:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/goal:7] publish: Cannot infer topic type for topic /ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/goal as it is not yet advertised\n[ERROR] [1702467886.398401323] [rosbridge_websocket]: [Client 01c40dd7-4ffc-4c64-abb8-bd477e5c49a0] [id: subscribe:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/result:6] subscribe: Unable to import msg class FollowJointTrajectoryResult from package control_msgs. Caused by module 'control_msgs.msg' has no attribute 'FollowJointTrajectoryResult'\n[ERROR] [1702467887.947030067] [rosbridge_websocket]: [Client 01c40dd7-4ffc-4c64-abb8-bd477e5c49a0] [id: publish:/ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/goal:8] publish: Cannot infer topic type for topic /ur5e/ur_joint_trajectory_controller/follow_joint_trajectory/goal as it is not yet advertised\nRelated roslib.js github issue: https://github.com/RobotWebTools/roslibjs/issues/646",
    "ROS2: Adding parameters to YAML launch file\n\nHow do I use a YAML launch file to pass parameters to a node? The tutorial covers passing parameters using a python launch file but not YAML.",
    "URDF surface tags are not propagated to gazebo\n\nI am struggling to set friction to my model in gazebo. Issue is it is frictionless. It is walking in place and cannot move. I set my tags according to this document SDFormat but they are not visible in link inspection in Gazebo. Looks like surface tag is not propagated at all. I got gazebo 11.10.2 .",
    "Create message which is array of submessages?\n\nLet's say I created a custom message in ROS2. How would I create a second meta message consisting of an array of those messages?\n\nThe documentation tutorial is very poor on creating anything but trivial messages.",
    "How can i show on my browser what i see on Rviz?\n\nIm on ROS2-Humble and i want to see my robot's location and movement on the map, the way i see it on Rviz, on my browser. For example, I want from Rviz to get the Grid, RobotModel, TF, and Map, send it on my browser and show it there, kinda like streaming it or rendering it via a .js file and .html. Im new with ROS2 and i cant seem to find any sources to help me. Most of the things i find are for ROS1 and Chat GPT doesnt help at all. Basically something like this: https://answers.ros.org/question/319626/real-time-map-generate-on-web-like-a-rviz/\n\nAny tips/help would be greatly appreciated, thanks in advance!",
    "Simple takeoff then do yaw rotation\n\nArming and takeoff work fine but i don't know how to do yaw rotation:\n\nclass controller:\n    def __init__(self):\n        \n        rospy.Subscriber('mavros/state', State, self.state_cb)\n        \n        self.state = State()\n\n\n    def state_cb(self, msg):\n        self.state = msg\n    \n    def move(self,x,y,z):\n        pub_posisi = rospy.Publisher(\"/mavros/setpoint_velocity/cmd_vel\",TwistStamped,queue_size=1)\n        pub_data = TwistStamped()\n\n        pub_data.twist.linear.x = x\n        pub_data.twist.linear.y = y\n        pub_data.twist.linear.z = z\n\n        pub_posisi.publish(pub_data)\n\n        time.sleep(5)\n    \n    def position(self,x,y,z):\n        pub_posisi = rospy.Publisher(\"/mavros/setpoint_position/local\",PoseStamped,queue_size=10)\n        posisi = PoseStamped()\n        \n        posisi.pose.position.x = x\n        posisi.pose.position.y = y\n        posisi.pose.position.z = z\n\n        q = quaternion_from_euler(0.0,0.0,3.0)\n        \n        posisi.pose.orientation.x = q[0]\n        posisi.pose.orientation.y = q[1]\n        posisi.pose.orientation.z = q[2]\n        posisi.pose.orientation.w = q[3] \n\n        pub_posisi.publish(posisi)\n\n        rospy.loginfo(f\"go to point {x,y,z}\")\n\n        time.sleep(15)",
    "irobot create3 topics not found after setup in macos multipass vm\n\nI have a Mac OS 14.1 and I'm seting up irobot Create3 for the first time. I've confirmed the robot works using the python web playground.\n\nI've installed Multipass 1.12.2+mac and created an Ubuntu 22.04 instance and installed ROS2 per the robot humble setup guide. I created the multipass instance with this command:\n\nmultipass launch --name=create3 --cpus=2 --disk=20GiB\nWhen listing the topics, I don't see any of the expected irobot topics\n\nros2 topic list\nActual:\n\n/parameter_events \n/rosout\nExpected:\n\n/battery_state\n/cliff_intensity\n/cmd_audio ...\nThe VM info multipass info create3:\n\nName:           create3\nState:          Running\nIPv4:           10.211.67.3\n                172.17.0.1\nRelease:        Ubuntu 22.04.3 LTS\nImage hash:     054db2d88c45 (Ubuntu 22.04 LTS)\nCPU(s):         2\nLoad:           0.00 0.14 0.12\nDisk usage:     8.8GiB out of 19.3GiB\nMemory usage:   248.8MiB out of 3.8GiB\nMounts:         --",
    "executable '[<launch.substitutions.text_substitution.TextSubstitution>]' not found on the PATH\n\nI am trying to launch the first example from the ros2 control demo package: https://github.com/ros-controls/ros2_control_demos/tree/humble. I am using ROS2 humble on ubuntu 22.04. First I built every package successfully, then sourced the install/setup.bash and started the launchfile with:\n\nros2 launch ros2_control_demo_example_1 view_robot.launch.py\nBut I received the following Error.\n\n[ERROR] [launch]: Caught exception in launch (see debug for traceback): executable '[<launch.substitutions.text_substitution.TextSubstitution object at 0x7f6a81793cd0>]' not found on the PATH\nI did not change any code from the example. It would be nice if somebody could help me or tell me what the problem is?\n\nHere is my Traceback:\n\n[DEBUG] [launch.launch_context]: emitting event synchronously: 'launch.events.IncludeLaunchDescription'\n[INFO] [launch]: All log files can be found below /home/user/.ros/log/date\n[INFO] [launch]: Default logging verbosity is set to DEBUG\n[DEBUG] [launch]: processing event: '<launch.events.include_launch_description.IncludeLaunchDescription object at 0x7f6a8632e3e0>'\n[DEBUG] [launch]: processing event: '<launch.events.include_launch_description.IncludeLaunchDescription object at 0x7f6a8232e3e0>' \u2713 '<launch.event_handlers.on_include_launch_description.OnIncludeLaunchDescription object at 0x7f6a8236d8a0>'\nExecuting <Task finished name='Task-2' coro=<LaunchService._process_one_event() done, defined at /opt/ros/humble/lib/python3.10/site-packages/launch/launch_service.py:228> exception=SubstitutionFailure(\"executable '[<launch.substitutions.text_substitution.TextSubstitution object at 0x7f6a81793cd0>]' not found on the PATH\") created at /opt/ros/humble/lib/python3.10/site-packages/launch/launch_service.py:318> took 0.133 seconds\n[DEBUG] [launch]: An exception was raised in an async action/event\n[DEBUG] [launch]: Traceback (most recent call last):\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/launch_service.py\", line 336, in run_async\n    raise completed_tasks_exceptions[0]\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/launch_service.py\", line 230, in _process_one_event\n    await self.__process_event(next_event)\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/launch_service.py\", line 250, in __process_event\n    visit_all_entities_and_collect_futures(entity, self.__context))\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/utilities/visit_all_entities_and_collect_futures_impl.py\", line 45, in visit_all_entities_and_collect_futures\n    futures_to_return += visit_all_entities_and_collect_futures(sub_entity, context)\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/utilities/visit_all_entities_and_collect_futures_impl.py\", line 45, in visit_all_entities_and_collect_futures\n    futures_to_return += visit_all_entities_and_collect_futures(sub_entity, context)\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/utilities/visit_all_entities_and_collect_futures_impl.py\", line 45, in visit_all_entities_and_collect_futures\n    futures_to_return += visit_all_entities_and_collect_futures(sub_entity, context)\n  [Previous line repeated 1 more time]\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/utilities/visit_all_entities_and_collect_futures_impl.py\", line 38, in visit_all_entities_and_collect_futures\n    sub_entities = entity.visit(context)\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/action.py\", line 108, in visit\n    return self.execute(context)\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch_ros/actions/node.py\", line 490, in execute\n    self._perform_substitutions(context)\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch_ros/actions/node.py\", line 445, in _perform_substitutions\n    evaluated_parameters = evaluate_parameters(context, self.__parameters)\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch_ros/utilities/evaluate_parameters.py\", line 164, in evaluate_parameters\n    output_params.append(evaluate_parameter_dict(context, param))\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch_ros/utilities/evaluate_parameters.py\", line 72, in evaluate_parameter_dict\n    evaluated_value = perform_substitutions(context, list(value))\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/utilities/perform_substitutions_impl.py\", line 26, in perform_substitutions\n    return ''.join([context.perform_substitution(sub) for sub in subs])\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/utilities/perform_substitutions_impl.py\", line 26, in <listcomp>\n    return ''.join([context.perform_substitution(sub) for sub in subs])\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/launch_context.py\", line 240, in perform_substitution\n    return substitution.perform(self)\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/substitutions/command.py\", line 94, in perform\n    command_str = perform_substitutions(context, self.command)\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/utilities/perform_substitutions_impl.py\", line 26, in perform_substitutions\n    return ''.join([context.perform_substitution(sub) for sub in subs])\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/utilities/perform_substitutions_impl.py\", line 26, in <listcomp>\n    return ''.join([context.perform_substitution(sub) for sub in subs])\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/launch_context.py\", line 240, in perform_substitution\n    return substitution.perform(self)\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/substitutions/path_join_substitution.py\", line 45, in perform\n    performed_substitutions = [sub.perform(context) for sub in self.__substitutions]\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/substitutions/path_join_substitution.py\", line 45, in <listcomp>\n    performed_substitutions = [sub.perform(context) for sub in self.__substitutions]\n  File \"/opt/ros/humble/lib/python3.10/site-packages/launch/substitutions/find_executable.py\", line 66, in perform\n    raise SubstitutionFailure(\"executable '{}' not found on the PATH\".format(self.name))\nlaunch.substitutions.substitution_failure.SubstitutionFailure: executable '[<launch.substitutions.text_substitution.TextSubstitution object at 0x7f6a81793cd0>]' not found on the PATH\n\n[ERROR] [launch]: Caught exception in launch (see debug for traceback): executable '[<launch.substitutions.text_substitution.TextSubstitution object at 0x7f6a81793cd0>]' not found on the PATH\n[DEBUG] [launch.launch_context]: emitting event: 'launch.events.Shutdown'\n[DEBUG] [launch]: processing event: '<launch.events.shutdown.Shutdown object at 0x7f6a8232e140>'\n[DEBUG] [launch]: processing event: '<launch.events.shutdown.Shutdown object at 0x7f6a8232e140>' \u2713 '<launch.event_handlers.on_shutdown.OnShutdown object at 0x7f6a8171cbb0>'\n[DEBUG] [launch]: processing event: '<launch.events.shutdown.Shutdown object at 0x7f6a8232e140>' \u2713 '<launch.event_handlers.on_shutdown.OnShutdown object at 0x7f6a8232c9a0>'",
    "octomap_msgs/conversions.h: No such file or directory\n\nUsing 64-bit Ubuntu 22.04.3 LTS On \"colcon build\" I'm recieving the following error:\n\n/home/ajifoster3/dev_ws/src/octomap_publisher/src/octomap_publisher_node.cpp:2:10: fatal error: octomap_msgs/conversions.h: No such file or directory\n    2 | #include <octomap_msgs/conversions.h>\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\ncompilation terminated.\ngmake[2]: *** [CMakeFiles/octomap_publisher_node.dir/build.make:76: CMakeFiles/octomap_publisher_node.dir/src/octomap_publisher_node.cpp.o] Error 1\ngmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/octomap_publisher_node.dir/all] Error 2\ngmake: *** [Makefile:146: all] Error 2\n---\nFailed   <<< octomap_publisher [0.17s, exited with code 2]\nopt/ros/humble/include/octomap_msgs has a file called conversions.h\n\nMy ros node:\n\n#include <octomap/OcTree.h>\n#include <octomap_msgs/conversions.h>\n#include <rclcpp/rclcpp.hpp>\n\nclass OctomapPublisher : public rclcpp::Node {\npublic:\n    OctomapPublisher() : Node(\"octomap_publisher\") {\n        this->declare_parameter<std::string>(\"octomap_file\", \"/home/ajifoster3/occupancy_map_full.txt\");\n        std::string octomap_file;\n        this->get_parameter(\"octomap_file\", octomap_file);\n\n        auto tree = std::make_shared<octomap::OcTree>(octomap_file);\n        octomap_msgs::msg::Octomap octomap_msg;\n        octomap_msgs::binaryMapToMsg(*tree, octomap_msg);\n\n        publisher_ = this->create_publisher<octomap_msgs::msg::Octomap>(\"octomap\", 1);\n        timer_ = this->create_wall_timer(\n            std::chrono::milliseconds(1000),\n            [this, octomap_msg]() {\n                publisher_->publish(octomap_msg);\n            });\n    }\n\nprivate:\n    rclcpp::Publisher<octomap_msgs::msg::Octomap>::SharedPtr publisher_;\n    rclcpp::TimerBase::SharedPtr timer_;\n};\n\nint main(int argc, char** argv) {\n    rclcpp::init(argc, argv);\n    rclcpp::spin(std::make_shared<OctomapPublisher>());\n    rclcpp::shutdown();\n    return 0;\n}\nmy CMakeLists.txt is the following\n\ncmake_minimum_required(VERSION 3.8)\nproject(octomap_publisher)\n\nif(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n  add_compile_options(-Wall -Wextra -Wpedantic)\nendif()\n\nfind_package(ament_cmake REQUIRED)\nfind_package(rclcpp REQUIRED)\nfind_package(octomap_msgs REQUIRED)\n\nadd_executable(octomap_publisher_node src/octomap_publisher_node.cpp)\n\nament_target_dependencies(octomap_publisher_node rclcpp octomap_msgs)\n\ninstall(TARGETS\n  octomap_publisher_node\n  DESTINATION lib/${PROJECT_NAME}\n)\n\nif(BUILD_TESTING)\n  find_package(ament_lint_auto REQUIRED)\n  ament_lint_auto_find_test_dependencies()\nendif()\n\nament_package()\npackage.xml:\n\n<?xml version=\"1.0\"?>\n<?xml-model href=\"http://download.ros.org/schema/package_format3.xsd\" schematypens=\"http://www.w3.org/2001/XMLSchema\"?>\n<package format=\"3\">\n  <name>octomap_publisher</name>\n  <version>0.0.0</version>\n  <description>TODO: Package description</description>\n  <maintainer email=\"ajifoster3@gmail.com\">ajifoster3</maintainer>\n  <license>TODO: License declaration</license>\n\n  <buildtool_depend>ament_cmake</buildtool_depend>\n\n  <depend>rclcpp</depend>\n  <depend>octomap_msgs</depend>\n\n  <test_depend>ament_lint_auto</test_depend>\n  <test_depend>ament_lint_common</test_depend>\n\n  <export>\n    <build_type>ament_cmake</build_type>\n  </export>\n</package>",
    "Error fetching dependencies from Git repo\n\nI have cloned this repo:https://github.com/ClemensElflein/open_mower_ros\n\nhowever when fetching the dependencies with:\n\nrosdep install --from-paths src --ignore-src --default-yes\nI get the following error:\n\nERROR: the following packages/stacks could not have their rosdep keys resolved  to system dependencies: \nmower_utils: Cannot locate rosdep definition for [xbot_msgs] \nmower_msgs: Cannot locate rosdep definition for [xesc_msgs] \nmower_simulation: Cannot locate rosdep definition for [xbot_positioning]\nmower_comms: Cannot locate rosdep definition for [xesc_msgs] \nmower_map: Cannot locate rosdep definition for [xbot_msgs] \nopen_mower: Cannot locate rosdep definition for [ftc_local_planner] \nmower_logic: Cannot locate rosdep definition for [xbot_positioning]\nI have tried many things, but nothing works. I am working on ros-noetic. Any tip?",
    "depth aligned capture doesn't yield same number of rgb and depth frames -- cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is\n\nSteps for reproducing the problem with an Intel RealSense D435 camera using ROS Noetic inside a docker.\n\nIn the first terminal:\n\n(base) mona@ada:~$ sudo docker run -it --privileged -v /dev:/dev -v /home/mona:/workspace -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY --device /dev/bus/usb ros_noetic\n\nroot@7a805700666e:/workspace# cd catkin_ws\n\n(base) mona@ada:~$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 7a805700666e ros_noetic \"/ros_entrypoint.sh \u2026\" 4 seconds ago Up 3 seconds clever_feynman\n\nroslaunch realsense2_camera rs_camera.launch align_depth:=true\n\nAfter capture is done,\n\n5.\n\nroot@7a805700666e:/workspace/catkin_ws# catkin_make\nBase path: /workspace/catkin_ws\nSource space: /workspace/catkin_ws/src\nBuild space: /workspace/catkin_ws/build\nDevel space: /workspace/catkin_ws/devel\nInstall space: /workspace/catkin_ws/install\n####\n#### Running command: \"make cmake_check_build_system\" in \"/workspace/catkin_ws/build\"\n####\n####\n#### Running command: \"make -j32 -l32\" in \"/workspace/catkin_ws/build\"\n####\n root@ce71bcbb2d89:/workspace/catkin_ws# source devel/setup.bash \n root@ce71bcbb2d89:/workspace/catkin_ws# rosrun bag_converter convert.py\nother terminal\n\n$ xhost +local:docker\n\ndocker exec -it -e DISPLAY=$DISPLAY  clever_feynman  bash run step 3 in this terminal after starting step 4 in the first terminal.\n\nroot@7a805700666e:/workspace# rosbag record -a -O mona_noetic\n\nHere's the conversion script:\n\n(base) mona@ada:~$ cat catkin_ws/src/bag_converter/scripts/convert.py \n#!/usr/bin/python3\n\nimport os\nimport sys\nimport yaml\nfrom rosbag.bag import Bag\nimport cv2\n\nimport roslib;   #roslib.load_manifest(PKG)\nimport rosbag\nimport rospy\nimport cv2\nimport numpy as np\nimport argparse\nimport os\n\nfrom sensor_msgs.msg import Image\nfrom cv_bridge import CvBridge\nfrom cv_bridge import CvBridgeError\n\nclass ImageCreator():\n    def __init__(self, bagfile, rgbpath, depthpath, rgbstamp, depthstamp):\n        self.bridge = CvBridge()\n        with rosbag.Bag(bagfile, 'r') as bag:\n            for topic,msg,t in bag.read_messages():\n                print(topic)\n                if topic == \"/camera/color/image_raw\":\n                    cv_image = self.bridge.imgmsg_to_cv2(msg,\"bgr8\")\n                    timestr = \"%.6f\" %  msg.header.stamp.to_sec()\n                    image_name = timestr+ \".png\" \n                    cv2.waitKey(1);\n                    cv2.imwrite(rgbpath + image_name, cv_image) \n\n                elif topic == \"/camera/aligned_depth_to_color/image_raw\": \n                    cv_image = self.bridge.imgmsg_to_cv2(msg,\"16UC1\")\n                    timestr = \"%.6f\" %  msg.header.stamp.to_sec()\n                    image_name = timestr+ \".png\"\n                    \n                    cv2.imwrite(depthpath + image_name, (cv_image).astype(np.uint16))\n\n\nif __name__ == '__main__':\n    ImageCreator('/workspace/mona_noetic.bag', '/workspace/mona_noetic/rgb/', '/workspace/mona_noetic/depth/', 1, 1)\n\nHowever, from the capture, we see this unaligned number of depth aligned frames for rgb and depth:\n\nroot@7a805700666e:/workspace# rosbag info mona_noetic.bag \npath:        mona_noetic.bag\nversion:     2.0\nduration:    18.2s\nstart:       Nov 15 2023 16:04:52.73 (1700064292.73)\nend:         Nov 15 2023 16:05:10.93 (1700064310.93)\nsize:        30.5 MB\nmessages:    462\ncompression: none [41/41 chunks]\ntypes:       bond/Status                           [eacc84bf5d65b6777d4c50f463dfb9c8]\n             diagnostic_msgs/DiagnosticArray       [60810da900de1dd6ddd437c3503511da]\n             dynamic_reconfigure/Config            [958f16a05573709014982821e6822580]\n             dynamic_reconfigure/ConfigDescription [757ce9d44ba8ddd801bb30bc456f946f]\n             realsense2_camera/Extrinsics          [3627b43073f4cd5dd6dc179a49eda2ad]\n             realsense2_camera/Metadata            [4966ca002be16ee67fe4dbfb2f354787]\n             rosgraph_msgs/Log                     [acffd30cd6b6de30f120938c17c593fb]\n             sensor_msgs/CameraInfo                [c9a58c1b0b154e0e6da7578cb991d214]\n             sensor_msgs/CompressedImage           [8f7a12909da2c9d3332d540a0977563f]\n             sensor_msgs/Image                     [060021388200f6f0f447d0fcd9c64743]\n             tf2_msgs/TFMessage                    [94810edda583a504dfda3829e70d7eec]\n             theora_image_transport/Packet         [33ac4e14a7cff32e7e0d65f18bb410f3]\ntopics:      /camera/align_to_color/parameter_descriptions                                      1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/align_to_color/parameter_updates                                           1 msg     : dynamic_reconfigure/Config           \n             /camera/aligned_depth_to_color/image_raw                                           2 msgs    : sensor_msgs/Image                    \n             /camera/aligned_depth_to_color/image_raw/compressed/parameter_descriptions         1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/aligned_depth_to_color/image_raw/compressed/parameter_updates              1 msg     : dynamic_reconfigure/Config           \n             /camera/aligned_depth_to_color/image_raw/compressedDepth/parameter_descriptions    1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/aligned_depth_to_color/image_raw/compressedDepth/parameter_updates         1 msg     : dynamic_reconfigure/Config           \n             /camera/aligned_depth_to_color/image_raw/theora/parameter_descriptions             1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/aligned_depth_to_color/image_raw/theora/parameter_updates                  1 msg     : dynamic_reconfigure/Config           \n             /camera/color/camera_info                                                          2 msgs    : sensor_msgs/CameraInfo               \n             /camera/color/image_raw/compressed                                                 2 msgs    : sensor_msgs/CompressedImage          \n             /camera/color/image_raw/compressed/parameter_descriptions                          1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/color/image_raw/compressed/parameter_updates                               1 msg     : dynamic_reconfigure/Config           \n             /camera/color/image_raw/compressedDepth/parameter_descriptions                     1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/color/image_raw/compressedDepth/parameter_updates                          1 msg     : dynamic_reconfigure/Config           \n             /camera/color/image_raw/theora/parameter_descriptions                              1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/color/image_raw/theora/parameter_updates                                   1 msg     : dynamic_reconfigure/Config           \n             /camera/depth/camera_info                                                         39 msgs    : sensor_msgs/CameraInfo               \n             /camera/depth/image_rect_raw                                                      38 msgs    : sensor_msgs/Image                    \n             /camera/depth/image_rect_raw/compressed                                           38 msgs    : sensor_msgs/CompressedImage          \n             /camera/depth/image_rect_raw/compressed/parameter_descriptions                     1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/depth/image_rect_raw/compressed/parameter_updates                          1 msg     : dynamic_reconfigure/Config           \n             /camera/depth/image_rect_raw/compressedDepth                                      40 msgs    : sensor_msgs/CompressedImage          \n             /camera/depth/image_rect_raw/compressedDepth/parameter_descriptions                1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/depth/image_rect_raw/compressedDepth/parameter_updates                     1 msg     : dynamic_reconfigure/Config           \n             /camera/depth/image_rect_raw/theora                                                3 msgs    : theora_image_transport/Packet        \n             /camera/depth/image_rect_raw/theora/parameter_descriptions                         1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/depth/image_rect_raw/theora/parameter_updates                              1 msg     : dynamic_reconfigure/Config           \n             /camera/depth/metadata                                                            37 msgs    : realsense2_camera/Metadata           \n             /camera/extrinsics/depth_to_color                                                  1 msg     : realsense2_camera/Extrinsics         \n             /camera/realsense2_camera_manager/bond                                            37 msgs    : bond/Status                           (2 connections)\n             /camera/rgb_camera/auto_exposure_roi/parameter_descriptions                        1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/rgb_camera/auto_exposure_roi/parameter_updates                             1 msg     : dynamic_reconfigure/Config           \n             /camera/rgb_camera/parameter_descriptions                                          1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/rgb_camera/parameter_updates                                               1 msg     : dynamic_reconfigure/Config           \n             /camera/stereo_module/auto_exposure_roi/parameter_descriptions                     1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/stereo_module/auto_exposure_roi/parameter_updates                          1 msg     : dynamic_reconfigure/Config           \n             /camera/stereo_module/parameter_descriptions                                       1 msg     : dynamic_reconfigure/ConfigDescription\n             /camera/stereo_module/parameter_updates                                            1 msg     : dynamic_reconfigure/Config           \n             /diagnostics                                                                      68 msgs    : diagnostic_msgs/DiagnosticArray      \n             /rosout                                                                           88 msgs    : rosgraph_msgs/Log                     (2 connections)\n             /rosout_agg                                                                       38 msgs    : rosgraph_msgs/Log                    \n             /tf_static                                                                         1 msg     : tf2_msgs/TFMessage\nFurther, I see this error when starting the depth align capture:\n\n[ INFO] [1700064224.344956163]: SELECTED BASE:Depth, 0\n[ INFO] [1700064224.355172954]: RealSense Node Is Up!\n 15/11 16:03:44,482 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 300, error: Resource temporarily unavailable, number: b\n[ WARN] [1700064224.531686247]: \n 15/11 16:03:44,873 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:44,924 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:45,179 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:45,230 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:45,381 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:45,432 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:45,584 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:45,635 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:45,786 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:45,837 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:45,988 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:46,039 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:46,191 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n 15/11 16:03:46,243 WARNING [140201123149568] (messenger-libusb.cpp:42) control_transfer returned error, index: 768, error: Resource temporarily unavailable, number: 11\n[ERROR] [1700064294.457665710]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n 15/11 16:04:54,800 ERROR [140200416114432] (uvc-streamer.cpp:106) uvc streamer watchdog triggered on endpoint: 132\n[ERROR] [1700064294.983499621]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064295.496846075]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064296.010771429]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064296.478652416]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064296.895753832]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064297.321010419]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064297.747054477]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064298.173193296]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064298.601070803]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064299.022315621]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064299.448716345]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064299.868316530]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064300.287427109]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064300.702281242]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064301.118212082]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064301.540673572]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064301.961749822]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064302.381357661]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064302.799640022]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064303.226624059]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064303.655973210]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064304.081943511]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064304.509441908]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064304.939367902]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064305.369842480]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064305.800837626]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064306.233901531]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064306.662224030]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064307.088729246]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064307.503594745]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064307.920114882]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064308.346923624]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064308.779323394]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064309.224245296]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064309.664677204]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064310.094353804]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064310.524822175]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n[ERROR] [1700064310.940728063]: cv_bridge exception: '[16UC1] is not a color format. but [bgr8] is. The conversion does not make sense'\n^C[camera/realsense2_camera-3] killing on exit\n[camera/realsense2_camera_manager-2] killing on exit\n[rosout-1] killing on exit\n[master] killing on exit\nshutting down processing monitor...\n... shutting down processing monitor complete\ndone",
    "What is the difference between RCL_STEADY_TIME, RCL_SYSTEM_TIME and RCL_ROS_TIME?\n\nI wrote the following code to check the difference myself, but I could not find any considerable difference.\n\n#include <rclcpp/rclcpp.hpp>\n\nauto main(int argc, char **argv) -> int \n{\n        rclcpp::init(argc, argv);\n\n        auto node = std::make_shared<rclcpp::Node>(\"time_converter\");\n\n        rclcpp::Time steady_time(node->now(),RCL_STEADY_TIME);\n        RCLCPP_INFO(node->get_logger(), \"RCL_STEADY_TIME = %f\",steady_time.seconds());  \n\n        rclcpp::Time sys_time(node->now(),RCL_SYSTEM_TIME);\n        RCLCPP_INFO(node->get_logger(), \"RCL_SYSTEM_TIME = %f\",sys_time.seconds());  \n\n        rclcpp::Time ros_time(node->now(),RCL_ROS_TIME);\n        RCLCPP_INFO(node->get_logger(), \"RCL_ROS_TIME = %f\",ros_time.seconds());  \n\n        return EXIT_SUCCESS;\n}\nOutput:\n\n[INFO] [1699543136.456027415] [time_converter]: steady node time = 1699543136.456026\n[INFO] [1699543136.456121797] [time_converter]: sys node time = 1699543136.456121\n[INFO] [1699543136.456138399] [time_converter]: sys node time = 1699543136.456138\nActual question is, How do I get steady time from node->now()? Because that is the answer I am looking for.",
    "Parameter substitution within rosparam list inside launch file\n\nI am trying to change the parameter map_frame within the rosparam list as shown below, but the substitution does not work.\n\nI am actually passing the \"tf_pre\" argument from another launch file.\n\nThis line <rosparam param=\"map_frame\" subst_value=\"True\">$(arg tf_pre)/map </rosparam> # prefix the tf name for the map is used to pass the value of tf_pre to the value of map_frame inside the <rosparam> list.\n\nThis does not seem to have any effect because when I run rosparam get /h1/slam_gmapping/map_frame I get the wrong value.\n\nAnyone has an idea what could be wrong?\n\nThis runs in ROS Noetic and I am trying to slam a multi robot Gazebo simulation.\n\n <launch>\n    \n      <arg name=\"tf_pre\" default=\"robot1\" />\n    \n      <node pkg=\"gmapping\" type=\"slam_gmapping\" name=\"slam_gmapping\">\n    \n        <rosparam param=\"map_frame\" subst_value=\"True\">$(arg tf_pre)/map </rosparam> # prefix the tf name for the map\n    \n        <rosparam>\n          odom_frame: odom\n          base_frame: base_link\n          map_frame: map\n          ...\n    \n        </rosparam>\n    \n      </node>\n    </launch>",
    "Crazyflie: Connecting, logging and parameters-->Add logging config\n\nI would like to define stateEstimate.vx, stateEstimate.vy, and stateEstimate.vz variables to access those data. I used the following code parts.\n\ndef _connected(self, link_uri):\n\n        self.get_logger().info('Connected!')\n        self._lg_stab = LogConfig(name='Stabilizer', period_in_ms=100)\n        self._lg_stab.add_variable('stateEstimate.x', 'float')\n        self._lg_stab.add_variable('stateEstimate.y', 'float')\n        self._lg_stab.add_variable('stateEstimate.z', 'float')\n        self._lg_stab.add_variable('stateEstimate.vx', 'float')\n        self._lg_stab.add_variable('stateEstimate.vy', 'float')\n        self._lg_stab.add_variable('stateEstimate.vz', 'float')        \n        self._lg_stab.add_variable('stateEstimate.roll', 'float')\n        self._lg_stab.add_variable('stateEstimate.pitch', 'float')\n        self._lg_stab.add_variable('stateEstimate.yaw', 'float')\n               \n        self._lg_range = LogConfig(name='Range', period_in_ms=100)\n        self._lg_range.add_variable('range.zrange', 'uint16_t')\n        self._lg_range.add_variable('range.front', 'uint16_t')\n        self._lg_range.add_variable('range.right', 'uint16_t')\n        self._lg_range.add_variable('range.left', 'uint16_t')\n        self._lg_range.add_variable('range.back', 'uint16_t')\n        try:\n            self._cf.log.add_config(self._lg_stab)\n            self._lg_stab.data_received_cb.add_callback(self._stab_log_data)\n            self._lg_stab.error_cb.add_callback(self._stab_log_error)\n            self._lg_stab.start()\n            self._cf.log.add_config(self._lg_range)\n            self._lg_range.data_received_cb.add_callback(self._range_log_data)\n            self._lg_range.error_cb.add_callback(self._range_log_error)\n            self._lg_range.start()\n\n        except KeyError as e:\n            print('Could not start log configuration,'\n                  '{} not found in TOC'.format(str(e)))\n        except AttributeError:\n            print('Could not add Stabilizer log config, bad configuration.')\nWhen I run my python file via ROS2, I saw the following part on the terminal (Could not add Stabilizer log config, bad configuration). I could not get why it happens. However, whenver I use the above code part without stateEstimate.vx, stateEstimate.vy, and stateEstimate.vz, it works pretty well. Could you help us to fix it, thanks.\n\nntukenmez3@ae-icps-407120:~/Documents/2023-crazy-flie-1/crazyflie_ros2_experimental_2/crazyflie_ros2$ ros2 run crazyflie_ros2 crazyflie_publisher \n[INFO] [1698871075.735318053] [crazyflie_publisher]: Connected!\nCould not add Stabilizer log config, bad configuration.",
    "Transform failed during publishing of map_odom transform\n\ni am trying publish tf and odom. my problem is that i always get this error:\n\n[ERROR] [1698638471.209513778]: Transform failed during publishing of map_odom transform: Lookup would require extrapolation 0.567969187s into the future.  Requested time 1698638469.812094927 but the latest data is at time 1698638469.244125605, when looking up transform from frame [base_link] to frame [odom]\nAnd when i look at my tf tree, odom is not publish to base_link as i expected enter image description here\n\nHere's the odom publisher node:\n\n#include \"ros/ros.h\"\n#include \"std_msgs/Int16.h\"\n#include <nav_msgs/Odometry.h>\n#include <geometry_msgs/PoseStamped.h>\n#include <tf2/LinearMath/Quaternion.h>\n#include <tf2_ros/transform_broadcaster.h>\n#include <cmath>\n \n// Create odometry data publishers\nros::Publisher odom_data_pub;\nros::Publisher odom_data_pub_quat;\nnav_msgs::Odometry odomNew;\nnav_msgs::Odometry odomOld;\n \n// Initial pose\nconst double initialX = 0.0;\nconst double initialY = 0.0;\nconst double initialTheta = 0.00000000001;\nconst double PI = 3.141592;\n \n// Robot physical constants\nconst double TICKS_PER_REVOLUTION = 535; // For reference purposes.\nconst double WHEEL_RADIUS = 0.033; // Wheel radius in meters\nconst double WHEEL_BASE = 0.17; // Center of left tire to center of right tire\nconst double TICKS_PER_METER = 3100; // Original was 2800\n \n// Distance both wheels have traveled\ndouble distanceLeft = 0;\ndouble distanceRight = 0;\n \n// Flag to see if initial pose has been received\nbool initialPoseRecieved = false;\n \nusing namespace std;\n \n// Get initial_2d message from either Rviz clicks or a manual pose publisher\nvoid set_initial_2d(const geometry_msgs::PoseStamped &rvizClick) {\n \n  odomOld.pose.pose.position.x = rvizClick.pose.position.x;\n  odomOld.pose.pose.position.y = rvizClick.pose.position.y;\n  odomOld.pose.pose.orientation.z = rvizClick.pose.orientation.z;\n  initialPoseRecieved = true;\n}\n \n// Calculate the distance the left wheel has traveled since the last cycle\nvoid Calc_Left(const std_msgs::Int16& leftCount) {\n \n  static int lastCountL = 0;\n  if(leftCount.data != 0 && lastCountL != 0) {\n         \n    int leftTicks = (leftCount.data - lastCountL);\n \n    if (leftTicks > 10000) {\n      leftTicks = 0 - (65535 - leftTicks);\n    }\n    else if (leftTicks < -10000) {\n      leftTicks = 65535-leftTicks;\n    }\n    else{}\n    distanceLeft = leftTicks/TICKS_PER_METER;\n  }\n  lastCountL = leftCount.data;\n}\n \n// Calculate the distance the right wheel has traveled since the last cycle\nvoid Calc_Right(const std_msgs::Int16& rightCount) {\n   \n  static int lastCountR = 0;\n  if(rightCount.data != 0 && lastCountR != 0) {\n \n    int rightTicks = rightCount.data - lastCountR;\n     \n    if (rightTicks > 10000) {\n      distanceRight = (0 - (65535 - distanceRight))/TICKS_PER_METER;\n    }\n    else if (rightTicks < -10000) {\n      rightTicks = 65535 - rightTicks;\n    }\n    else{}\n    distanceRight = rightTicks/TICKS_PER_METER;\n  }\n  lastCountR = rightCount.data;\n}\n \n// Publish a nav_msgs::Odometry message in quaternion format\nvoid publish_quat() {\n \n  tf2::Quaternion q;\n         \n  q.setRPY(0, 0, odomNew.pose.pose.orientation.z);\n \n  nav_msgs::Odometry quatOdom;\n  quatOdom.header.stamp = odomNew.header.stamp;\n  quatOdom.header.frame_id = \"odom\";\n  quatOdom.child_frame_id = \"base_link\";\n  quatOdom.pose.pose.position.x = odomNew.pose.pose.position.x;\n  quatOdom.pose.pose.position.y = odomNew.pose.pose.position.y;\n  quatOdom.pose.pose.position.z = odomNew.pose.pose.position.z;\n  quatOdom.pose.pose.orientation.x = q.x();\n  quatOdom.pose.pose.orientation.y = q.y();\n  quatOdom.pose.pose.orientation.z = q.z();\n  quatOdom.pose.pose.orientation.w = q.w();\n  quatOdom.twist.twist.linear.x = odomNew.twist.twist.linear.x;\n  quatOdom.twist.twist.linear.y = odomNew.twist.twist.linear.y;\n  quatOdom.twist.twist.linear.z = odomNew.twist.twist.linear.z;\n  quatOdom.twist.twist.angular.x = odomNew.twist.twist.angular.x;\n  quatOdom.twist.twist.angular.y = odomNew.twist.twist.angular.y;\n  quatOdom.twist.twist.angular.z = odomNew.twist.twist.angular.z;\n \n  for(int i = 0; i<36; i++) {\n    if(i == 0 || i == 7 || i == 14) {\n      quatOdom.pose.covariance[i] = .01;\n     }\n     else if (i == 21 || i == 28 || i== 35) {\n       quatOdom.pose.covariance[i] += 0.1;\n     }\n     else {\n       quatOdom.pose.covariance[i] = 0;\n     }\n  }\n \n  odom_data_pub_quat.publish(quatOdom);\n}\n \n// Update odometry information\nvoid update_odom() {\n \n  // Calculate the average distance\n  double cycleDistance = (distanceRight + distanceLeft) / 2;\n   \n  // Calculate the number of radians the robot has turned since the last cycle\n  double cycleAngle = asin((distanceRight-distanceLeft)/WHEEL_BASE);\n \n  // Average angle during the last cycle\n  double avgAngle = cycleAngle/2 + odomOld.pose.pose.orientation.z;\n     \n  if (avgAngle > PI) {\n    avgAngle -= 2*PI;\n  }\n  else if (avgAngle < -PI) {\n    avgAngle += 2*PI;\n  }\n  else{}\n \n  // Calculate the new pose (x, y, and theta)\n  odomNew.pose.pose.position.x = odomOld.pose.pose.position.x + cos(avgAngle)*cycleDistance;\n  odomNew.pose.pose.position.y = odomOld.pose.pose.position.y + sin(avgAngle)*cycleDistance;\n  odomNew.pose.pose.orientation.z = cycleAngle + odomOld.pose.pose.orientation.z;\n \n  // Prevent lockup from a single bad cycle\n  if (isnan(odomNew.pose.pose.position.x) || isnan(odomNew.pose.pose.position.y)\n     || isnan(odomNew.pose.pose.position.z)) {\n    odomNew.pose.pose.position.x = odomOld.pose.pose.position.x;\n    odomNew.pose.pose.position.y = odomOld.pose.pose.position.y;\n    odomNew.pose.pose.orientation.z = odomOld.pose.pose.orientation.z;\n  }\n \n  // Make sure theta stays in the correct range\n  if (odomNew.pose.pose.orientation.z > PI) {\n    odomNew.pose.pose.orientation.z -= 2 * PI;\n  }\n  else if (odomNew.pose.pose.orientation.z < -PI) {\n    odomNew.pose.pose.orientation.z += 2 * PI;\n  }\n  else{}\n \n  // Compute the velocity\n  odomNew.header.stamp = ros::Time::now();\n  odomNew.twist.twist.linear.x = cycleDistance/(odomNew.header.stamp.toSec() - odomOld.header.stamp.toSec());\n  odomNew.twist.twist.angular.z = cycleAngle/(odomNew.header.stamp.toSec() - odomOld.header.stamp.toSec());\n \n  // Save the pose data for the next cycle\n  odomOld.pose.pose.position.x = odomNew.pose.pose.position.x;\n  odomOld.pose.pose.position.y = odomNew.pose.pose.position.y;\n  odomOld.pose.pose.orientation.z = odomNew.pose.pose.orientation.z;\n  odomOld.header.stamp = odomNew.header.stamp;\n \n  // Publish the odometry message\n  odom_data_pub.publish(odomNew);\n}\n \nint main(int argc, char **argv) {\n   \n  // Set the data fields of the odometry message\n  odomNew.header.frame_id = \"odom\";\n  odomNew.pose.pose.position.z = 0;\n  odomNew.pose.pose.orientation.x = 0;\n  odomNew.pose.pose.orientation.y = 0;\n  odomNew.twist.twist.linear.x = 0;\n  odomNew.twist.twist.linear.y = 0;\n  odomNew.twist.twist.linear.z = 0;\n  odomNew.twist.twist.angular.x = 0;\n  odomNew.twist.twist.angular.y = 0;\n  odomNew.twist.twist.angular.z = 0;\n  odomOld.pose.pose.position.x = initialX;\n  odomOld.pose.pose.position.y = initialY;\n  odomOld.pose.pose.orientation.z = initialTheta;\n \n  // Launch ROS and create a node\n  ros::init(argc, argv, \"ekf_odom_pub\");\n  ros::NodeHandle node;\n \n  // Subscribe to ROS topics\n  ros::Subscriber subForRightCounts = node.subscribe(\"right_ticks\", 100, Calc_Right, ros::TransportHints().tcpNoDelay());\n  ros::Subscriber subForLeftCounts = node.subscribe(\"left_ticks\", 100, Calc_Left, ros::TransportHints().tcpNoDelay());\n  ros::Subscriber subInitialPose = node.subscribe(\"slam_out_pose\", 1, set_initial_2d);\n \n  // Publisher of simple odom message where orientation.z is an euler angle\n  odom_data_pub = node.advertise<nav_msgs::Odometry>(\"odom_data_euler\", 100);\n \n  // Publisher of full odom message where orientation is quaternion\n  odom_data_pub_quat = node.advertise<nav_msgs::Odometry>(\"odom_data_quat\", 100);\n \n  ros::Rate loop_rate(30); \n     \n  while(ros::ok()) {\n     \n    if(initialPoseRecieved) {\n      update_odom();\n      publish_quat();\n    }\n    ros::spinOnce();\n    loop_rate.sleep();\n  }\n \n  return 0;\n}\nCan anyone please tell me where did i do wrong. Thank you!",
    "Convert ROS2 SQLite bag to MCAP format\nAsked 5 months ago\nModified 5 months ago\nViewed 803 times\n2\n\nI've got some ROS2 bags in SQLite format that I'd like to convert to MCAP format, but I cannot find any examples or tools that do it. I'd have hoped there would be an obvious option for ros2 bag convert, like the --output-options YAML's storage_id:, but it's not obvious to me what to use.\n",
    "About Lifecycle, And how to call `on_deactivate()` in `hardware_interface` of ros2_control by controller_manager CLI or other method?\n\nI have implemented a hardware interface in ros2_control and added code to free my hardware resources in the on_deactivate() method.\n\nWhen I try to stop the controller with the command ros2 control set_controller_state diffbot_base_controller inactive and try to free the hardware, on_deactivate() doesn't seem to be called.\n\nI can't find console output from deactivate, and the read/write method is still being called. Unlike before, only the value from hw_command_ is 0.\n\nIt's very confusing.Maybe I'm confused about the life cycle concept in controller_manager of ros2_control. I was hoping to get some tips or links to relevant materials.",
    "How do I send a new position to my 5 dof robot arm?\n\nI am a newbie with ros2 control. I am using ros2 iron on Ubunto 22.04 (Linux Mint). I made a copy of the ros2_control demo example #7.\n\nThis is the one that is launched with the command ros2 launch ros2_control_demo_example_7  r6bot_controller.launch.py, I changed the name as well as urdf file. I also interfaced it with my Arduino robot arm based on positions. My arm has 5 instead of 6 joints and only uses positions. There are no encoders on my arm. All the velocity commands and states related to velocity were taken out of example 7. In my hardware interface (copy), I have code that when a position is changed, the code should send off a state change to an Arduino robot arm...\n\nWhen I run ros2 control list_controllers, I see\n\njem_5dof_robot_arm_controller[jem_robot_arm/RobotController] active    \njoint_state_broadcaster[joint_state_broadcaster/JointStateBroadcaster] active\nWhen I run ros2 control list_hardware_interfaces, I see\n\ncommand interfaces\n    Joint1/position [available] [claimed]\n    Joint2/position [available] [claimed]\n    Joint3/position [available] [claimed]\n    Joint4/position [available] [claimed]\n    Joint5/position [available] [claimed]\nstate interfaces\n    Joint1/position\n    Joint2/position\n    Joint3/position\n    Joint4/position\n    Joint5/position\nI also see am image of my robot arm in rviz... I would say \"things look like they are working\"\n\nMy question is this...........\n\nHow do I send a new position to my robot arm from the command line or a GUI. Either send one new position for a Joint or send the set of positions for all 5 joints. All I want to happen is, quickly send something and interact with the Arduino hardware. I believe the code I implemented in the hardware interface to my Arduino based arm will work, the question is how to I force something to call my hardware interface with an update (so as to test). I'd like to set a few different positions and see if the hardware is working ok. Ideally, it would be nice to make changes in rviz and send those changes to my arm/Arduino. I suspect that rviz is only a one way visualization of the arm and has no way to move something. I suspect that once a new position is sent to my robot arm's controller [jem_5dof_robot_arm_controller], rviz will update accordingly.\n\nWhat are is a simple way to send off a few new positions from the command line to test?",
    "rclcpp wait for a list of service/action servers to start before proceeding further\n\nI have a list of services and a list of actions that I need to wait for to start before I can proceed further. Is there some sort of inbuilt function in rclcpp or rclcpp::Node that I can use?\n\nCreating a custom service and action client type is not really a viable option for me, since I would have more than 100 services + actions combined.\n\nWhat I want is something like the following:\n\nclass SomeNode : public rclcpp::Node\n{\npublic:\n    SomeNode() : Node(\"service_and_action_check\")\n    {\n        /* We do our initial setup */\n\n        std::vector<std::string> serviceList = {\"service1\", \"service2\", \"service3\"};\n        std::vector<std::string> actionList  = {\"action1\", \"action2\", \"action3\"};\n\n        for (auto &elem : serviceList)\n        {\n            checkIfServiceServerIsRunning(elem);\n        }\n\n        for (auto &elem : actionList)\n        {\n            checkIfActionServerIsRunning(elem);\n        }\n\n        RCLCPP_INFO(this->get_logger(), \"All services and actions have been loaded.\");\n    }\n    .\n    .\n    .\n};\n \nIf this is not readily available, if anyone knows of a simple way to create the functions checkIfServiceServerIsRunning and checkIfActionServerIsRunning, that would be of help too.\n\nThanks!",
    "Why TEB controller is not available in ros2 humble?\n\nOn navigation plugin setup document , the TEB controller is mentioned, but I don't find any documentation to set up this controller in nav2 humble. And there is no humble branch in the teb_local_planner repository. So I copied the TEB parameters from foxy and launch the navigation node, but it told me the TEB controller plugin can't be found.\n\n[controller_server-4] [FATAL] [1697706023.360686729] [controller_server]: Failed to create controller. Exception: According to the loaded plugin descriptions the class teb_local_planner::TebLocalPlannerROS with base class type nav2_core::Controller does not exist. Declared types are  dwb_core::DWBLocalPlanner nav2_mppi_controller::MPPIController nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController nav2_rotation_shim_controller::RotationShimController\nSo why TEB controller is not available in ros2 humble? or did I miss something? Thanks.",
    "How to use stereo_image_proc without camera_info topics?\n\nI'm working with 2 csi cameras in a jetson nano with ROS2 humble and I want to do a disparity image. What I'm trying to use is stereo_image_proc disparity node, but it requires to have the camera_info topics for both of the cameras. The camera is a imx219-83 and I haven't found a driver that allows me to have a camera_info topic. Is it possible to obtain this topic ? If not, is there something that could be helpful for this situations?\n\nThanks!",
    "Joint Trajectory Controller with velocity command interface has non-zero velocity after finshed trajectory\n\nI want to control a manipulator with the Joint Trajectory Controller by using the velocity command interface. I am planning a trajectory with with MoveIt MotionPlanningof rviz. I am using ros2 humble.\n\nI've tested several setups but with all of them I have the same problem: When the Joint Trajectory Controller reports \"Goal reached, success!\", the velocities aren't set to zero. I tried to play with with the parameters (increasing and decreasing stopped_velocity_tolerance or goal_time, changing the gains, adding and removing ff_velocity_scale) which sometimes leads to a smaller final velocity but never to completely stopped motion.\n\nA simple setup to reproduce this issue is by launching ros2 launch moveit2_tutorials demo.launch.py from (moveit2_tutorials)[https://github.com/ros-planning/moveit2_tutorials] but with changing from position to velocity interface in the panda_moveit_config. I changed\n\nSettings for panda_arm_controller in ros2_controllers.yaml to:\npanda_arm_controller:\n  ros__parameters:\n    command_interfaces:\n      - velocity\n    state_interfaces:\n      - position\n      - velocity\n    joints:\n      - panda_joint1\n      - panda_joint2\n      - panda_joint3\n      - panda_joint4\n      - panda_joint5\n      - panda_joint6\n      - panda_joint7\n    gains:\n      panda_joint1:\n        p: 10.0\n        i: 1.0\n        d: 1.0\n        i_clamp: 1.0\n        ff_velocity_scale: 1.0\n      panda_joint2:\n        p: 10.0\n        i: 1.0\n        d: 1.0\n        i_clamp: 1.0\n        ff_velocity_scale: 1.0\n      panda_joint3:\n        p: 10.0\n        i: 1.0\n        d: 1.0\n        i_clamp: 1.0\n        ff_velocity_scale: 1.0\n      panda_joint4:\n        p: 10.0\n        i: 1.0\n        d: 1.0\n        i_clamp: 1.0\n        ff_velocity_scale: 1.0\n      panda_joint5:\n        p: 10.0\n        i: 1.0\n        d: 1.0\n        i_clamp: 1.0\n        ff_velocity_scale: 1.0\n      panda_joint6:\n        p: 10.0\n        i: 1.0\n        d: 1.0\n        i_clamp: 1.0\n        ff_velocity_scale: 1.0\n      panda_joint7:\n        p: 10.0\n        i: 1.0\n        d: 1.0\n        i_clamp: 1.0\n        ff_velocity_scale: 1.0\nSetting command_interface from position to velocity in panda.ros2_control.xacro:\n<?xml version=\"1.0\"?>\n<robot xmlns:xacro=\"http://www.ros.org/wiki/xacro\">\n\n    <xacro:macro name=\"panda_ros2_control\" params=\"name initial_positions_file ros2_control_hardware_type\">\n        <xacro:property name=\"initial_positions\" value=\"${xacro.load_yaml(initial_positions_file)['initial_positions']}\"/>\n\n        <ros2_control name=\"${name}\" type=\"system\">\n        <hardware>\n            <xacro:if value=\"${ros2_control_hardware_type == 'mock_components'}\">\n                    <plugin>mock_components/GenericSystem</plugin>\n                    <param name=\"calculate_dynamics\">true</param>\n                </xacro:if>\n                <xacro:if value=\"${ros2_control_hardware_type == 'isaac'}\">\n                <plugin>topic_based_ros2_control/TopicBasedSystem</plugin>\n                <param name=\"joint_commands_topic\">/isaac_joint_commands</param>\n                <param name=\"joint_states_topic\">/isaac_joint_states</param>\n            </xacro:if>\n        </hardware>\n        <joint name=\"panda_joint1\">\n            <command_interface name=\"velocity\"/>\n            <state_interface name=\"position\">\n              <param name=\"initial_value\">${initial_positions['panda_joint1']}</param>\n                </state_interface>\n                <state_interface name=\"velocity\"/>\n            </joint>\n            <joint name=\"panda_joint2\">\n                <command_interface name=\"velocity\"/>\n                <state_interface name=\"position\">\n                  <param name=\"initial_value\">${initial_positions['panda_joint2']}</param>\n            </state_interface>\n            <state_interface name=\"velocity\"/>\n        </joint>\n        <joint name=\"panda_joint3\">\n            <command_interface name=\"velocity\"/>\n            <state_interface name=\"position\">\n              <param name=\"initial_value\">${initial_positions['panda_joint3']}</param>\n                </state_interface>\n                <state_interface name=\"velocity\"/>\n            </joint>\n            <joint name=\"panda_joint4\">\n                <command_interface name=\"velocity\"/>\n                <state_interface name=\"position\">\n                  <param name=\"initial_value\">${initial_positions['panda_joint4']}</param>\n            </state_interface>\n            <state_interface name=\"velocity\"/>\n        </joint>\n        <joint name=\"panda_joint5\">\n            <command_interface name=\"velocity\"/>\n            <state_interface name=\"position\">\n              <param name=\"initial_value\">${initial_positions['panda_joint5']}</param>\n                </state_interface>\n                <state_interface name=\"velocity\"/>\n            </joint>\n            <joint name=\"panda_joint6\">\n                <command_interface name=\"velocity\"/>\n                <state_interface name=\"position\">\n                  <param name=\"initial_value\">${initial_positions['panda_joint6']}</param>\n            </state_interface>\n            <state_interface name=\"velocity\"/>\n        </joint>\n        <joint name=\"panda_joint7\">\n            <command_interface name=\"velocity\"/>\n            <state_interface name=\"position\">\n              <param name=\"initial_value\">${initial_positions['panda_joint7']}</param>\n                </state_interface>\n                <state_interface name=\"velocity\"/>\n            </joint>\n        </ros2_control>\n    </xacro:macro>\n</robot>\nNow you can run ros2 launch moveit2_tutorials demo.launch.py, open a second terminal and run ros2 topic echo /joint_states. Plan an arbitrary trajectory by using rviz and hit Plan & Execute in the MotionPlanning panel of rviz. Then you should see a motion being executed and the terminal should report:\n\n[ros2_control_node-5] [INFO] [1697458106.110702550] [panda_arm_controller]: Goal reached, success!\n[move_group-4] [INFO] [1697458106.122919526] [moveit.simple_controller_manager.follow_joint_trajectory_controller_handle]: Controller 'panda_arm_controller' successfully finished\n[move_group-4] [INFO] [1697458106.151076866] [moveit_ros.trajectory_execution_manager]: Completed trajectory execution with status SUCCEEDED ...\n[move_group-4] [INFO] [1697458106.151414260] [moveit_move_group_default_capabilities.move_action_capability]: Solution was found and executed.\n[rviz2-1] [INFO] [1697458106.151859534] [move_group_interface]: Plan and Execute request complete!\nIn parallel you can check the logs of ros2 topic echo /joint_states which should report non-zero velocities even after the trajectory is successfully executed. Therefore the arm keeps moving (slowly but steady) and you should see the positions constantly changing.\n\nIs this the intended behavior of the Joint Trajectory Controller? Or do I just have a bad parameter setup? Any help or hint on what the problem could be would be highly appreciated!",
    "How to publish pose of the lidar/camera/(or any dynamic/static model) in gazebo fortress?\n\nI am trying publish the pose of the camera and view it in rviz2. I am using ros2 Humble and gazebo fortress. I can see the image using the image topic but i am not able to visualize the topic in the gazebo as well. Here is my sdf file.\n\n<?xml version=\"1.0\" ?>\n<sdf version=\"1.6\">\n  <world name=\"test\">\n    <plugin\n      filename=\"ignition-gazebo-physics-system\"\n      name=\"gz::sim::systems::Physics\">\n    </plugin>\n    <plugin\n      filename=\"ignition-gazebo-sensors-system\"\n      name=\"gz::sim::systems::Sensors\">\n      <render_engine>ogre2</render_engine>\n    </plugin>\n    <plugin\n      filename=\"ignition-gazebo-user-commands-system\"\n      name=\"gz::sim::systems::UserCommands\">\n    </plugin>\n    <plugin\n      filename=\"ignition-gazebo-scene-broadcaster-system\"\n      name=\"gz::sim::systems::SceneBroadcaster\">\n    </plugin>\n    <light type=\"directional\" name=\"sun\">\n      <cast_shadows>true</cast_shadows>\n      <pose>0 0 10 0 0 0</pose>\n      <diffuse>0.8 0.8 0.8 1</diffuse>\n      <specular>0.2 0.2 0.2 1</specular>\n      <attenuation>\n        <range>1000</range>\n        <constant>0.9</constant>\n        <linear>0.01</linear>\n        <quadratic>0.001</quadratic>\n      </attenuation>\n      <direction>-0.5 0.1 -0.9</direction>\n    </light>\n\n    <model name=\"ground_plane\">\n      <static>true</static>\n      <link name=\"link\">\n        <collision name=\"collision\">\n          <geometry>\n            <plane>\n              <normal>0.0 0.0 1</normal>\n              <size>100 100</size>\n            </plane>\n          </geometry>\n        </collision>\n        <visual name=\"visual\">\n          <geometry>\n            <plane>\n              <normal>0.0 0.0 1</normal>\n              <size>100 100</size>\n            </plane>\n          </geometry>\n          <material>\n            <ambient>0.8 0.8 0.8 1</ambient>\n            <diffuse>0.8 0.8 0.8 1</diffuse>\n            <specular>0.8 0.8 0.8 1</specular>\n          </material>\n        </visual>\n      </link>\n    </model>\n\n    \n    <model name=\"box\">\n      <pose>5.0 0 0.7 0 0 0</pose>\n      <link name=\"box_link\">\n        <inertial>\n          <inertia>\n            <ixx>1</ixx>\n            <ixy>0</ixy>\n            <ixz>0</ixz>\n            <iyy>1</iyy>\n            <iyz>0</iyz>\n            <izz>1</izz>\n          </inertia>\n          <mass>1.0</mass>\n        </inertial>\n        <collision name=\"box_collision\">\n          <geometry>\n            <box>\n              <size>1 1 1</size>\n            </box>\n          </geometry>\n        </collision>\n\n        <visual name=\"box_visual\">\n          <geometry>\n            <box>\n              <size>1 1 1</size>\n            </box>\n          </geometry>\n          <material>\n            <ambient>0.3 0.3 0.3 1</ambient>\n            <diffuse>0.3 0.3 0.3 1</diffuse>\n            <specular>0.3 0.5 0.3 1</specular>\n          </material>\n        </visual>\n      </link>\n    </model>\n\n    <model name=\"model_with_camera\">\n      <static>true</static>\n      <pose>4 -6 2 0 0 1.57</pose>\n      <link name=\"link\">\n        <pose>0.05 0.05 0.05 0 0 0</pose>\n        <visual name=\"visual\">\n          <geometry>\n            <box>\n              <size>0.1 0.1 0.1</size>\n            </box>\n          </geometry>\n        </visual>\n        <sensor name=\"camera\" type=\"camera\">\n          <camera>\n            <horizontal_fov>1.047</horizontal_fov>\n            <image>\n              <width>640</width>\n              <height>480</height>\n            </image>\n            <clip>\n              <near>0.1</near>\n              <far>100</far>\n            </clip>\n          </camera>\n          <always_on>1</always_on>\n          <update_rate>30</update_rate>\n          <visualize>true</visualize>\n          <topic>camera</topic>\n        </sensor>\n      </link>\n    </model>\n\n    \n    <model name=\"lidar\">\n      <pose>4.05 -6 2 0 0 1.57</pose>\n      <link name=\"link\">\n        <pose>0.05 0.05 0.05 0 0 0</pose>\n        <inertial>\n          <mass>0.1</mass>\n          <inertia>\n            <ixx>0.000166667</ixx>\n            <iyy>0.000166667</iyy>\n            <izz>0.000166667</izz>\n          </inertia>\n        </inertial>\n        <collision name=\"collision\">\n          <geometry>\n            <box>\n              <size>0.1 0.1 0.1</size>\n            </box>\n          </geometry>\n        </collision>\n        <visual name=\"visual\">\n          <geometry>\n            <box>\n              <size>0.1 0.1 0.1</size>\n            </box>\n          </geometry>\n        </visual>\n\n        <sensor name='gpu_lidar' type='gpu_lidar'>\n          <topic>lidar</topic>\n          <update_rate>10</update_rate>\n          <lidar>\n            <scan>\n              <horizontal>\n                <samples>1024</samples>\n                <resolution>1</resolution>\n                <min_angle>-1.396263</min_angle>\n                <max_angle>1.396263</max_angle>\n              </horizontal>\n              <vertical>\n                <samples>64</samples>\n                <resolution>1</resolution>\n                <min_angle>-0.261799</min_angle>\n                <max_angle>0.261799</max_angle>\n              </vertical>\n            </scan>\n            <range>\n              <min>0.08</min>\n              <max>30.0</max>\n              <resolution>0.01</resolution>\n            </range>\n          </lidar>\n          <alwaysOn>1</alwaysOn>\n          <visualize>true</visualize>\n        </sensor>\n\n        <plugin\n            filename=\"ignition-gazebo-pose-publisher-system\"\n            name=\"gz::sim::systems::PosePublisher\">\n            <publish_link_pose>true</publish_link_pose>\n            <publish_sensor_pose>true</publish_sensor_pose>\n            <use_pose_vector_msg>true</use_pose_vector_msg>\n            <static_publisher>true</static_publisher>\n        </plugin>\n      </link>\n      <static>true</static>\n    </model>\n  </world>\n</sdf>\nI tried to publish the pose of the lidar using pose-publisher-system as well. Thank you.",
    "How to get sensor data over a topic with webots_ros2 plugin?\n\nI've installed webots 2023b and after I saw that a world with and inverted pendulum has been already shipped in the default installation directory, I decided to use that world for my project.\n\nBasically I followed this tutorial and this tutorial to be able to publish sensor data directly from the urdf file itself. That means, that I create this file:\n\n<?xml version=\"1.0\" ?>\n<robot name=\"Inverted Pendulum\">\n    <webots>  \n        <device reference=\"hip\" type=\"PositionSensor\">\n            <ros>\n                <topicName>/hip</topicName>\n                <alwaysOn>true</alwaysOn>\n            </ros>\n        </device>\n        <device reference=\"horizontal position sensor\" type=\"PositionSensor\">\n            <ros>\n                <topicName>/horizontal_position</topicName>\n                <alwaysOn>true</alwaysOn>\n            </ros>\n        </device>\n        <plugin type=\"inverted_pendulum.device_driver.InvertedPendulum\"/>\n    </webots>\n</robot>\nbut, even if, everything starts correctly (no errors or warnings in webots), doing a:\n\n    $ros2 topic list\ndoes not show any topic with the name /hip or /horizontal_position. It hangs forever waiting for data to be published.\n\nThe simulator is not paused, since I created a driver, which moves the cart forth and back.\n\nAny idea?\n\nThe code for the world is the same. I changed only the name. But I add it here anyway, just in case.\n\n#VRML_SIM R2023b utf8\n    \nEXTERNPROTO \"https://raw.githubusercontent.com/cyberbotics/webots/R2023b/projects/objects/backgrounds/protos/TexturedBackground.proto\"\nEXTERNPROTO \"https://raw.githubusercontent.com/cyberbotics/webots/R2023b/projects/objects/floors/protos/Floor.proto\"\n\nWorldInfo {\n  info [\n    \"An example of hot to solve the Inverted Pendulum problem using a PID controller\"\n  ]\n  title \"Inverted Pendulum\"\n  basicTimeStep 16\n  contactProperties [\n    ContactProperties {\n      material1 \"robot_basis\"\n      material2 \"floor\"\n      coulombFriction [\n        0.2\n      ]\n    }\n  ]\n}\nViewpoint {\n  orientation -0.0996069518072968 -0.03685053329082472 0.9943442529364971 3.666446119327704\n  position 13.193129047100818 10.690115274872808 4.2889817843979205\n  follow \"robot:solid\"\n}\nTexturedBackground {\n}\nFloor {\n  size 1000 2\n  appearance PBRAppearance {\n    baseColorMap ImageTexture {\n      url [\n        \"https://raw.githubusercontent.com/cyberbotics/webots/R2023b/projects/default/worlds/textures/checkered_marble.jpg\"\n      ]\n    }\n    roughness 1\n    metalness 0\n  }\n}\nRobot {\n  rotation 0 0 1 3.14159\n  children [\n    SliderJoint {\n      jointParameters JointParameters {\n        axis 1 0 0\n        dampingConstant 1.5\n      }\n      device [\n        LinearMotor {\n          name \"horizontal_motor\"\n          maxForce 40\n        }\n        PositionSensor {\n          name \"horizontal position sensor\"\n        }\n      ]\n      endPoint Solid {\n        translation 0 0 0.06\n        children [\n          DEF ROBOT_SHAPE Shape {\n            appearance PBRAppearance {\n              baseColor 0.2443427176317998 0.704051270313573 0.1756923781185626\n              roughness 1\n              metalness 0\n            }\n            geometry Box {\n              size 0.3 0.1 0.1\n            }\n          }\n          DEF HIP HingeJoint {\n            jointParameters HingeJointParameters {\n              position 0.000161402\n              axis 0 1 0\n              anchor 0 0 0.03\n            }\n            device [\n              PositionSensor {\n                name \"hip\"\n              }\n            ]\n            endPoint DEF THIGH_BB Solid {\n              translation 0 -0.061 0.33000000000000007\n              rotation 0 1 0 0\n              children [\n                Shape {\n                  appearance PBRAppearance {\n                    baseColor 0.8496833752956435 0.07072556649118791 0.09393453879606317\n                    roughness 1\n                    metalness 0\n                  }\n                  geometry DEF THIGH_BOX Box {\n                    size 0.05 0.02 0.6\n                  }\n                }\n              ]\n              boundingObject USE THIGH_BOX\n              physics Physics {\n                density -1\n                mass 0.05\n                centerOfMass [\n                  0 0.061 -0.27\n                ]\n              }\n            }\n          }\n          PointLight {\n            attenuation 0 0 1\n            intensity 5\n            location 0 0 2\n          }\n        ]\n        contactMaterial \"robot_basis\"\n        boundingObject USE ROBOT_SHAPE\n        physics Physics {\n          density -1\n          mass 1\n        }\n      }\n    }\n  ]\n  name \"Inverted_Pendulum\"\n  boundingObject Box {\n    size 200 0.1 0.01\n  }\n  physics Physics {\n    density -1\n    mass 30\n  }\n  controller \"<extern>\"\n}",
    "ros2 parameter setting\n\nI would like to follow a simple take off and land example without any launch files or yaml files on ros2 crazyswarm (Physical Experiments part). What could be the reason for the following output, thanks.\n\nntukenmez3@ae-icps-407120:~/Documents/ros2_ws$ ros2 param set crazyflie_server cf231.params.commander.enHighLevel 1\nSetting parameter failed",
    "How to put ArUco markers in Gazebo Classic\n\nThe title says it all. I would like to test my robot's ArUco recognition and processing abilities by putting some markers around environments in classic Gazebo.\n\nAll the tutorials I see online seem to be for older versions of Gazebo and (frankly) use some very elaborate tricks.\n\nWhat is the canonical way of adding a marker to Gazebo?\n\nEDIT: My version of Gazebo is 11.10.2, by \"older versions of Gazebo\" I mean older versions of Gazebo classic specifically. Sorry for any confusion.",
    "Cannot locate rosdep definition, error on micro-ROS\n\nI'm trying to set up micro-ROS on Ubuntu 20.04 using this website, and connect ESP32 to ROS 2. However, when executing the command ros2 run micro_ros_setup create_firmware_ws.sh freertos esp32, I get the following error:\n\nERROR: the following packages/stacks could not have their rosdep keys resolved\nto system dependencies:\nrclc_parameter: Cannot locate rosdep definition for [osrf_testing_tools_cpp]\nrmw: Cannot locate rosdep definition for [osrf_testing_tools_cpp]\nrmw_implementation: Cannot locate rosdep definition for [rcpputils]\nrosidl_typesupport_c: Cannot locate rosdep definition for [mimick_vendor]\nrosidl_default_runtime: Cannot locate rosdep definition for [rosidl_typesupport_introspection_cpp]\nrcl_logging_noop: Cannot locate rosdep definition for [launch_testing]\nrosidl_typesupport_microxrcedds_c_tests: Cannot locate rosdep definition for [rosidl_typesupport_introspection_c]\ntracetools_launch: Cannot locate rosdep definition for [launch_ros]\nrcutils: Cannot locate rosdep definition for [osrf_testing_tools_cpp]\nrcl_action: Cannot locate rosdep definition for [osrf_testing_tools_cpp]\nlibyaml_vendor: Cannot locate rosdep definition for [rcpputils]\nrcl_lifecycle: Cannot locate rosdep definition for [osrf_testing_tools_cpp]\ntracetools_test: Cannot locate rosdep definition for [launch_ros]\ntest_rmw_implementation: Cannot locate rosdep definition for [rmw_dds_common]\nrclc_lifecycle: Cannot locate rosdep definition for [osrf_testing_tools_cpp]\nrosidl_typesupport_cpp: Cannot locate rosdep definition for [rcpputils]\nrcl: Cannot locate rosdep definition for [rcpputils]\nros2trace: Cannot locate rosdep definition for [ros2cli]\nrclc: Cannot locate rosdep definition for [osrf_testing_tools_cpp]\nIs there any solution?\n\nIncidentally, I implemented the following solution suggested by ChatGPT, but it didn't improve the situation.\n\nUpdate ROS 2 dependencies. rosdep update\nInstall System Packages, which ROS2 packages or stacks depend on. rosdep install --from-paths /path/to/your/ros2/workspace --ignore-src --rosdistro <your_ros_distro>\nRebuild the ROS 2 workspace. colcon build\n",
    "Intel RealSense with ROS 2\n\nI am just getting started with Intel Real Sense integration with ROS2. When trying to install Intel real sense packages in ROS 2 Humble, the official documentation says the supported kernel version of this package is only for 5.4 or less. On the contrary, by default, the kernel version of ROS2 humble in Ubuntu 22 is 6.\n\nPlease give some input on whether ROS2 Humble supports real-sense integration.",
    "Gazebo Garden Detachable Joint with moving object causing massive velocity errors\n\nI am trying to simulate the control of a caught heavy object in gazebo garden. To do so I have a plugin that creates a detachable fixed joint between the object and the end-effector of my robot once collision occurs, the issue is that when the joint is created the velocity of the object dramatically increases, while also changing direction. I originally believed that is was due to incorrect inertia parameters, however most other tests / collisions work as expected so I assume something is going wrong with the joint creation.\n\nA synopsis of how my system works is that there is a collision sensor on the end effector, which triggers with contact with a specific object, it sends a boolean value to a topic that this plugin subscribes to, which then creates the joint between the 2 links, so long as the plugin had first been enabled.\n\nthis plugin takes heavy inspiration from the detachable joint system inside the gz_sim repo\n\ngazebo Versions:\n\nsim: 7.5.0\nplugin: 2.0.1\ntransport 12.2.0\n#include <detachable_joint_creator.hpp>\n\n\n#include <gz/plugin/Register.hh>\n#include <gz/transport/Node.hh>\n#include <functional>\n#include <gz/sim/components/DetachableJoint.hh>\n#include <gz/sim/Model.hh>\n#include <gz/sim/Joint.hh>\n#include <gz/sim/Link.hh>\nusing namespace monke_plugins;\n\n\nJointCreator::JointCreator():\ndataPtr(new JointCreatorPrivate)\n{\n\n}\nJointCreator::~JointCreator(){\n\n}\nvoid JointCreator::Configure(const gz::sim::Entity &_entity,\n    const std::shared_ptr<const sdf::Element> & _sdf,\n    gz::sim::EntityComponentManager &_ecm,\n    gz::sim::EventManager &/*_eventMgr*/\n){\n\n    // Initialise the Plugin via sdf elements\n\n    gzmsg << \"loading JointCreator plugin\\n\";\n    if(_sdf->HasElement(\"parent\")){\n\n        this->dataPtr->end_effector_link_name = _sdf->Get<std::string>(\"parent\");\n    }\n    else{\n        gzerr << \"[parent] link name not specified in sdf \\n\";\n        return;\n    }\n\n    gz::sim::Model model(_entity);\n    this->dataPtr->end_effector_entity = model.LinkByName(_ecm, this->dataPtr->end_effector_link_name);\n    if (this->dataPtr->end_effector_entity == gz::sim::kNullEntity)\n        {\n        gzerr << \"Could not find link named \"<< this->dataPtr->end_effector_link_name << std::endl;\n        return;\n        }\n\n    if(_sdf->HasElement(\"contact_sensor_topic\")){\n        this->dataPtr->contact_sensor_topic = _sdf->Get<std::string>(\"contact_sensor_topic\");\n        std::function<void(const gz::msgs::Contacts &)> callback = [this](gz::msgs::Contacts msg){this->ContactSensorCallback(msg);};\n        if(!this->dataPtr->transport_node->Subscribe<gz::msgs::Contacts>(this->dataPtr->contact_sensor_topic,callback)){\n            gzerr << \"Failed to subscribe to topic [\" << this->dataPtr->contact_sensor_topic << \"] \\n\";\n            return;\n        }\n        //? idk if advertising a subscription works\n        this->dataPtr->transport_node->Advertise<gz::msgs::Contacts>(this->dataPtr->contact_sensor_topic);\n\n    }\n    else{\n        gzerr << \"detachable_joint plugin has no SDF Element contact_sensor_topic\";\n        return;\n    }\n    \n    if(_sdf->HasElement(\"command_topic\")){\n        this->dataPtr->command_topic = _sdf->Get<std::string>(\"command_topic\");\n        std::function<void(const gz::msgs::Boolean &)> callback = [this](gz::msgs::Boolean msg){this->CommandCallback(msg);};\n        if(!this->dataPtr->transport_node->Subscribe<gz::msgs::Boolean>(this->dataPtr->command_topic,callback)){\n            gzerr << \"Failed to subscribe to topic [\" << this->dataPtr->command_topic << \"] \\n\";\n            return;\n        }\n        //? idk if advertising a subscription works \n        this->dataPtr->transport_node->Advertise<gz::msgs::Boolean>(this->dataPtr->command_topic); \n        \n    }\n    else{\n        gzerr << \"detachable_joint plugin has no SDF Element command_topic\";\n        return;\n    }\n\n    if(_sdf->HasElement(\"triggered_topic\")){\n        this->dataPtr->triggered_topic = _sdf->Get<std::string>(\"triggered_topic\");\n        \n         this->dataPtr->publisher = std::make_unique<gz::transport::Node::Publisher>(this->dataPtr->transport_node->Advertise<gz::msgs::Boolean>(this->dataPtr->triggered_topic));  \n        \n    }\n    else{\n        gzerr << \"detachable_joint plugin has no SDF Element triggered_topic\";\n        return;\n    }\n\n\n\n\n\n\n\n}\n\nvoid JointCreator::PostUpdate(const gz::sim::UpdateInfo &_info,\nconst gz::sim::EntityComponentManager &_ecm){\n\n    if(_info.paused){return;} //if sim is paused.\n\n    // gzmsg << \"JointCreator::PostUpdate - \" << _info.simTime.count() << std::endl;\n    \n}\n\nvoid JointCreator::PreUpdate(const gz::sim::UpdateInfo &_info,\ngz::sim::EntityComponentManager &_ecm){\n    if(_info.paused){return;} //if sim is paused.\n\n\n    auto Contact = [this](){return(this->dataPtr->contacted_entity != gz::sim::kNullEntity);};\n\n\n\n    if(this->dataPtr->PluginActive && !this->dataPtr->JointCreated && Contact()){ //! CREATE JOINT\n        // if the joint is active, it has not been created, and contact is made, then create the joint\n        this->dataPtr->joint = _ecm.CreateEntity();\n        auto parentLink = _ecm.ParentEntity(this->dataPtr->contacted_entity); //create a new link as the parent entity of the obejct we're trying to grab\n        _ecm.CreateComponent(\n            this->dataPtr->joint,\n            gz::sim::components::DetachableJoint({this->dataPtr->end_effector_entity,parentLink,\"fixed\"})\n            );\n        gzdbg << \"created detachable joint between end effector & [\" << this->dataPtr->contacted_entity<< \"] @ \" << _info.simTime.count() <<\"\\n\";\n        gz::msgs::Boolean msg;\n        msg.set_data(true);\n        this->dataPtr->publisher->Publish(msg);\n\n\n        this->dataPtr->JointCreated = true;\n\n    }\n    if(!this->dataPtr->PluginActive && this->dataPtr->JointCreated){//! DESTROY JOINT\n        // if the joint is not active and the joint has been created, then destroy the joint.\n        _ecm.RequestRemoveEntity(this->dataPtr->joint,true);\n        this->dataPtr->joint = gz::sim::kNullEntity;\n\n        \n        gzdbg << \"deleted detachable joint between end effector & [\"<< this->dataPtr->child_entity << \"] @ \" << _info.simTime.count() <<\"\\n\";\n        gz::msgs::Boolean msg;\n        msg.set_data(false);\n        this->dataPtr->publisher->Publish(msg);\n        this->dataPtr->JointCreated = false;\n    }\n \n    \n}\n\n\nvoid JointCreator::CommandCallback(const gz::msgs::Boolean & _msg){\n    gzmsg << \"JointCreator received command msg [\" << _msg.data() << \"]\\n\";\n    this->dataPtr->PluginActive = _msg.data();    \n}\n\nvoid JointCreator::ContactSensorCallback(const gz::msgs::Contacts & _msg){\n    if(_msg.contact_size()){\n        gzmsg << \"JointCreator received contact msg with object: [\" << _msg.contact(0).collision2().id() << \"]\\n\";\n        auto contact = _msg.contact(0);\n        this->dataPtr->contacted_entity = contact.collision2().id();\n\n    }\n    else{\n        this->dataPtr->contacted_entity = gz::sim::kNullEntity;\n    }\n}\n\nGZ_ADD_PLUGIN(\n    monke_plugins::JointCreator,\n    gz::sim::System,\n    monke_plugins::JointCreator::ISystemPreUpdate,\n    // sample_system::JointCreator::ISystemUpdate,\n    monke_plugins::JointCreator::ISystemPostUpdate,\n    monke_plugins::JointCreator::ISystemConfigure\n)\n// GZ_ADD_PLUGIN_ALIAS(sample_system::JointCreator,\"gz::sim:systems::JointCreator\")\n```",
    "Point cloud in gazebo environment\n\nI am working on a project whose main objective is to check the sensors that can perceive the environment and implement those in gazebo environment. so i am trying to implement lidar sensor and generate point cloud of the outdoor environment. Can anyone guide me how to generate a point cloud of an outdoor environment in Ignition Gazebo Fortress?",
    "Use sim time with Moveit\n\nI am having a problem trying to use Moveit2 in simulation, I created the Moveit config package for my robot arm using the setup assistant, but the generated move_group.launcy.py file looks like this:\n\nfrom moveit_configs_utils import MoveItConfigsBuilder\nfrom moveit_configs_utils.launches import generate_move_group_launch\n\n\ndef generate_launch_description():\n    moveit_config = MoveItConfigsBuilder(\"ur\", package_name=\"flower_catcher_moveit_config\").to_moveit_configs()\n    return generate_move_group_launch(moveit_config)\nThe problem with this format is that there is no way for me to set the use_sim_time parameter to true, and that causes the path execution to fail with this error:\n\n[move_group-7] [INFO] [1696192877.744131744] [moveit_ros.current_state_monitor]: Didn't receive robot state (joint angles) with recent timestamp within 1.000000 seconds. Requested time 1696192876.744054, but latest received state has time 148.003000.\nI kind of solved the problem by setting the parameter afterward with the command\n\nros2 param set /move_group use_sim_time true\nHowever, I want to know if there is a way to set this parameter in the launch file.\n\nThanks!\n\n",
    "Setting frame of IMU message in Gazebo Fortress\n\nI am trying to setup a robot in Gazebo Fortress, under ROS2 Humble in Ubuntu 22.04. This robot has 6 wheels, a lidar and an IMU. I have setup the xacro files and I am able to spawn the robot into Gazebo and get laser and IMU readings.\n\nHowever, the frame of the IMU messages is not correct. This is my IMU gazebo code in its corresponding xacro file:\n\n    <gazebo reference=\"${prefix}_${imu_name}\">\n        <material>Gazebo/Black</material>\n        <gravity>true</gravity>\n        <sensor name=\"${prefix}_imu_sensor\" type=\"imu\">\n            <always_on>true</always_on>\n            <update_rate>25</update_rate>\n            <visualize>false</visualize>\n            <topic>${prefix}/imu</topic>\n            <plugin filename=\"libignition-gazebo-imu-system.so\" name=\"ignition::gazebo::systems::Imu\">\n            </plugin>\n            <pose>0 0 0 0 0 0</pose>\n        </sensor>\n    </gazebo>\nI have tried to add frameID to the plugin parameters, as I did in Gazebo Classic, but it didn't work. My questions are:\n\nHow to change the frame published in the messages?\nWhat parameters are available for the IMU plugin? Is there any documentation or where can I read the source code?\nThank you!",
    "ROS Environment variables not set after new Humble install on Ubuntu 22.04\n\nI carefully followed the install instructions for installing ROS2 Humble binary.\n\nhttps://docs.ros.org/en/humble/Installation/Ubuntu-Install-Debians.html\n\nThe install had no errors. And I did the talker-listener test to make sure.\n\nBut none of the ROS environment variables are set.\n\nWhen I type printenv I don't see ROS_VERSION=2,ROS_PYTHON_VERSION=3 or ROS_DISTRO=humble.\n\nThe tutorials page just says to go back to the installation page or get help from the community. So here I am :)\n\nThanks in advance!",
    "ROS2 Map not received when using nav2_bringup\n\nI'm currently using the TurtleBot2 on Ubuntu 22.04 Humble and successfully generated a map with ros2 launch nav2_bringup navigation_launch.py. I was able to use the command ros2 launch nav2_bringup bringup_launch.py map:=/name/of/path.yaml several times (it was showing the map sometimes and wasnt showing the map sometimes aswell) but now whenever I am launching the command it tells me\n\n[component_container_isolated-1] [INFO] [1695317742.382350265] [global_costmap.global_costmap]: Timed out waiting for transform from base_link to map to become available, tf error: Invalid frame ID \"map\" passed to canTransform argument target_frame - frame does not exist\n\nOpening the rviz config /nav2_bringup/rviz2/nav2_default_view.rviz results in Rviz2 telling me, that no map is received. I was trying to change the QoS aswell, which didnt have an impact at all.\n\nI have looked into rqt_graph and /map was connected to global_cost_map, also I checked rqt and /map was not receiving any messages when I have monitored it in rqt.\n\nCan someone help me out please?",
    "In ROS, is it possible to do dynamic reconfigure with \"nested\" parameters?\n\nNot positive I have the terminology right, but the idea is that I have a ROS 1 node that can have multiple \"layers\" of namespaces for some of the parameters. So the parameter list is something like:\n\n/perception_node/map_size\n/perception_node/sensor_1/max_range\n/perception_node/sensor_2/max_range\nIt doesn't have to be set up this way, the key here is that there are multiple \"sensor\" objects that have the same parameter names, but can have different values. And the sensor names themselves should ideally be configurable from the launch file or a YAML file.\n\nI'm able to get it up and running so that it all initializes correctly, I can have a sensor struct like this:\n\nstruct Sensor\n{\n    string sensor_name;  // < This gets set in the constructor\n    float max_range;\n\n    void configure(ros::NodeHandle & nodeHandle)\n    {\n        max_range = nodeHandle.param(sensor_name + \"/max_range\");\n    }\n};\nAnd that works, but I'd really like to use dynamic reconfigure with this setup too. I've used dynamic reconfigure before on other projects, so I know the basics of creating a \".cfg\" file and everything.\n\nBut dynamic reconfigure doesn't seem to like parameter names with \"/\" symbols in them, at least when I tried the following it failed to compile:\n\ngen = ParameterGenerator()\n\ngen.add(\"sensor_1/max_range\", float_t ...etc....\nMy initial idea was that since the \".cfg\" file is (I think) really a python file, I could do something clever here and read the sensor names from a configuration file rather than hard coding it like in the above example.\n\nI also tried using groups, but it looks like you're not allowed to use the same parameter name more than once even if you do this:\n\nsensor_1_params = gen.addGroup(\"sensor_1\")\nsensor_1_params.add(\"max_range\", float_t ...etc...\n\nsensor_2_params = gen.addGroup(\"sensor_2\")\nsensor_2_params.add(\"max_range\", float_t ...etc... #Nope! This fails to compile too\nThe only thing I can think of right now is to get rid of the slashes, so that the parameters are called something like \"sensor_1_max_range\" and \"sensor_2_max_range\" and so on. The issue being that it would make the config callback kind of ugly, because on the C++ side I'd have to do something like:\n\nif (sensor_name == \"sensor_1\") {\n    max_range = config.sensor_1_max_range;\n}\nelse if (sensor_name == \"sensor_2\") {\n    max_range = config.sensor_2_max_range;\n}\n// And many more lines...\nI also feel like this kind of defeats the purpose of having the sensor names in a configuration file, because now any time we want to add or remove sensors we need to edit the configuration file AND the C++ code.\n\nSo, I guess I'm wondering is it possible to actually do something like what I want? Have people had to deal with this before? Or am I better off restructuring things?",
    "Configuration wrt. automatic chaining of `setup.bash` prefix paths from `colcon build`\n\nI recently found (to my great surprise) that upon issuing 'source install/setup.bash' for my ROS 2 install (built from source), that both Gazebo Sim and ros_gz_bridge were also sourced automatically.\n\nSo I had a look at the ROS 2 install/setup.bash script, and indeed it mentions:\n\n# This script extends the environment with the environment of other prefix\n# paths which were sourced when this file was generated as well as all packages\n# contained in this prefix path.\nSo probably I did the following:\n\nCompile and source ROS 2,\nCompile and source Gazebo Sim,\nCompile and source ros_gz_bridge,\nCompile ROS 2 again.\nI wonder if many people are aware of that behavior. In any case I did not know of this automatic chaining, nor was expecting it, as:\n\nIn above case, it is obviously undesirable that the ROS 2 setup.bash script would chain the Gazebo and ros_gz_bridge scripts,\n\nBut even in other cases this can be undesired. E.g. the ros_gz_bridge obviously depends on ROS 2 and Gazebo Sim, but even then I might want to source a different ROS 2 install (e.g. with some local changes, irrelevant to ros_gz_bridge). So I don't necessarily want the ros_gz_bridge to automatically source the ROS 2 install that was sourced at build time.\n\nIs there some documentation wrt. this behavior?",
    "[ROS1 Noetic]Qt5 Rviz plugin\n\nI'm having trouble making Rviz teleop plugin using Qtcreator. I'm using Noetic and Ubuntu 20.04.\n\nThe codes is not complete yet, for now I just want to see teleop GUI on Rviz. I'm using catkin_make_isolated --install build system\n\nError message: [ERROR] [1694503592.866043597]: PluginlibFactory: The plugin for class 'rviz_teleop_plugin/QtTeleopPanel' failed to load.  Error: Could not find library corresponding to plugin rviz_teleop_plugin/QtTeleopPanel. Make sure the plugin description XML file has the correct name of the library and that the library actually exists. \n\nfiles: package name: rviz_teleop_plugin\n\nCMakeLists.txt\npackage.xml\nplugin_description.xml\nsrc/qt_teleop_ui,cpp\ninclude/rviz_teleop_plugin/qt_teleop_ui.h\ncmake_minimum_required(VERSION 3.0.2)\nproject(rviz_teleop_plugin)\n\nfind_package(catkin REQUIRED COMPONENTS\n  geometry_msgs\n  nav_msgs\n  roscpp\n  rospy\n  rviz\n  sensor_msgs\n  std_msgs\n)\n\nfind_package(Qt5 COMPONENTS Core Widgets REQUIRED)\nfind_package(Qt5Widgets REQUIRED)\nfind_package(Qt5Core REQUIRED)\nfind_package(Qt5OpenGL REQUIRED)\n\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\n\nset(CMAKE_AUTOUIC ON)\nset(CMAKE_AUTOMOC ON)\nset(CMAKE_AUTORCC ON)\n\nset(CMAKE_CXX_STANDARD 11)\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fPIC\")\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\nset(QT_LIBRARIES Qt5::Widgets)\n\nadd_definitions(-DQT_NO_KEYWORDS)\n\ncatkin_package(\n  INCLUDE_DIRS include\n  LIBRARIES rviz_teleop_plugin\n  CATKIN_DEPENDS geometry_msgs nav_msgs roscpp rospy rviz sensor_msgs std_msgs\n  # DEPENDS system_lib\n)\n\ninclude_directories(\n  include\n  ${catkin_INCLUDE_DIRS}\n  ${Qt5Widgets_INCLUDE_DIRS}\n)\n\nlink_directories(${catkin_LIBRARY_DIRS})\n\nqt5_wrap_cpp(MOC_FILES\n  include/rviz_teleop_plugin/qt_teleop_ui.h\n)\n\nset(SOURCE_FILES\n  src/qt_teleop_ui.cpp\n  ${MOC_FILES}\n)\n\nadd_library(${PROJECT_NAME}\n  ${SOURCE_FILES}\n)\n\nadd_dependencies(rviz_teleop_plugin ${PROJECT_NAME_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n\ntarget_link_libraries(${PROJECT_NAME}\n  Qt5::Widgets\n  ${QT_LIBRARIES}\n  ${catkin_LIBRARIES}\n)\n\ninstall(TARGETS \n  ${PROJECT_NAME}\n  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n)\n\ninstall(DIRECTORY include/${PROJECT_NAME}/ rviz\n  DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n)\n\ninstall(FILES plugin_description.xml\n  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n)\n\nset_target_properties(rviz_teleop_plugin PROPERTIES OUTPUT_NAME \"rviz_teleop_plugin\")\n<?xml version=\"1.0\"?>\n<package format=\"2\">\n  <name>rviz_teleop_plugin</name>\n  <version>0.0.0</version>\n  <description>The rviz_teleop_plugin package</description>\n\n  <maintainer email=\"cabmintt@gmail.com\">minseojeong</maintainer>\n  <license>TODO</license>\n\n  <buildtool_depend>catkin</buildtool_depend>\n\n  <build_depend>geometry_msgs</build_depend>\n  <build_depend>nav_msgs</build_depend>\n  <build_depend>roscpp</build_depend>\n  <build_depend>rospy</build_depend>\n  <build_depend>rviz</build_depend>\n  <build_depend>sensor_msgs</build_depend>\n  <build_depend>std_msgs</build_depend>\n\n  <build_depend>qt_gui_cpp</build_depend>\n  <build_depend>qtbase5-dev</build_depend>\n  <build_depend>libqt5-core</build_depend>\n  <build_depend>libqt5-gui</build_depend>\n  <build_depend>libqt5-widgets</build_depend>\n\n  <build_export_depend>geometry_msgs</build_export_depend>\n  <build_export_depend>nav_msgs</build_export_depend>\n  <build_export_depend>roscpp</build_export_depend>\n  <build_export_depend>rospy</build_export_depend>\n  <build_export_depend>rviz</build_export_depend>\n  <build_export_depend>sensor_msgs</build_export_depend>\n  <build_export_depend>std_msgs</build_export_depend>\n\n  <build_export_depend>qt_gui_cpp</build_export_depend>\n  <build_export_depend>qtbase5-dev</build_export_depend>\n  <build_export_depend>libqt5-core</build_export_depend>\n  <build_export_depend>libqt5-gui</build_export_depend>\n  <build_export_depend>libqt5-widgets</build_export_depend>\n\n  <exec_depend>geometry_msgs</exec_depend>\n  <exec_depend>nav_msgs</exec_depend>\n  <exec_depend>roscpp</exec_depend>\n  <exec_depend>rospy</exec_depend>\n  <exec_depend>rviz</exec_depend>\n  <exec_depend>sensor_msgs</exec_depend>\n  <exec_depend>std_msgs</exec_depend>\n\n  <exec_depend>qt_gui_cpp</exec_depend>\n  <exec_depend>qtbase5-dev</exec_depend>\n  <exec_depend>libqt5-core</exec_depend>\n  <exec_depend>libqt5-gui</exec_depend>\n  <exec_depend>libqt5-widgets</exec_depend>\n\n  <export>\n    <rviz plugin=\"${prefix}/plugin_description.xml\"/>\n  </export>\n\n</package>\n<!-- <library path=\"lib/librviz_teleop_plugin\"> -->\n<library path=\"install_isolated/lib/librviz_teleop_plugin.so\">\n  <class name=\"rviz_teleop_plugin/QtTeleopPanel\"\n         type=\"rviz_teleop_plugin::QtTeleopPanel\"\n         base_class_type=\"rviz::Panel\">\n    <description>\n      A Teleop Panel to control the robot.\n    </description>\n    <qtgui>\n      <name>rviz_teleop_plugin/QtTeleopPanel</name>\n      <class>rviz_teleop_plugin::QtTeleopPanel</class>\n      <label>Teleop Panel</label>\n    </qtgui>\n  </class>\n</library>\n#include <QtWidgets/QVBoxLayout>\n#include <QtWidgets/QApplication>\n#include <QtWidgets/QLabel>\n#include <QtWidgets/QDoubleSpinBox>\n// #include <QtWidgets/QPainter>\n// #include <QtWidgets/QLineEdit>\n\n#include <QtCore/QVariant>\n#include <QtWidgets/QAction>\n#include <QtWidgets/QMainWindow>\n#include <QtWidgets/QMenu>\n#include <QtWidgets/QMenuBar>\n#include <QtWidgets/QPushButton>\n#include <QtWidgets/QStatusBar>\n#include <QtWidgets/QWidget>\n#include <QtWidgets/QSlider>\n\n#include <ros/ros.h>\n#include <geometry_msgs/Twist.h>\n// #include <rviz/panel.h>\n\n#include \"rviz_teleop_plugin/qt_teleop_ui.h\"\n\nclass QtTeleopPanel;\n\nnamespace rviz_teleop_plugin\n{\n    QtTeleopPanel::QtTeleopPanel(QWidget* parent)\n        : rviz::Panel(parent),\n        // : QWidget(parent),\n          nh_(\"~\"),\n          cmd_vel_pub_(nh_.advertise<geometry_msgs::Twist>(\"cmd_vel\", 1))\n\n    {\n        QVBoxLayout* layout = new QVBoxLayout;\n\n        QLabel* X_label = new QLabel(\"X ::\");\n        QDoubleSpinBox* X_doubleSpinBox = new QDoubleSpinBox;\n        X_doubleSpinBox->setMaximum(1.0);\n        X_doubleSpinBox->setSingleStep(0.01);\n\n        QLabel* Y_label = new QLabel(\"Y ::\");\n        QDoubleSpinBox* Y_doubleSpinBox = new QDoubleSpinBox;\n        Y_doubleSpinBox->setMaximum(1.0);\n        Y_doubleSpinBox->setSingleStep(0.01);\n\n        QPushButton* Send_Button = new QPushButton(\"Send\");\n        QPushButton* Up_Button = new QPushButton(\"UP\");\n        QPushButton* Stop_Button = new QPushButton(\"Stop\");\n        QPushButton* Down_Button = new QPushButton(\"Down\");\n        QPushButton* Left_Button = new QPushButton(\"Left\");\n        QPushButton* Right_Button = new QPushButton(\"Right\");\n\n        QLabel* Linear_label = new QLabel(\"Linear vel\");\n        QDoubleSpinBox* Linear_doubleSpinBox = new QDoubleSpinBox;\n        Linear_doubleSpinBox->setMaximum(1.0);\n        Linear_doubleSpinBox->setSingleStep(0.01);\n\n        QLabel* Angular_label = new QLabel(\"Angular vel\");\n        QDoubleSpinBox* Angular_doubleSpinBox = new QDoubleSpinBox;\n        Angular_doubleSpinBox->setMaximum(1.0);\n        Angular_doubleSpinBox->setSingleStep(0.1);\n\n        layout->addWidget(X_label);\n        layout->addWidget(X_doubleSpinBox);\n        layout->addWidget(Y_label);\n        layout->addWidget(Y_doubleSpinBox);\n        layout->addWidget(Send_Button);\n        layout->addWidget(Up_Button);\n        layout->addWidget(Stop_Button);\n        layout->addWidget(Down_Button);\n        layout->addWidget(Left_Button);\n        layout->addWidget(Right_Button);\n        layout->addWidget(Linear_label);\n        layout->addWidget(Linear_doubleSpinBox);\n        layout->addWidget(Angular_label);\n        layout->addWidget(Angular_doubleSpinBox);\n\n        QWidget::setLayout(layout);\n\n        QObject::connect(Up_Button, SIGNAL(clicked()), this, SLOT(on_Up_Button_pressed()));\n        QObject::connect(Down_Button, SIGNAL(clicked()), this, SLOT(on_Down_Button_pressed()));\n        QObject::connect(Left_Button, SIGNAL(clicked()), this, SLOT(on_Left_Button_pressed()));\n        QObject::connect(Right_Button, SIGNAL(clicked()), this, SLOT(on_Right_Button_pressed()));\n        QObject::connect(Stop_Button, SIGNAL(clicked()), this, SLOT(on_Stop_Button_pressed()));\n        QObject::connect(Send_Button, SIGNAL(clicked(bool)), this, SLOT(on_Send_Button_clicked(bool)));\n        QObject::connect(X_doubleSpinBox, SIGNAL(valueChanged(double)), this, SLOT(on_X_doubleSpinBox_valueChanged(double)));\n        QObject::connect(Y_doubleSpinBox, SIGNAL(valueChanged(double)), this, SLOT(on_Y_doubleSpinBox_valueChanged(double)));\n        QObject::connect(Linear_doubleSpinBox, SIGNAL(valueChanged(double)), this, SLOT(on_Linear_doubleSpinBox_valueChanged(double)));\n        QObject::connect(Angular_doubleSpinBox, SIGNAL(valueChanged(double)), this, SLOT(on_Angular_doubleSpinBox_valueChanged(double)));\n    }\n\n    void QtTeleopPanel::on_Up_Button_pressed()\n    {\n        geometry_msgs::Twist cmd_vel;\n        cmd_vel.linear.x = this->Linear_doubleSpinBox->value();\n        cmd_vel.angular.z = this->Angular_doubleSpinBox->value();\n\n        cmd_vel_pub_.publish(cmd_vel);\n    }\n\n    void QtTeleopPanel::on_Down_Button_pressed()\n    {\n        geometry_msgs::Twist cmd_vel;\n        cmd_vel.linear.x = -this->Linear_doubleSpinBox->value();\n        cmd_vel.angular.z = -this->Angular_doubleSpinBox->value();\n\n        cmd_vel_pub_.publish(cmd_vel);\n    }\n\n    void QtTeleopPanel::on_Left_Button_pressed()\n    {\n        geometry_msgs::Twist cmd_vel;\n        cmd_vel.linear.x = 0.0;\n        cmd_vel.angular.z = this->Angular_doubleSpinBox->value();\n\n        cmd_vel_pub_.publish(cmd_vel);\n    }\n\n    void QtTeleopPanel::on_Right_Button_pressed()\n    {\n        geometry_msgs::Twist cmd_vel;\n        cmd_vel.linear.x = 0.0;\n        cmd_vel.angular.z = -this->Angular_doubleSpinBox->value();\n\n        cmd_vel_pub_.publish(cmd_vel);\n    }\n\n    void QtTeleopPanel::on_Stop_Button_pressed()\n    {\n        geometry_msgs::Twist cmd_vel;\n        cmd_vel.linear.x = 0.0;\n        cmd_vel.angular.z = 0.0;\n\n        cmd_vel_pub_.publish(cmd_vel);\n    }\n\n    void QtTeleopPanel::on_Send_Button_clicked(bool checked)\n    {\n    }\n\n    void QtTeleopPanel::on_X_doubleSpinBox_valueChanged(double arg1)\n    {\n    }\n\n    void QtTeleopPanel::on_Y_doubleSpinBox_valueChanged(double arg1)\n    {\n    }\n\n    void QtTeleopPanel::on_Linear_doubleSpinBox_valueChanged(double arg1)\n    {\n    }\n\n    void QtTeleopPanel::on_Angular_doubleSpinBox_valueChanged(double arg1)\n    {\n    }\n\n} // namespae\n\n#include <pluginlib/class_list_macros.h>\nPLUGINLIB_EXPORT_CLASS(rviz_teleop_plugin::QtTeleopPanel, rviz::Panel)\n/********************************************************************************\n** Form generated from reading UI file 'qt_teleop.ui'\n**\n** Created by: Qt User Interface Compiler version 5.12.8\n**\n** WARNING! All changes made in this file will be lost when recompiling UI file!\n********************************************************************************/\n\n// #ifndef QT_TELEOP_UI_H\n// #define QT_TELEOP_UI_H\n\n#ifndef QT_TELEOP_UI_H\n#define QT_TELEOP_UI_H\n\n#include <QtCore/QVariant>\n#include <QtWidgets/QAction>\n#include <QtWidgets/QApplication>\n#include <QtWidgets/QDoubleSpinBox>\n#include <QtWidgets/QLabel>\n#include <QtWidgets/QMainWindow>\n#include <QtWidgets/QMenu>\n#include <QtWidgets/QMenuBar>\n#include <QtWidgets/QPushButton>\n#include <QtWidgets/QStatusBar>\n#include <QtWidgets/QWidget>\n#include <QtWidgets/QSlider>\n#include <QtWidgets/QVBoxLayout>\n\n\n#include <ros/ros.h>\n#include <geometry_msgs/Twist.h>\n#include <rviz/panel.h>\n\n// QT_BEGIN_NAMESPACE\n\nnamespace rviz_teleop_plugin\n{\n    // class QtTeleopPanel : public QWidget\n    class QtTeleopPanel : public rviz::Panel\n    {\n        Q_OBJECT\n\n    public:\n        QtTeleopPanel(QWidget *parent = 0);\n        // ~QtTeleopPanel();\n\n    public Q_SLOTS:\n        void on_Up_Button_pressed();\n        void on_Down_Button_pressed();\n        void on_Left_Button_pressed();\n        void on_Right_Button_pressed();\n        void on_Stop_Button_pressed();\n        void on_Send_Button_clicked(bool checked);\n        void on_X_doubleSpinBox_valueChanged(double arg1);\n        void on_Y_doubleSpinBox_valueChanged(double arg1);\n        void on_Linear_doubleSpinBox_valueChanged(double arg1);\n        void on_Angular_doubleSpinBox_valueChanged(double arg1);\n\n    private:\n        ros::NodeHandle nh_;\n        ros::Publisher cmd_vel_pub_;\n\n        QWidget *centralwidget;\n        QLabel *X_label;\n        QDoubleSpinBox *X_doubleSpinBox;\n        QLabel *Y_label;\n        QDoubleSpinBox *Y_doubleSpinBox;\n        QPushButton *Send_Button;\n        QPushButton *Up_Button;\n        QPushButton *Stop_Button;\n        QPushButton *Down_Button;\n        QPushButton *Left_Button;\n        QPushButton *Right_Button;\n        QDoubleSpinBox *Linear_doubleSpinBox;\n        QLabel *Linear_label;\n        QLabel *Angular_label;\n        QDoubleSpinBox *Angular_doubleSpinBox;\n        QMenuBar *menubar;\n        QMenu *menuteleop_panel;\n        QStatusBar *statusbar;\n    };\n\n} // end namespace\n\n// QT_END_NAMESPACE\n\n#endif // QT_TELEOP_UI_H",
    "Building example library of ROS 2\n\nI am trying to build the example repository of ROS 2 Humble according to the tutorial. But the command colcon build --symlink-install gives the following error for all python packages. I am on Ubuntu 22.04.\n\nWhat could be the reason for that?\n\nFailed   <<< examples_rclpy_pointcloud_publisher [0.86s, exited with code 1]\n    --- stderr: launch_testing_examples\n    Traceback (most recent call last):\n      File \"/usr/lib/python3/dist-packages/colcon_core/executor/__init__.py\", line 91, in __call__\n        rc = await self.task(*args, **kwargs)\n      File \"/usr/lib/python3/dist-packages/colcon_core/task/__init__.py\", line 93, in __call__\n        return await task_method(*args, **kwargs)\n      File \"/usr/lib/python3/dist-packages/colcon_ros/task/ament_python/build.py\", line 51, in build\n        setup_py_data = get_setup_data(self.context.pkg, env)\n      File \"/usr/lib/python3/dist-packages/colcon_core/task/python/__init__.py\", line 20, in get_setup_data\n        return dict(pkg.metadata[key](env))\n      File \"/usr/lib/python3/dist-packages/colcon_ros/package_augmentation/ros_ament_python.py\", line 57, in getter\n        return get_setup_information(\n      File \"/usr/lib/python3/dist-packages/colcon_python_setup_py/package_identification/python_setup_py.py\", line 241, in get_setup_information\n        _setup_information_cache[hashable_env] = _get_setup_information(\n      File \"/usr/lib/python3/dist-packages/colcon_python_setup_py/package_identification/python_setup_py.py\", line 293, in _get_setup_information\n        return ast.literal_eval(output)\n      File \"/usr/lib/python3.10/ast.py\", line 64, in literal_eval\n        node_or_string = parse(node_or_string.lstrip(\" \\t\"), mode='eval')\n      File \"/usr/lib/python3.10/ast.py\", line 50, in parse\n        return compile(source, filename, mode, flags,\n      File \"<unknown>\", line 1\n        {'package_data': {}, 'dist_files': [], 'src_root': None, 'dependency_links': [], 'setup_requires': [], 'eager_resources': None, 'entry_points': {'console_scripts': []}, 'exclude_package_data': None, 'extras_require': {}, 'include_package_data': None, 'install_requires': ['setuptools'], 'namespace_packages': None, 'packages': ['launch_testing_examples'], 'python_requires': None, 'test_loader': None, 'test_runner': None, 'test_suite': None, 'tests_require': ['pytest'], 'use_2to3': None, 'zip_safe': True, 'verbose': 1, 'dry_run': 0, 'help': 0, 'command_packages': None, 'script_name': 'setup.py', 'script_args': ['--dry-run'], 'command_options': {'develop': {'script_dir': ('setup.cfg', '$base/lib/launch_testing_examples')}, 'install': {'install_scripts': ('setup.cfg', '$base/lib/launch_testing_examples')}}, 'package_dir': {}, 'py_modules': None, 'libraries': None, 'headers': None, 'ext_package': None, 'include_dirs': None, 'extra_path': None, 'scripts': None, 'data_files': [('share/ament_index/resource_index/packages', ['resource/launch_testing_examples']), ('share/launch_testing_examples', ['package.xml'])], 'password': '', 'command_obj': {}, 'have_run': {}, 'want_user_cfg': True, 'metadata': {'name': 'launch_testing_examples', 'version': '0.15.1', 'author': None, 'author_email': None, 'maintainer': 'Aditya Pande, Shane Loretz', 'maintainer_email': 'aditya.pande@openrobotics.org, shane@openrobotics.org', 'url': None, 'license': 'Apache License 2.0', 'description': 'Examples of simple launch tests', 'long_description': None, 'keywords': None, 'platforms': None, 'classifiers': None, 'download_url': None, 'provides': None, 'requires': None, 'obsoletes': None, 'long_description_content_type': None, 'project_urls': {}, 'license_file': None, '_normalized_install_requires': {'setuptools': <Requirement('setuptools')>}, '_normalized_extras_require': {}}}\nn    SyntaxError: invalid syntax\nI reinstalled ROS 2 but it did not resolve the problem. What else could I try?\n\n",
    "How to deserialize ROS messages from Bag to ROS defined types in C++?\n\nI want to deserialize messages from a Bag file and publishing part of their contents with ROS for further processing.\n\nI read a bagfile with the ROS C++ API. I know exactly the content (topic names and types) of my messages at compile time, such that I want to deserialize it into common ROS defined classes (e.g. the ones defined here https://docs.ros.org/en/noetic/api/sensor_msgs/html/index-msg.html) at runtime. Here some code:\n\n#include <rosbag/bag.h>\n#include <rosbag/view.h>\n//other content\n  rosbag::Bag bag;\n  bag.open(\"foo.bag\", rosbag::bagmode::Read);\n\n  std::vector<std::string> topics{\"camera1/camera_info\"};\n\n  rosbag::View view(bag, rosbag::TopicQuery(topics));\n\n  for(auto const m : view)\n  {\n      const std::string& topic_name = m.getTopic();\n      std::cout << topic_name << std::endl;\n      std_msgs::String::ConstPtr s = m.instantiate<std_msgs::String>();\n      if (s != NULL)\n          std::cout << s->data << std::endl;\n \n      // I want the data in s as a string to be serialized into an instance\n      // of the type CameraInfo located in \n      // path/ros/distro/sensor_msgs/CameraInfo.h shipping with ROS.\n      CameraInfo ci = is_there_any_os_solution(s); //?\n  }\n\n  bag.close();\nI tried to find something on this direction but I just found libraries deserializing contents unknown at compile time.\n\nCould anyone give some hints?",
    "Can't find Apply Force Torque plugin in gazebo garden\n\nEnvironment: OS: Linux Ubuntu 22.04 gazebo version: garden\n\nProblem: When I\u2018m following the tutorial here, I can't find Apply Force Torque plugin\nDoes my gazebo need update or there's something wrong?",
    "Set interface name without msg in ROS2\n\nWhen creating custom message types in ROS1 (noetic), I can store the *.msg files in a subfolder named msg. In the CMake file, I just type the name of the file without msg/ in add_message_files(...). The resulting message type is named as <pkg_name>/<file-name (without .msg)>\n\nWhen creating interfaces in ROS2 (foxy), I have to type the file name in my CMake file including the relative path in rosidl_generate_interfaces(...) like msg/<filename.msg>. The resulting interface name also includes msg: <pkg_name>/msg/<file-name (without .msg)>, but actually I don't want the exact path as an interface name.\n\nSo my question is: Is it possible to store the files in the msg folder for a better folder structure but set the name of the resulting interface differently?",
    "Moveit failed to find the robot model when using manual moveit configuration\n\nI'm facing an issue on moveit when I try to manually configure the robot model in moveit. I'm getting errors in the robot model when trying to launch moveit launch file in the following sequence below and I mimic joint 4 in the opposite direction to perform a grasp using a gripper in my robot model. Here is my GitHub repo\n\nThis is my output in the terminal when I run in a sequence gazebo.launch.py, controller.launch.py followed by moveit.launch.py.\n\ndamarla@damarla:~/ros2control$ ros2 launch arm_robot_moveit moveit.launch.py \n[INFO] [launch]: All log files can be found below /home/damarla/.ros/log/2023-09-06-17-00-22-607579-damarla-11097\n[INFO] [launch]: Default logging verbosity is set to INFO\nWARNING:root:Cannot infer URDF from `/home/damarla/ros2control/install/arm_robot_moveit/share/arm_robot_moveit`. -- using config/arm_robot.urdf\nWARNING:root:Cannot infer SRDF from `/home/damarla/ros2control/install/arm_robot_moveit/share/arm_robot_moveit`. -- using config/arm_robot.srdf\n[INFO] [move_group-1]: process started with pid [11102]\n[INFO] [rviz2-2]: process started with pid [11104]\n[rviz2-2] Warning: Ignoring XDG_SESSION_TYPE=wayland on Gnome. Use QT_QPA_PLATFORM=wayland to run on Wayland anyway.\n[move_group-1] [INFO] [1694012423.431871548] [moveit_rdf_loader.rdf_loader]: Loaded robot model in 0 seconds\n[move_group-1] [INFO] [1694012423.433388806] [moveit_robot_model.robot_model]: Loading robot model 'arm_robot'...\n[move_group-1] [INFO] [1694012423.434358278] [moveit_robot_model.robot_model]: No root/virtual joint specified in SRDF. Assuming fixed joint\n[move_group-1] [INFO] [1694012423.865155745] [moveit_kinematics_base.kinematics_base]: Using position only ik\n[move_group-1] [INFO] [1694012425.260442551] [moveit_ros.planning_scene_monitor.planning_scene_monitor]: Publishing maintained planning scene on 'monitored_planning_scene'\n[move_group-1] [INFO] [1694012425.260720014] [moveit.ros_planning_interface.moveit_cpp]: Listening to 'joint_states' for joint states\n[move_group-1] [INFO] [1694012425.262647894] [moveit_ros.current_state_monitor]: Listening to joint states on topic 'joint_states'\n[move_group-1] [INFO] [1694012425.263455907] [moveit_ros.planning_scene_monitor.planning_scene_monitor]: Listening to '/attached_collision_object' for attached collision objects\n[move_group-1] [INFO] [1694012425.263483366] [moveit_ros.planning_scene_monitor.planning_scene_monitor]: Starting planning scene monitor\n[move_group-1] [INFO] [1694012425.264933042] [moveit_ros.planning_scene_monitor.planning_scene_monitor]: Listening to '/planning_scene'\n[move_group-1] [INFO] [1694012425.264966412] [moveit_ros.planning_scene_monitor.planning_scene_monitor]: Starting world geometry update monitor for collision objects, attached objects, octomap updates.\n[move_group-1] [INFO] [1694012425.265801550] [moveit_ros.planning_scene_monitor.planning_scene_monitor]: Listening to 'collision_object'\n[move_group-1] [INFO] [1694012425.266665953] [moveit_ros.planning_scene_monitor.planning_scene_monitor]: Listening to 'planning_scene_world' for planning scene world geometry\n[move_group-1] [WARN] [1694012425.267298621] [moveit.ros.occupancy_map_monitor.middleware_handle]: Resolution not specified for Octomap. Assuming resolution = 0.1 instead\n[move_group-1] [ERROR] [1694012425.267328149] [moveit.ros.occupancy_map_monitor.middleware_handle]: No 3D sensor plugin(s) defined for octomap updates\n[move_group-1] [ERROR] [1694012425.381326649] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012425.574183704] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [INFO] [1694012427.898257942] [moveit.ros_planning_interface.moveit_cpp]: Loading planning pipeline 'pilz_industrial_motion_planner'\n[move_group-1] [ERROR] [1694012427.899235651] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.899962334] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900000829] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900025056] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900047270] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900069015] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900110126] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900134147] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900205442] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900238005] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900260457] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900281975] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900303337] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900324611] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012427.900346972] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [INFO] [1694012427.914311507] [moveit.pilz_industrial_motion_planner.joint_limits_aggregator]: Reading limits from namespace robot_description_planning\n[move_group-1] [INFO] [1694012427.929095164] [moveit.pilz_industrial_motion_planner]: Available plugins: pilz_industrial_motion_planner/PlanningContextLoaderCIRC pilz_industrial_motion_planner/PlanningContextLoaderLIN pilz_industrial_motion_planner/PlanningContextLoaderPTP \n[move_group-1] [INFO] [1694012427.929129872] [moveit.pilz_industrial_motion_planner]: About to load: pilz_industrial_motion_planner/PlanningContextLoaderCIRC\n[move_group-1] [INFO] [1694012427.935363709] [moveit.pilz_industrial_motion_planner]: Registered Algorithm [CIRC]\n[move_group-1] [INFO] [1694012427.935999212] [moveit.pilz_industrial_motion_planner]: About to load: pilz_industrial_motion_planner/PlanningContextLoaderLIN\n[move_group-1] [INFO] [1694012427.938983840] [moveit.pilz_industrial_motion_planner]: Registered Algorithm [LIN]\n[move_group-1] [INFO] [1694012427.939539179] [moveit.pilz_industrial_motion_planner]: About to load: pilz_industrial_motion_planner/PlanningContextLoaderPTP\n[move_group-1] [INFO] [1694012427.942555583] [moveit.pilz_industrial_motion_planner]: Registered Algorithm [PTP]\n[move_group-1] [INFO] [1694012427.943143147] [moveit.ros_planning.planning_pipeline]: Using planning interface 'Pilz Industrial Motion Planner'\n[move_group-1] [INFO] [1694012427.949306191] [moveit.ros_planning_interface.moveit_cpp]: Loading planning pipeline 'chomp'\n[move_group-1] [ERROR] [1694012427.951833312] [moveit.ros_planning.planning_pipeline]: Exception while loading planner 'chomp_interface/CHOMPPlanner': According to the loaded plugin descriptions the class chomp_interface/CHOMPPlanner with base class type planning_interface::PlannerManager does not exist. Declared types are  ompl_interface/OMPLPlanner pilz_industrial_motion_planner/CommandPlannerAvailable plugins: ompl_interface/OMPLPlanner, pilz_industrial_motion_planner/CommandPlanner\n[move_group-1] [INFO] [1694012427.961000062] [moveit_ros.fix_workspace_bounds]: Param 'chomp.default_workspace_bounds' was not set. Using default value: 10.000000\n[move_group-1] [INFO] [1694012427.961832365] [moveit_ros.fix_start_state_bounds]: Param 'chomp.start_state_max_bounds_error' was set to 0.100000\n[move_group-1] [INFO] [1694012427.962377647] [moveit_ros.fix_start_state_bounds]: Param 'chomp.start_state_max_dt' was not set. Using default value: 0.500000\n[move_group-1] [INFO] [1694012427.962963161] [moveit_ros.fix_start_state_collision]: Param 'chomp.start_state_max_dt' was not set. Using default value: 0.500000\n[move_group-1] [INFO] [1694012427.963561446] [moveit_ros.fix_start_state_collision]: Param 'chomp.jiggle_fraction' was set to 0.050000\n[move_group-1] [INFO] [1694012427.964080448] [moveit_ros.fix_start_state_collision]: Param 'chomp.max_sampling_attempts' was not set. Using default value: 100\n[move_group-1] [INFO] [1694012427.964931502] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Add Time Parameterization'\n[move_group-1] [INFO] [1694012427.965812754] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Resolve constraint frames to robot links'\n[move_group-1] [INFO] [1694012427.968255337] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Fix Workspace Bounds'\n[move_group-1] [INFO] [1694012427.968278133] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Fix Start State Bounds'\n[move_group-1] [INFO] [1694012427.968284304] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Fix Start State In Collision'\n[move_group-1] [INFO] [1694012427.968290491] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Fix Start State Path Constraints'\n[move_group-1] [ERROR] [1694012427.978163778] [moveit.ros_planning_interface.moveit_cpp]: Failed to initialize planning pipeline 'chomp'.\n[move_group-1] [INFO] [1694012427.984607682] [moveit.ros_planning_interface.moveit_cpp]: Loading planning pipeline 'ompl'\n[move_group-1] [ERROR] [1694012428.017916006] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [INFO] [1694012428.115319535] [moveit.ros_planning.planning_pipeline]: Using planning interface 'OMPL'\n[move_group-1] [INFO] [1694012428.119716411] [moveit_ros.fix_workspace_bounds]: Param 'ompl.default_workspace_bounds' was not set. Using default value: 10.000000\n[move_group-1] [INFO] [1694012428.120413441] [moveit_ros.fix_start_state_bounds]: Param 'ompl.start_state_max_bounds_error' was set to 0.100000\n[move_group-1] [INFO] [1694012428.120878620] [moveit_ros.fix_start_state_bounds]: Param 'ompl.start_state_max_dt' was not set. Using default value: 0.500000\n[move_group-1] [INFO] [1694012428.121226722] [moveit_ros.fix_start_state_collision]: Param 'ompl.start_state_max_dt' was not set. Using default value: 0.500000\n[move_group-1] [INFO] [1694012428.121546516] [moveit_ros.fix_start_state_collision]: Param 'ompl.jiggle_fraction' was set to 0.050000\n[move_group-1] [INFO] [1694012428.121859004] [moveit_ros.fix_start_state_collision]: Param 'ompl.max_sampling_attempts' was not set. Using default value: 100\n[move_group-1] [INFO] [1694012428.122177815] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Add Time Parameterization'\n[move_group-1] [INFO] [1694012428.122500968] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Resolve constraint frames to robot links'\n[move_group-1] [INFO] [1694012428.122855972] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Fix Workspace Bounds'\n[move_group-1] [INFO] [1694012428.123218650] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Fix Start State Bounds'\n[move_group-1] [INFO] [1694012428.123578251] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Fix Start State In Collision'\n[move_group-1] [INFO] [1694012428.123946388] [moveit.ros_planning.planning_pipeline]: Using planning request adapter 'Fix Start State Path Constraints'\n[move_group-1] [ERROR] [1694012428.191827479] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [FATAL] [1694012428.218998432] [moveit_ros.trajectory_execution_manager]: Exception while loading controller manager 'moveit_simple_controller/MoveItSimpleControllerManager': According to the loaded plugin descriptions the class moveit_simple_controller/MoveItSimpleControllerManager with base class type moveit_controller_manager::MoveItControllerManager does not exist. Declared types are  moveit_simple_controller_manager/MoveItSimpleControllerManager\n[move_group-1] [ERROR] [1694012428.219724910] [moveit_ros.trajectory_execution_manager]: Failed to reload controllers: `controller_manager_` does not exist.\n[move_group-1] [INFO] [1694012428.221761439] [moveit_ros.trajectory_execution_manager]: Trajectory execution is managing controllers\n[move_group-1] [INFO] [1694012428.223782146] [move_group.move_group]: MoveGroup debug mode is ON\n[move_group-1] [INFO] [1694012428.307856730] [move_group.move_group]: \n[move_group-1] \n[move_group-1] ********************************************************\n[move_group-1] * MoveGroup using: \n[move_group-1] *     - ApplyPlanningSceneService\n[move_group-1] *     - ClearOctomapService\n[move_group-1] *     - CartesianPathService\n[move_group-1] *     - ExecuteTrajectoryAction\n[move_group-1] *     - GetPlanningSceneService\n[move_group-1] *     - KinematicsService\n[move_group-1] *     - MoveAction\n[move_group-1] *     - MotionPlanService\n[move_group-1] *     - QueryPlannersService\n[move_group-1] *     - StateValidationService\n[move_group-1] ********************************************************\n[move_group-1] \n[move_group-1] [INFO] [1694012428.308015960] [moveit_move_group_capabilities_base.move_group_context]: MoveGroup context using planning plugin ompl_interface/OMPLPlanner\n[move_group-1] [INFO] [1694012428.308038801] [moveit_move_group_capabilities_base.move_group_context]: MoveGroup context initialization complete\n[move_group-1] Loading 'move_group/ApplyPlanningSceneService'...\n[move_group-1] Loading 'move_group/ClearOctomapService'...\n[move_group-1] Loading 'move_group/MoveGroupCartesianPathService'...\n[move_group-1] Loading 'move_group/MoveGroupExecuteTrajectoryAction'...\n[move_group-1] Loading 'move_group/MoveGroupGetPlanningSceneService'...\n[move_group-1] Loading 'move_group/MoveGroupKinematicsService'...\n[move_group-1] Loading 'move_group/MoveGroupMoveAction'...\n[move_group-1] Loading 'move_group/MoveGroupPlanService'...\n[move_group-1] Loading 'move_group/MoveGroupQueryPlannersService'...\n[move_group-1] Loading 'move_group/MoveGroupStateValidationService'...\n[move_group-1] \n[move_group-1] You can start planning now!\n[move_group-1] \n[move_group-1] [ERROR] [1694012428.345117932] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012428.481281894] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012428.581690115] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012428.690183074] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012428.806492246] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012428.928206957] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012429.069404377] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012429.234023061] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012429.362592711] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012429.495362228] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012429.602467505] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012429.725921759] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012429.856541282] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012429.977396568] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012430.090659941] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012430.203335063] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012430.323374128] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012430.433809989] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012430.549070609] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012430.784446826] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012430.905078852] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012431.018402346] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012431.142214877] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012431.251748896] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012431.365726843] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012431.499175785] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012431.631390811] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012431.752993154] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012431.861795521] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012431.968442148] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012432.092238312] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012432.208372721] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012432.322000701] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\n[move_group-1] [ERROR] [1694012432.442328421] [moveit_robot_model.robot_model]: Joint 'joint_5_mimic' not found in model 'arm_robot'\nThanks in Advance Adithya",
    "Controlling Arduino device from ROS node\n\nHow can a motor control node (which will subscribe to the cmd_vel topic) be linked to my robot hardware?\n\nMy first idea is to communicate via byte signal like\n\n|0000|0000|0000|0000|0000|\n\nas\n\n|ID|Motor_1|Motor_2|Motor_3|Motor_4|\n\nArduino will be used as the low level hardware control, and receive the signal and information via byte using a nrf240L1 module. Would this work?",
    "How to add a header with timestamp to numpy_msg?\n\nI am using the rospy with numpy tutorial to create a publisher and subscriber that send numpy arrays to listener that uses an ApproximateTimeSynchronizer. However, I receive an error when I try to instantiate the listener:\n\n[WARN] [1693265081.824595]: Cannot use message filters with non-stamped messages. Use the 'allow_headerless' constructor option to auto-assign ROS time to headerless messages.\nSo my understanding is that my message must contain a header with a time stamp. Is it possible to add a header with a timestamp to a numpy_msg? And if so, how do I this?\n\nMy message publisher construction:\n\nfrom rospy_tutorials.msg import Floats\nfrom rospy.numpy_msg import numpy_msg\n\nl_lines_pub = rospy.Publisher('/l_lines_output', numpy_msg(Floats), queue_size=10)\nr_lines_pub = rospy.Publisher('/r_lines_output', numpy_msg(Floats), queue_size=10)\n\nl_lines_msg = np.asarray(ARRAY1)\nr_lines_msg = np.asarray(ARRAY2)\n\nl_lines_pub.publish(l_lines_msg)\nr_lines_pub.publish(r_lines_msg)\nAnd my subscriber looks like:\n\nl_lines_sub = Subscriber('/l_lines_output', numpy_msg(Floats))\nr_lines_sub = Subscriber('/r_lines_output', numpy_msg(Floats))\n\nats = ApproximateTimeSynchronizer([l_lines_sub, r_lines_sub], queue_size=5, slop=0.015)\nats.registerCallback(gotData)\nThanks!",
    "How to ensure colcon does not run doxygen\n\nI noticed upon building Gazebo Garden that it runs doxygen. This takes a significant time. Is there a way to disable this?",
    "Rosdep installing python dependencies as root seems to break the installation\n\nI started with ROS2 for robotic development. As far as I understand one must specify the dependencies of the code in package.xml (for example all python imports) and rosdep will install these dependencies for you using sudo. Pip warns against this type of install saying that the installation may break.\n\nI use modules from Adafruit-Blinka (board). Blinka is specified in the <exec-depend> tag and it is recognized (it is in python.yaml). Rosdep install Adafruit-Blinka as root. Next I run the code and as soon as board is imported the code crashes with the following error: Module not found: 'hid' (full error message at the end).\n\nI can reproduce this problem with a simple python program containing one line: import board. It crashes in the same way as the ros program (Module not found: 'hid'). When I first sudo pip uninstall Adafruit-Blinka and next pip install Adafruit_Blinka (without sudo), I can import board without problems.\n\nIs it correct to assume that a sudo pip install causes module 'hid' not to be found? If so, is there a workaround so that rosdep does not install the modules as root?\n\nFull error message:\n\n$ ros2 run sensor_vl53l1x talker\nTraceback (most recent call last):\n  File \"/media/i-files/home/arnold/development/ros2/bottie/install/sensor_vl53l1x/lib/sensor_vl53l1x/talker\", line 33, in <module>\n    sys.exit(load_entry_point('sensor-vl53l1x==0.0.0', 'console_scripts', 'talker')())\n  File \"/media/i-files/home/arnold/development/ros2/bottie/install/sensor_vl53l1x/lib/sensor_vl53l1x/talker\", line 25, in importlib_load_entry_point\n    return next(matches).load()\n  File \"/usr/lib/python3.10/importlib/metadata/__init__.py\", line 171, in load\n    module = import_module(match.group('module'))\n  File \"/usr/lib/python3.10/importlib/__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 1050, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\n  File \"/media/i-files/home/arnold/development/ros2/bottie/install/sensor_vl53l1x/lib/python3.10/site-packages/sensor_vl53l1x/vl53l1x_publisher.py\", line 5, in <module>\n    import board\n  File \"/usr/local/lib/python3.10/dist-packages/board.py\", line 22, in <module>\n    from adafruit_blinka.agnostic import board_id, detector\n  File \"/usr/local/lib/python3.10/dist-packages/adafruit_blinka/agnostic/__init__.py\", line 21, in <module>\n    chip_id = detector.chip.id\n  File \"/usr/local/lib/python3.10/dist-packages/adafruit_platformdetect/chip.py\", line 90, in id\n    import hid\nModuleNotFoundError: No module named 'hid'\n[ros2run]: Process exited with failure 1",
    "E: Unable to locate package ros-galactic-ros-gz\n\nI am trying to install (ignition) Gazebo Edifice on my Ubuntu 20.04 system which already has ROS2 Galactic installed on it.\n\nI'm using the command sudo apt-get install ros-galactic-ros-gz as mentioned here. But apt says it's not able to find the binaries as shown below. enter image description here\n\nHow should I go about this?",
    "Gazebo ignition (garden/fortress) attaching model to arm\n\nI'm trying to attach a moving object with inertia to a robotic arm. I saw that there are plugins for detaching joints but is there a way to do the opposite and attach one model to another via a joint? preferably it would maintain its velocity and angular velocity till acted on by the arm. If not, then could 2 separate SDF models be designed one with the model attached, then swap one model for the other during simulation?",
    "How to build a python node as a component?\n\nI have a python node that I would like to add to a composable node container.\n\nI could not find any documentation on the python equivalent to the rclcpp_components_register_node cmake command. I would assume that I would need to adjust the python code of the node as well as the setup.py file.\n\nNaively, I have just tried to add the executable in the ComposableNode():\n\nComposableNode(\n    package=\"foo\",\n    plugin=\"foo_node\",\n    name=\"foo\",\n),\nbut got the following error when launching:\n\n[ERROR] [bar.container]: Could not find requested resource in ament index\n[ERROR] [launch_ros.actions.load_composable_nodes]: Failed to load node 'foo_node' of type 'foo_node' in container '/bar/container': Could not find requested resource in ament index\nIt would be great if you could help me figure this out. Thanks.",
    "Path and trajectory planning for a holonomic drivetrain with non zero starting velocities\n\nWhat path planning algorithms are typically used for holonomic drivetrains that can avoid collisions while also starting with non zero velocities. I am working on a project where I am planning to have a robot avoid common household objects, drive around them, but do so in a way that it can be on the fly may result in the robot having a non zero starting velocity. I have looked into A* and that could work when using cubic or quintic splines as that could account for the current velocity, but when accounting for more sophisticated object avoidance using something like rrt, I am unsure as to how that would work with a non zero starting velocity. Thank you!",
    "How is TF2 supposed to be set up for an Ackerman steering robot with Navigation2\n\nHello, I am currently working with a physical, ackermann steering robot (car like). Right now my TF is setup with base_link on the ground between the two rear wheels. However, I notice strange behavior with navigation2, including trying to steer but not move. I then wondered whether my tf is setup correctly, maybe I need to give navigation 2 a link at the center of my robot, or between the two front wheels ? I didn't find anything online so I think it would be great to have something detailed on it. In navigation2 I use a MPPI controller with Reeds_Shepp motion model, the path seems to be correctly generated and every link in the parameters is setup to base_link. Also, base_link is setup as X forward,Y on the left and Z up, and I work on Humble. I hope someone will be able to help me, tell me if you need more info and I'll try to give them as fast as possible !",
    "How to add to the library search path for custom plugins\n\nGazebo Answers logo\n\nHi,\n\nI'm running a gz-sim (Garden) simulation starting from PX4 where I want to include a custom plugin into my model. The model works if I copy-paste the .so file to any of the default search locations, i.e.\n\n- /home/anton/.gz/sim/plugins/\n- /usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/\n- /home/anton/.ignition/gazebo/plugins/\nHowever, I'd prefer to set an environment variable (as in Gazebo-Classic) to tell gazebo to search for additional plugins. In gazebo-classic I could do\n\nexport GAZEBO_PLUGIN_PATH=\"$PWD:$GAZEBO_PLUGIN_PATH\"\nbut this doesn't seem to work in gz-sim garden.\n\nIs there any other way to add to the library search path of gz-sim?",
    "Add files to be loaded when ROS node is launched\n\nRosanswers logo\n\nHello ROS community,\n\nI have a python code for a hardware device (radar) that uses a parameters.cfg file for hardware settings (independantly of ROS).\n\nIn the same code, I am creating a ROS node so that the device publishes its collected data.\n\nWhen I use a launch file, the basic format is as follows :\n\n<launch>\n <node pkg=\"radar_uart\" \n    name=\"radar\" \n    type=\"radar.py\" \n    output=\"screen\"> \n </node>\n</launch>\nBut when I do my $roslaunch radar radar.launch command, I get the error that it could not find the config file : [ No such file or directory 'radar_config30hz.cfg' ]\n\nI tested by adding this line to the launch file, so the config would be loaded when launching the node :\n\n<rosparam file=\"$(find radar)/src/radar_config30hz.cfg\" command=\"load\"/>\nIt is still not working and the new error is : [ Ressource not found: your_package_name ]\n\nPS : As said the file is a not a dynamic reconfigure file, it just contains parameters to be used by the radar Hardware.\n\nPlease enlighten me on how to simly make the ros node find the file and use it when it launches.\n\nThanks and regards,\n\nLilia"
]